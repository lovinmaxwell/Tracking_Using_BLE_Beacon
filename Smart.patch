Index: app/src/main/res/drawable-hdpi/ic_menu_gallery.xml
===================================================================
--- app/src/main/res/drawable-hdpi/ic_menu_gallery.xml	(date 1501671703000)
+++ app/src/main/res/drawable-hdpi/ic_menu_gallery.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M22,16V4c0,-1.1 -0.9,-2 -2,-2H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2zm-11,-4l2.03,2.71L16,11l4,5H8l3,-4zM2,6v14c0,1.1 0.9,2 2,2h14v-2H4V6H2z" />
-</vector>
Index: app/src/main/res/menu/activity_map_page_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_map_page_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_map_page_drawer.xml	(date 1501671703000)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group android:checkableBehavior="single">
-
-        <item
-            android:id="@+id/nav_signout"
-            android:title="SignOut" />
-
-    </group>
-
-
-</menu>
Index: app/src/main/res/layout/activity_map_page.xml
===================================================================
--- app/src/main/res/layout/activity_map_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_map_page.xml	(date 1501671703000)
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/drawer_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:openDrawer="start">
-    <include android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <include
-        layout="@layout/app_bar_map__beacon"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_map_page"
-        app:menu="@menu/activity_map_page_drawer" />
-
-</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/layout/item_action_beacon.xml
===================================================================
--- app/src/main/res/layout/item_action_beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/item_action_beacon.xml	(date 1501671703000)
@@ -1,140 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:background="@drawable/appblue">
-
-    <data>
-        <variable
-            name="viewModel"
-            type="com.ellipsonic.www.student_tracking.viewModel.ActionBeaconViewModel" />
-    </data>
-
-    <FrameLayout
-        android:id="@+id/content_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:background="@color/light_grey" />
-
-        <RelativeLayout
-            android:id="@+id/container_action"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="6dp"
-            android:layout_marginRight="6dp"
-            android:clickable="true"
-            android:minHeight="60dp"
-            android:onClick="@{viewModel.onClickEdit}">
-
-            <RelativeLayout
-                android:id="@+id/container_action_name"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="4dp"
-                android:layout_marginBottom="4dp"
-                android:orientation="horizontal">
-
-                <TextView
-                    android:id="@+id/text_action_enable"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_alignParentLeft="true"
-                    android:onClick="@{viewModel.onClickEnable}"
-                    android:text="@{viewModel.enableStatus}"
-                    android:textColor="@color/hn_orange"
-                    android:textSize="@dimen/text_small_body" />
-
-                <TextView
-                    android:id="@+id/text_action_name"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_alignParentRight="true"
-                    android:text="@{viewModel.name}"
-                    android:textSize="@dimen/text_small_body" />
-
-            </RelativeLayout>
-
-            <LinearLayout
-                android:id="@+id/container_action_action"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_below="@+id/container_action_name"
-                android:orientation="horizontal">
-
-                <LinearLayout
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1.0"
-                    android:orientation="vertical">
-
-                    <TextView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginRight="2dp"
-                        android:text="@string/mv_action_text_event"
-                        android:textSize="@dimen/text_extra_small_body" />
-
-                    <TextView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@{viewModel.eventName}"
-                        android:textSize="@dimen/text_small_body" />
-
-                </LinearLayout>
-
-                <LinearLayout
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="0.5"
-                    android:orientation="vertical">
-
-                    <TextView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginRight="2dp"
-                        android:text="@string/tab_title_beacon_action"
-                        android:textSize="@dimen/text_extra_small_body" />
-
-                    <TextView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@{viewModel.actionNames}"
-                        android:textSize="@dimen/text_small_body" />
-
-                </LinearLayout>
-            </LinearLayout>
-
-
-            <RelativeLayout
-                android:id="@+id/container_tools"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_below="@+id/container_action_action"
-                android:orientation="horizontal">
-
-                <ImageView
-                    android:id="@+id/image_action_enabled"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_alignParentLeft="true"
-                    android:onClick="@{viewModel.onClickEnable}"
-                    android:src="@{viewModel.isEnabled?@drawable/ic_alarm_on_black_18dp:@drawable/ic_alarm_off_black_18dp}" />
-
-                <ImageView
-                    android:id="@+id/image_action_delete"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:paddingLeft="6dp"
-                    android:paddingRight="6dp"
-                    android:layout_alignParentRight="true"
-                    android:onClick="@{viewModel.onClickDelete}"
-                    android:src="@drawable/ic_delete_black_18dp" />
-            </RelativeLayout>
-
-        </RelativeLayout>
-
-    </FrameLayout>
-
-</layout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/MonitoringActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/MonitoringActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/MonitoringActivity.java	(date 1501671703000)
@@ -1,277 +0,0 @@
-//package com.ellipsonic.www.student_tracking.ibeaconreference;
-//
-//import android.app.Activity;
-//import android.content.Context;
-//import android.os.Bundle;
-//import android.os.RemoteException;
-//import android.util.Log;
-//import android.view.LayoutInflater;
-//import android.view.View;
-//import android.view.ViewGroup;
-//import android.widget.BaseAdapter;
-//import android.widget.ListView;
-//import android.widget.TextView;
-//
-//import com.ellipsonic.smartstudent.R;
-//import com.ellipsonic.smartstudent.ibeacon.IBeacon;
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconConsumer;
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconManager;
-//import com.ellipsonic.smartstudent.ibeacon.MonitorNotifier;
-//import com.ellipsonic.smartstudent.ibeacon.RangeNotifier;
-//import com.ellipsonic.smartstudent.ibeacon.Region;
-//
-//import java.util.ArrayList;
-//import java.util.Collection;
-//
-//public class MonitoringActivity extends Activity implements IBeaconConsumer {
-//	protected static final String TAG = "MonitoringActivity";
-//	int a=0;
-//	int b=0;
-//	int c=0;
-//	int d=0;
-//	int e=0;
-//
-//	private ListView list = null;
-//	private BeaconAdapter adapter = null;
-//	private ArrayList<IBeacon> arrayL = new ArrayList<IBeacon>();
-//	private LayoutInflater inflater;
-//
-//	private BeaconServiceUtility beaconUtill = null;
-//	private IBeaconManager iBeaconManager = IBeaconManager.getInstanceForApplication(this);
-//
-//	@Override
-//	protected void onCreate(Bundle savedInstanceState) {
-//		super.onCreate(savedInstanceState);
-//		setContentView(R.layout.activity_monitor);
-//		beaconUtill = new BeaconServiceUtility(this);
-//		list = (ListView) findViewById(R.id.list);
-//		adapter = new BeaconAdapter();
-//		list.setAdapter(adapter);
-//		inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-//
-//	}
-//
-//	@Override
-//	protected void onDestroy() {
-//		super.onDestroy();
-//	}
-//
-//	@Override
-//	protected void onStart() {
-//		super.onStart();
-//		beaconUtill.onStart(iBeaconManager, this);
-//	}
-//
-//	@Override
-//	protected void onStop() {
-//		beaconUtill.onStop(iBeaconManager, this);
-//		super.onStop();
-//	}
-//
-//	@Override
-//	public void onIBeaconServiceConnect() {
-//
-//		iBeaconManager.setRangeNotifier(new RangeNotifier() {
-//			@Override
-//			public void didRangeBeaconsInRegion(Collection<IBeacon> iBeacons, Region region) {
-//
-//				arrayL.clear();
-//				arrayL.addAll((ArrayList<IBeacon>) iBeacons);
-//				adapter.notifyDataSetChanged();
-//			}
-//
-//		});
-//
-//		iBeaconManager.setMonitorNotifier(new MonitorNotifier() {
-//			@Override
-//			public void didEnterRegion(Region region) {
-//				Log.e("BeaconDetactorService", "didEnterRegion");
-//				// logStatus("I just saw an iBeacon for the first time!");
-//			}
-//
-//			@Override
-//			public void didExitRegion(Region region) {
-//				Log.e("BeaconDetactorService", "didExitRegion");
-//				// logStatus("I no longer see an iBeacon");
-//			}
-//
-//			@Override
-//			public void didDetermineStateForRegion(int state, Region region) {
-//				Log.e("BeaconDetactorService", "didDetermineStateForRegion");
-//				// logStatus("I have just switched from seeing/not seeing iBeacons: " + state);
-//			}
-//
-//		});
-//
-//		try {
-//			iBeaconManager.startRangingBeaconsInRegion(new Region("myRangingUniqueId", null, null, null));
-//		} catch (RemoteException e) {
-//			e.printStackTrace();
-//		}
-//
-//		try {
-//			iBeaconManager.startMonitoringBeaconsInRegion(new Region("myMonitoringUniqueId", null, null, null));
-//		} catch (RemoteException e) {
-//			e.printStackTrace();
-//		}
-//	}
-//
-//	private class BeaconAdapter extends BaseAdapter {
-//
-//		@Override
-//		public int getCount() {
-//			if (arrayL != null && arrayL.size() > 0)
-//				return arrayL.size();
-//			else
-//				return 0;
-//		}
-//
-//		@Override
-//		public IBeacon getItem(int arg0) {
-//			return arrayL.get(arg0);
-//		}
-//
-//		@Override
-//		public long getItemId(int arg0) {
-//			return arg0;
-//		}
-//
-//		@Override
-//		public View getView(int position, View convertView, ViewGroup parent) {
-//
-//			try {
-//				ViewHolder holder;
-//
-//				if (convertView != null) {
-//					holder = (ViewHolder) convertView.getTag();
-//				} else {
-//					holder = new ViewHolder(convertView = inflater.inflate(R.layout.tupple_monitoring, null));
-//				}
-//				if (arrayL.get(position).getProximityUuid() != null)
-//					holder.beacon_uuid.setText("UUID: " + arrayL.get(position).getProximityUuid());
-//
-//				holder.beacon_major.setText("Major: " + arrayL.get(position).getMajor());
-//
-//				holder.beacon_minor.setText(", Minor: " + arrayL.get(position).getMinor());
-//
-//				holder.beacon_proximity.setText("Proximity: " + arrayL.get(position).getProximity());
-//
-//				holder.beacon_rssi.setText(", Rssi: " + arrayL.get(position).getRssi());
-//
-//				holder.beacon_txpower.setText(", TxPower: " + arrayL.get(position).getTxPower());
-//
-//				//holder.beacon_range.setText("" + arrayL.get(position).getAccuracy());
-//
-//				if(arrayL.get(position).getMajor()==1)
-//				{
-//					a=a+1;
-//					holder.time.setText("Dwelling Time for Guest A:" + a+ " Seconds");
-//				}
-//
-//				if(arrayL.get(position).getMajor()==0)
-//				{
-//					b=b+1;
-//					holder.time.setText("Dwelling Time for Guest B:" + b+ " Seconds");
-//				}
-//				if(arrayL.get(position).getMajor()==2)
-//				{
-//					c=c+1;
-//					holder.time.setText("Dwelling Time for Guest C:" + c+ " Seconds");
-//				}
-//				if(arrayL.get(position).getMajor()==4)
-//				{
-//					d=d+1;
-//					holder.time.setText("Dwelling Time for Guest D:" + d+ " Seconds");
-//				}
-//				if(arrayL.get(position).getMajor()==112)
-//				{
-//					e=e+1;
-//					holder.time.setText("Dwelling Time for Guest E:" + e+ " Seconds");
-//				}
-//
-//
-//			/*	if(position==3){
-//					//20
-//					int onebminor=arrayL.get(1).getMinor();
-//					holder.beacon_number.setText("Quadrant 1");
-//
-//
-//
-//				}
-//				else if(position==2){
-//					//21
-//					int twobminor=arrayL.get(2).getMinor();
-//					holder.beacon_number.setText("Quadrant 2");
-//
-//				}
-//				else if(position==1){
-//					//10
-//					int threebminor=arrayL.get(3).getMinor();
-//					holder.beacon_number.setText("Quadrant 3");
-//
-//				}
-//				else if(position==0){
-//					//22
-//					int fourbminor=arrayL.get(4).getMinor();
-//					holder.beacon_number.setText("Quadrant 4");
-//
-//				}
-//				double onebacc=arrayL.get(3).getAccuracy();
-//				double twobacc=arrayL.get(2).getAccuracy();
-//				double threebacc=arrayL.get(1).getAccuracy();
-//				double fourbacc =arrayL.get(0).getAccuracy();
-//				double smallest;
-//				if(onebacc < twobacc && onebacc<threebacc && onebacc<fourbacc){
-//					smallest = onebacc;
-//					holder.beacon_number.setText("Quadrant 1");
-//
-//				}else if(twobacc<threebacc && twobacc<onebacc && twobacc<fourbacc){
-//					smallest = twobacc;
-//					holder.beacon_number.setText("Quadrant 2");
-//
-//				}else if(threebacc<twobacc && threebacc<onebacc && threebacc<fourbacc){
-//					smallest = threebacc;
-//					holder.beacon_number.setText("Quadrant 3");
-//
-//				}else{
-//					smallest = fourbacc;
-//					holder.beacon_number.setText("Quadrant 4");
-//
-//				}*/
-//
-//			} catch (Exception e) {
-//				e.printStackTrace();
-//			}
-//
-//			return convertView;
-//		}
-//
-//		private class ViewHolder {
-//			private TextView beacon_uuid;
-//			private TextView beacon_major;
-//			private TextView beacon_minor;
-//			private TextView beacon_proximity;
-//			private TextView beacon_rssi;
-//			private TextView beacon_txpower;
-//		//	private TextView beacon_range;
-//		//	private TextView beacon_number;
-//			private TextView time;
-//
-//
-//			public ViewHolder(View view) {
-//				beacon_uuid = (TextView) view.findViewById(R.id.BEACON_uuid);
-//				beacon_major = (TextView) view.findViewById(R.id.BEACON_major);
-//				beacon_minor = (TextView) view.findViewById(R.id.BEACON_minor);
-//				beacon_proximity = (TextView) view.findViewById(R.id.BEACON_proximity);
-//				beacon_rssi = (TextView) view.findViewById(R.id.BEACON_rssi);
-//				beacon_txpower = (TextView) view.findViewById(R.id.BEACON_txpower);
-//			//	beacon_range = (TextView) view.findViewById(R.id.BEACON_range);
-//			//	beacon_number = (TextView) view.findViewById(R.id.number);
-//				time=(TextView)view.findViewById(R.id.number);
-//				view.setTag(this);
-//			}
-//		}
-//
-//	}
-//
-//}
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
===================================================================
--- app/src/main/res/values/styles.xml	(date 1501671703000)
+++ app/src/main/res/values/styles.xml	(date 1501671703000)
@@ -1,52 +0,0 @@
-<resources>
-
-    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar">
-        <item name="colorPrimary">@color/hn_orange</item>
-        <item name="colorPrimaryDark">@color/hn_orange_dark</item>
-        <item name="colorAccent">@color/hn_orange_lighter</item>
-    </style>
-
-    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
-
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <item name="colorPrimary">@color/purple</item>
-        <item name="colorPrimaryDark">@color/purple</item>
-        <item name="colorAccent">@color/purple</item>
-        <item name="android:alertDialogTheme">@style/AlertDialogStyle</item>
-        <item name="android:itemTextAppearance">@style/OptionsMenuTextColor</item>
-        <item name="android:textColorPrimary">@color/black_87pc</item>
-        <item name="preferenceTheme">@style/PreferenceThemeOverlay</item>
-    </style>
-
-    <style name="AppTheme.NoActionBar" parent="AppTheme">
-        <item name="windowNoTitle">true</item>
-        <item name="windowActionBar">false</item>
-    </style>
-
-    <style name="AppTheme.ActionBar" parent="AppTheme">
-        <item name="android:textColorPrimary">@color/white</item>
-        <item name="android:textColor">@color/black_87pc</item>
-        <item name="drawerArrowStyle">@style/HamburgerIconStyle</item>
-        <item name="android:itemTextAppearance">@style/OptionsMenuTextColor</item>
-    </style>
-
-    <style name="OptionsMenuTextColor" parent="@android:style/TextAppearance.Widget.IconMenu.Item">
-        <item name="android:textColor">@android:color/black</item>
-    </style>
-
-    <style name="AlertDialogStyle" parent="Theme.AppCompat.Light.Dialog.Alert">
-        <item name="android:windowTitleStyle">@style/DialogTitleText</item>
-        <item name="colorAccent">@color/hn_orange_lighter</item>
-    </style>
-
-    <style name="DialogTitleText">
-        <item name="android:textColor">@color/black_87pc</item>
-        <item name="android:textAppearance">@style/TextAppearance.AppCompat.Title</item>
-    </style>
-
-    <style name="HamburgerIconStyle" parent="Widget.AppCompat.DrawerArrowToggle">
-        <item name="color">@color/white</item>
-    </style>
-
-
-</resources>
Index: gradle.properties
===================================================================
--- gradle.properties	(date 1501671703000)
+++ gradle.properties	(date 1501671703000)
@@ -1,18 +0,0 @@
-# Project-wide Gradle settings.
-
-# IDE (e.g. Android Studio) users:
-# Gradle settings configured through the IDE *will override*
-# any settings specified in this file.
-
-# For more details on how to configure your build environment visit
-# http://www.gradle.org/docs/current/userguide/build_environment.html
-
-# Specifies the JVM arguments used for the daemon process.
-# The setting is particularly useful for tweaking memory settings.
-# Default value: -Xmx10248m -XX:MaxPermSize=256m
-# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
-
-# When configured, Gradle will run in incubating parallel mode.
-# This option should only be used with decoupled projects. More details, visit
-# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
-# org.gradle.parallel=true
\ No newline at end of file
Index: app/src/main/res/layout/nav_header_map_page.xml
===================================================================
--- app/src/main/res/layout/nav_header_map_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/nav_header_map_page.xml	(date 1501671703000)
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/nav_header_height"
-    android:background="@drawable/man0"
-    android:gravity="start"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
->
-    <ImageView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:src="@drawable/man"/>
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/nav_header_vertical_spacing"
-        android:text="SmartStudent"
-        android:textSize="20sp"
-        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
-
-</LinearLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/ScanRadarFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/ScanRadarFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/ScanRadarFragment.java	(date 1501671703000)
@@ -1,157 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.hardware.Sensor;
-import android.hardware.SensorManager;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.ui.view.RadarScanView;
-
-import org.altbeacon.beacon.Beacon;
-
-import java.util.Collection;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-
-
-public class ScanRadarFragment extends ScanFragment {
-
-    @Bind(R.id.toolbar)
-    Toolbar mToolbar;
-
-    @Bind(R.id.radar)
-    RadarScanView mRadar;
-
-    @Bind(R.id.distance)
-    TextView mDistView;
-
-    SensorManager mSensorManager;
-    Sensor accSensor;
-    Sensor magnetSensor;
-
-    public static ScanRadarFragment newInstance() {
-        ScanRadarFragment assetsFragment = new ScanRadarFragment();
-        return assetsFragment;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mSensorManager = (SensorManager) getActivity().getSystemService(getActivity().SENSOR_SERVICE);
-        accSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
-        magnetSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View fragmentView = inflater.inflate(R.layout.fragment_scan_radar, container, false);
-        ButterKnife.bind(this, fragmentView);
-
-        setupToolbar();
-
-        mRadar.setUseMetric(true);
-        mRadar.setDistanceView(mDistView);
-
-        return fragmentView;
-    }
-
-    @Override
-    public void onPause() {
-        mSensorManager.unregisterListener(mRadar, accSensor);
-        mSensorManager.unregisterListener(mRadar, magnetSensor);
-        super.onPause();
-    }
-
-    @Override
-    public void onStop() {
-        mRadar.stopSweep();
-        super.onStop();
-    }
-
-    @Override
-    public void startScan() {
-        super.startScan();
-        mRadar.startSweep();
-    }
-
-    @Override
-    public void stopScan() {
-        super.stopScan();
-        mRadar.stopSweep();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        if (mBeaconManager.isBound(this)) mBeaconManager.setBackgroundMode(false);
-        mSensorManager.registerListener(mRadar, accSensor, SensorManager.SENSOR_DELAY_GAME);
-        mSensorManager.registerListener(mRadar, magnetSensor, SensorManager.SENSOR_DELAY_GAME);
-    }
-
-    private void setupToolbar() {
-        ((AppCompatActivity) getActivity()).setSupportActionBar(mToolbar);
-        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-        if (actionBar != null) {
-            // actionBar.setDisplayShowTitleEnabled(true);
-            mToolbar.setSubtitle(R.string.title_fragment_radar_beacons);
-        }
-    }
-
-    @Override
-    public void onDestroyView() {
-        ButterKnife.unbind(this);
-        super.onDestroyView();
-    }
-
-    @Override
-    public void onCanScan() {
-        // startScan();
-    }
-
-
-    @Override
-    public void updateBeaconList(final Collection<Beacon> beacons, final org.altbeacon.beacon.Region region) {
-        //update list, even nothing
-    }
-
-    @Override
-    public void updateBeaconList(final Collection<Beacon> beacons) {
-        if (mRadar == null || beacons.size() == 0) {
-            return;
-        }
-        if (getActivity() != null) {
-            getActivity().runOnUiThread(new Runnable() {
-                public void run() {
-                    mRadar.onDetectedBeacons(beacons);
-                }
-            });
-        }
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/BeaconActionActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/BeaconActionActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/BeaconActionActivity.java	(date 1501671703000)
@@ -1,114 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.design.widget.TabLayout;
-import android.support.v4.view.ViewPager;
-import android.support.v7.app.ActionBar;
-import android.support.v7.widget.Toolbar;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.ui.adapter.DetailFragmentPagerAdapter;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-
-
-public class BeaconActionActivity extends BaseActivity implements ViewPager.OnPageChangeListener {
-
-    @Bind(R.id.toolbar)
-    Toolbar toolbar;
-    @Bind(R.id.viewpager)
-    ViewPager viewPager;
-    @Bind(R.id.sliding_tabs)
-    TabLayout slidingTabs;
-
-    private ActionBeacon mActionBeacon;
-
-    public static Intent getStartIntent(Context context) {
-        return new Intent(context, BeaconActionActivity.class);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_beacon);
-        ButterKnife.bind(this);
-
-        setupToolbar();
-        readExtras();
-        setupTabs();
-
-    }
-
-    protected void readExtras() {
-        Intent intent = getIntent();
-        if (intent.getExtras() != null) {
-            mActionBeacon = intent.getExtras().getParcelable(Constants.ARG_ACTION_BEACON);
-        }
-    }
-
-    @Override
-    public void finish() {
-        //Constants.REQ_UPDATED_ACTION_BEACON
-        int resultCode = Activity.RESULT_OK;
-        Intent resultIntent = new Intent();
-        resultIntent.putExtra(Constants.ARG_ACTION_BEACON, mActionBeacon);
-        setResult(resultCode, resultIntent);
-        super.finish();
-    }
-
-    private void setupTabs() {
-        viewPager.setAdapter(new DetailFragmentPagerAdapter(getSupportFragmentManager(),
-                mActionBeacon,
-                BeaconActionActivity.this));
-
-        slidingTabs.setupWithViewPager(viewPager);
-    }
-
-    private void setupToolbar() {
-
-        final ActionBar ab = getSupportActionBar();
-        if (ab != null) {
-            ab.setDisplayHomeAsUpEnabled(true);
-        }
-    }
-
-    @Override
-    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
-
-    }
-
-    @Override
-    public void onPageSelected(int position) {
-
-    }
-
-    @Override
-    public void onPageScrollStateChanged(int state) {
-
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/RegionName.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/RegionName.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/RegionName.java	(date 1501671703000)
@@ -1,75 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class RegionName {
-    private String prefix;
-    private String beaconId;
-    private String actionName;
-    private ActionBeacon.EventType eventType;
-
-    protected RegionName(String prefix, String beaconId, ActionBeacon.EventType eventType, String actionName) {
-        this.prefix = prefix;
-        this.beaconId = beaconId;
-        this.actionName = actionName;
-        this.eventType = eventType;
-    }
-
-    public static RegionName parseString(String value) {
-        if (value == null || value.length() == 0) {
-            throw new IllegalArgumentException("value is null");
-        }
-        String[] strings = value.split("::");
-        if (strings != null && strings.length == 4) {
-            return new RegionName(strings[0], strings[1], ActionBeacon.EventType.fromInt(Integer.parseInt(strings[2])), strings[3]);
-        }
-        return new RegionName("unknown", "unknown", ActionBeacon.EventType.EVENT_ENTERS_REGION, value);
-    }
-
-    public static String buildRegionNameId(ActionBeacon actionBeacon) {
-        return Constants.REGION_NAME_PREFIX + "::" + actionBeacon.getBeaconId() + "::"
-                + actionBeacon.getEventType().getValue() + "::" + actionBeacon.getName();
-    }
-
-
-    public boolean isApplicationRegion() {
-        return this.prefix.equalsIgnoreCase(Constants.REGION_NAME_PREFIX);
-    }
-
-    public String getPrefix() {
-        return prefix;
-    }
-
-    public String getBeaconId() {
-        return beaconId;
-    }
-
-    public String getActionName() {
-        return actionName;
-    }
-
-    public ActionBeacon.EventType getEventType() {
-        return eventType;
-    }
-}
Index: app/src/main/res/drawable-hdpi/ic_menu_slideshow.xml
===================================================================
--- app/src/main/res/drawable-hdpi/ic_menu_slideshow.xml	(date 1501671703000)
+++ app/src/main/res/drawable-hdpi/ic_menu_slideshow.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M4,6H2v14c0,1.1 0.9,2 2,2h14v-2H4V6zm16,-4H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V4c0,-1.1 -0.9,-2 -2,-2zm-8,12.5v-9l6,4.5 -6,4.5z" />
-</vector>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconActionPageFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconActionPageFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconActionPageFragment.java	(date 1501671703000)
@@ -1,149 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.preference.EditTextPreference;
-import android.support.v7.preference.ListPreference;
-import android.support.v7.preference.Preference;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.action.ActionExecutor;
-import com.ellipsonic.www.student_tracking.action.IAction;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 20/12/15.
- */
-public class BeaconActionPageFragment extends PageBeaconFragment {
-
-    private ActionExecutor mActionExecutor;
-
-    public static BeaconActionPageFragment newInstance(int page) {
-        BeaconActionPageFragment detailFragment = new BeaconActionPageFragment();
-        return detailFragment;
-    }
-
-    @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        this.addPreferencesFromResource(R.xml.preferences_beacon_action);
-        mActionExecutor = Student_Tracking.from(getActivity()).getComponent().actionExecutor();
-    }
-
-    @Override
-    protected void setData() {
-
-        setActionParam1(mActionBeacon.getActionParam());
-
-        EditTextPreference param_name = (EditTextPreference) findPreference("ba_action_param1");
-        param_name.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof String) {
-                    setActionParam1((String) newValue);
-                }
-                return true;
-            }
-        });
-
-        setActionType(Integer.toString(mActionBeacon.getActionType().getValue()));
-
-        final ListPreference action_list = (ListPreference) findPreference("ba_action_list");
-        action_list.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof String) {
-                    setActionType((String) newValue);
-                }
-                return true;
-            }
-        });
-
-        Preference testButton = getPreferenceManager().findPreference("ba_action_test");
-        testButton.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
-            @Override
-            public boolean onPreferenceClick(Preference arg0) {
-                IAction action = mActionExecutor.actionBuilder(mActionBeacon.getActionType(),
-                        mActionBeacon.getActionParam(), mActionBeacon.getNotification());
-                String resMessage = mActionExecutor.storeAndExecute(action);
-                if (resMessage != null ) {
-                    Toast.makeText(getActivity(), resMessage, Toast.LENGTH_LONG).show();
-                }                return true;
-            }
-        });
-
-    }
-
-    private ActionBeacon.ActionType getActionType() {
-        final ListPreference action_list = (ListPreference) findPreference("ba_action_list");
-        return ActionBeacon.ActionType.fromInt(Integer.parseInt(action_list.getValue()));
-    }
-
-    private void setActionType(String newValue) {
-        final ListPreference action_list = (ListPreference) findPreference("ba_action_list");
-        if (newValue != null && !newValue.isEmpty()) {
-            int index = action_list.findIndexOfValue(newValue);
-            action_list.setSummary(index >= 0
-                    ? action_list.getEntries()[index]
-                    : null);
-            mActionBeacon.setActionType(ActionBeacon.ActionType.fromInt(index >= 0 ? index : 0));
-        } else {
-            action_list.setSummary(action_list.getEntries()[0]);
-            mActionBeacon.setActionType(ActionBeacon.ActionType.fromInt(0));
-        }
-    }
-
-    private String getActionParam1() {
-        EditTextPreference param_name = (EditTextPreference) findPreference("ba_action_param1");
-        return param_name.getSummary().toString();
-    }
-
-    private void setActionParam1(String newValue) {
-        EditTextPreference param_name = (EditTextPreference) findPreference("ba_action_param1");
-        if (newValue != null && !newValue.isEmpty()) {
-            param_name.setSummary(newValue);
-            mActionBeacon.setActionParam(newValue);
-        } else {
-            param_name.setSummary("");
-            mActionBeacon.setActionParam("");
-        }
-    }
-
-
-    @Override
-    public void onActivityResult(final int requestCode, final int resultCode, final Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        if (resultCode == Activity.RESULT_OK && requestCode == Constants.REQ_TASKER_ACTION_NAME_REQUEST) {
-            if (data != null) {
-                final String id = data.getStringExtra("id");
-                final String taskName = data.getDataString();
-
-               //  mDataManager.updateBeaconAction(id, taskName);
-                //updateAction(BeaconContract.ACTION_TASKER);
-            }
-        }
-    }
-}
Index: app/src/main/res/layout/fragment_scan_beacons.xml
===================================================================
--- app/src/main/res/layout/fragment_scan_beacons.xml	(date 1501671703000)
+++ app/src/main/res/layout/fragment_scan_beacons.xml	(date 1501671703000)
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/purple_light"
-   >
-
-    <include android:id="@+id/appbar" layout="@layout/app_bar"/>
-
-
-        <com.ellipsonic.www.student_tracking.ui.view.ContextMenuRecyclerView
-            android:id="@+id/recycler_detected_beacons"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:paddingBottom="@dimen/activity_vertical_margin"
-            android:paddingLeft="@dimen/activity_horizontal_margin"
-            android:paddingRight="@dimen/activity_horizontal_margin"
-            android:paddingTop="@dimen/activity_vertical_margin"
-            app:layout_behavior="@string/appbar_scrolling_view_behavior"
-            />
-
-        <ProgressBar
-            android:id="@+id/progress_indicator"
-            style="?android:attr/progressBarStyleLarge"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"
-            app:layout_anchor="@id/recycler_detected_beacons"
-            app:layout_anchorGravity="center"
-            />
-
-
-    <ViewStub
-            android:id="@+id/empty_scan_view"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_centerInParent="true"
-            android:layout="@layout/layout_empty_list" />
-
-
-</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/NewMainNavigationActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/NewMainNavigationActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/NewMainNavigationActivity.java	(date 1501671703000)
@@ -1,385 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-
-
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-
-
-        import android.annotation.TargetApi;
-        import android.app.Dialog;
-        import android.content.Context;
-        import android.content.DialogInterface;
-        import android.content.Intent;
-        import android.content.pm.PackageManager;
-        import android.os.Bundle;
-        import android.support.annotation.NonNull;
-        import android.support.design.widget.FloatingActionButton;
-        import android.support.design.widget.NavigationView;
-        import android.support.v4.app.Fragment;
-        import android.support.v4.app.FragmentManager;
-        import android.support.v4.view.GravityCompat;
-        import android.support.v4.widget.DrawerLayout;
-        import android.support.v7.app.ActionBarDrawerToggle;
-        import android.support.v7.widget.Toolbar;
-        import android.util.Log;
-        import android.view.MenuItem;
-        import android.view.View;
-        import android.widget.Button;
-        import android.widget.Toast;
-
-        import com.android.volley.Request;
-        import com.android.volley.RequestQueue;
-        import com.android.volley.Response;
-        import com.android.volley.VolleyError;
-        import com.android.volley.toolbox.StringRequest;
-        import com.android.volley.toolbox.Volley;
-        import com.ellipsonic.www.student_tracking.Student_Tracking;
-        import com.ellipsonic.www.student_tracking.R;
-        import com.ellipsonic.www.student_tracking.data.NewDbStoreService;
-        import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-        import com.ellipsonic.www.student_tracking.ui.fragment.DetectedBeaconsFragment;
-        import com.ellipsonic.www.student_tracking.ui.fragment.ScanFragment;
-        import com.ellipsonic.www.student_tracking.ui.fragment.TrackedBeaconsFragment;
-        import com.ellipsonic.www.student_tracking.util.Constants;
-        import com.ellipsonic.www.student_tracking.util.DialogBuilder;
-
-        import org.altbeacon.beacon.BeaconManager;
-
-        import java.util.HashMap;
-        import java.util.List;
-        import java.util.Map;
-
-        import butterknife.Bind;
-        import butterknife.ButterKnife;
-        import butterknife.OnClick;
-
-        import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Major;
-        import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Minor;
-        import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.UUID;
-        import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.detectedMacId;
-
-public class NewMainNavigationActivity extends BaseActivity implements NavigationView.OnNavigationItemSelectedListener, View.OnClickListener{
-
-    public static final int PERMISSION_REQUEST_COARSE_LOCATION = 1;
-    NewDbStoreService newDbStoreService;
-
-    @Bind(R.id.fab)
-    FloatingActionButton fab;
-
-    @Bind(R.id.drawer_layout)
-    DrawerLayout drawer;
-
-    @Bind(R.id.toolbar)
-    Toolbar toolbar;
-
-    @Bind(R.id.nav_view)
-    NavigationView navigationView;
-
-    @Bind(R.id.button)
-    Button button;
-    private static final String url = "http://wisdomkraft.com/wisdomkraft.com/prudence/IoT/StudentTracking/Data_in_json.php";
-
-    String text="";
-
-    String s_name,s_school,s_age,s_std;
-
-    BeaconManager mBeaconManager;
-    TrackedBeacon mBeacon;
-
-    public static Intent getStartIntent(Context context) {
-        return new Intent(context, NewMainNavigationActivity.class);
-    }
-
-    @OnClick(R.id.fab)
-    void navAction() {
-
-        Fragment currentFragment = getFragmentInstance(R.id.content_frame);
-       // String tag = currentFragment.getTag();
-        ((ScanFragment) currentFragment).scanStartStopAction();
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_new_main_navigation);
-        ButterKnife.bind(this);
-
-      //  setupToolbar();
-        s_name = getIntent().getStringExtra("S_NAME");
-        s_school = getIntent().getStringExtra("S_SCHOOL");
-        s_age = getIntent().getStringExtra("S_AGE");
-        s_std = getIntent().getStringExtra("S_STD");
-
-
-
-        navigationView.setNavigationItemSelectedListener(this);
-
-        mBeaconManager = Student_Tracking.from(this).getComponent().beaconManager();
-
-      //  checkPermissions();
-        verifyBluetooth();
-
-      //  readExtras();
-
-        if (null == savedInstanceState || mBeacon != null) {
-            //launchTrackedListView();
-        }
-
-        launchScanBeaconView();
-
-        button.setOnClickListener(this);
-   }
-
-
-
-    public void onClick(View v) {
-        if(v == button){
-
-            String a=detectedMacId;
-            String b=a;
-            NewDbStoreService newDbStoreService=new NewDbStoreService(getApplicationContext());
-            List<TrackedBeacon> obj=newDbStoreService.getBeacons();
-            String str="";
-            for(TrackedBeacon object: obj) {
-                str = object.getBluetoothAddress().trim();
-            }
-            String s = str.replace(":", "");
-
-
-            Intent myIntent = new Intent(this,RegisterActivity .class);
-            myIntent.putExtra("MacID", a);
-            myIntent.putExtra("S_NAME",s_name);
-            myIntent.putExtra("S_SCHOOL", s_school);
-            myIntent.putExtra("S_AGE",s_age);
-            myIntent.putExtra("S_STD",s_std);
-            try {
-                if(getIntent().getStringExtra("Edit-Registaration").equals("TRUE")){
-                    myIntent.putExtra("Edit-Registaration", "TRUE");
-                }
-            }catch (NullPointerException e){
-                e.printStackTrace();
-            }
-            startActivity(myIntent);
-
-        }
-    }
-
-
-    //@OnClick(R.id.button)
-
-//    public void registerUser(){
-//
-//        NewDbStoreService newDbStoreService=new NewDbStoreService(getApplicationContext());
-//        List<TrackedBeacon> obj=newDbStoreService.getBeacons();
-//        String str="";
-//        for(TrackedBeacon object: obj) {
-//            str = object.getBluetoothAddress().trim();
-//        }
-//        String s = str.replace(":", "");
-////
-////        Intent intent = new Intent(current.this, RegisterActivity.class);
-////        intent.putExtra("str",s);
-////        startActivity(intent);
-//        Intent myIntent = new Intent(this, RegisterActivity.class);
-//        myIntent.putExtra("MacID", s);
-//        startActivity(myIntent);
-//
-//        //Intent registerIntent = new Intent();
-////
-////        StringRequest stringRequest = new StringRequest(Request.Method.POST,url,
-////                new Response.Listener<String>() {
-////                    @Override
-////                    public void onResponse(String response) {
-////                        Toast.makeText(NewMainNavigationActivity.this,response, Toast.LENGTH_LONG).show();
-////                    }
-////                },
-////                new Response.ErrorListener() {
-////                    @Override
-////                    public void onErrorResponse(VolleyError error) {
-////                        Toast.makeText(NewMainNavigationActivity.this,error.toString(),Toast.LENGTH_LONG).show();
-////                    }
-////                }){
-////            @Override
-////
-////            protected Map<String,String> getParams(){
-////
-////                NewDbStoreService newDbStoreService=new NewDbStoreService(getApplicationContext());
-////                List<TrackedBeacon> obj=newDbStoreService.getBeacons();
-////                String str="";
-////            for(TrackedBeacon object: obj) {
-////                str = object.getBluetoothAddress().trim();
-////            }
-////
-////                String s = str.replace(":", "");
-//
-////                Map<String,String> params = new HashMap<String, String>();
-////                params.put("mac",s);
-////                return params;
-////            }
-////
-////        };
-////
-////        RequestQueue requestQueue = Volley.newRequestQueue(this);
-////        requestQueue.add(stringRequest);
-//    }
-
-
-//    protected void readExtras() {
-//        Intent intent = getIntent();
-//        if (intent.getExtras() != null) {
-//            mBeacon = intent.getExtras().getParcelable(Constants.ARG_BEACON);
-//        }
-//    }
-
-    private void setupToolbar() {
-
-//        setSupportActionBar(toolbar);
-
-//        final ActionBar ab = getSupportActionBar();
-//        if (ab != null) {
-//            ab.setDisplayHomeAsUpEnabled(true);
-//        }
-
-        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
-                this, drawer, toolbar,
-                R.string.nav_drawer_open,
-                R.string.nav_drawer_close);
-        drawer.setDrawerListener(toggle);
-        toggle.syncState();
-
-    }
-
-    @Override
-    public void onRequestPermissionsResult(int requestCode,
-                                           @NonNull String permissions[], int[] grantResults) {
-        switch (requestCode) {
-            case PERMISSION_REQUEST_COARSE_LOCATION: {
-                if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-                    Log.d(Constants.TAG, "coarse location permission granted");
-                } else {
-                    final Dialog permFailedDialog = DialogBuilder.createSimpleOkErrorDialog(
-                            this,
-                            getString(R.string.dialog_error_functionality_limited),
-                            getString(R.string.error_message_location_access_not_granted)
-                    );
-                    permFailedDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
-                        @Override
-                        public void onDismiss(DialogInterface dialog) {
-                            //finish();
-                        }
-                    });
-                    permFailedDialog.show();
-                }
-                return;
-            }
-        }
-    }
-
-
-    @TargetApi(18)
-    private void verifyBluetooth() {
-
-        try {
-            if (!mBeaconManager.checkAvailability()) {
-
-                final Dialog bleDialog = DialogBuilder.createSimpleOkErrorDialog(
-                        this,
-                        getString(R.string.dialog_error_ble_not_enabled),
-                        getString(R.string.error_message_please_enable_bluetooth)
-                );
-                bleDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
-                    @Override
-                    public void onDismiss(DialogInterface dialog) {
-                        finish();
-                        System.exit(0);
-                    }
-                });
-                bleDialog.show();
-
-            }
-        } catch (RuntimeException e) {
-
-            final Dialog bleDialog = DialogBuilder.createSimpleOkErrorDialog(
-                    this,
-                    getString(R.string.dialog_error_ble_not_supported),
-                    getString(R.string.error_message_bluetooth_le_not_supported)
-            );
-            bleDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
-                @Override
-                public void onDismiss(DialogInterface dialog) {
-                    finish();
-                    System.exit(0);
-                }
-            });
-            bleDialog.show();
-        }
-    }
-
-
-
-    @Override
-    public boolean onNavigationItemSelected(MenuItem item) {
-        int id = item.getItemId();
-
-        switch (id) {
-            case R.id.nav_scan_around:
-                launchScanBeaconView();
-                break;
-
-        }
-
-        drawer.closeDrawer(GravityCompat.START);
-        return true;
-    }
-
-
-    private void addScanBeaconFragment() {
-        FragmentManager fragmentManager = getSupportFragmentManager();
-        if (fragmentManager != null) {
-            if (checkFragmentInstance(R.id.content_frame, DetectedBeaconsFragment.class) == null) {
-                fragmentManager
-                        .beginTransaction()
-                        .replace(R.id.content_frame, DetectedBeaconsFragment.newInstance(), Constants.TAG_FRAGMENT_SCAN_LIST)
-                        .commit();
-
-            }
-        }
-
-    }
-
-
-
-
-
-    public void launchScanBeaconView() {
-        addScanBeaconFragment();
-    }
-
-
-
-
-    @Override
-    public void onBackPressed() {
-        //super.onBackPressed();
-        startActivity(new Intent(getApplicationContext(), HomeBeaconNavigationActivity.class));
-        finish();
-    }
-
-}
Index: app/src/main/res/layout/app_bar_map_navigation_activty.xml
===================================================================
--- app/src/main/res/layout/app_bar_map_navigation_activty.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_map_navigation_activty.xml	(date 1501671703000)
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/purple_light"
-
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MapNavigationActivty">
-
-    <android.support.design.widget.AppBarLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:theme="@style/AppTheme.AppBarOverlay">
-
-        <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:layout_width="match_parent"
-            android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary"
-            app:popupTheme="@style/AppTheme.PopupOverlay" />
-
-    </android.support.design.widget.AppBarLayout>
-
-    <include layout="@layout/content_map_navigation_activty" />
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        app:srcCompat="@android:drawable/ic_dialog_email" />
-
-</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/TaskerDownloadFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/TaskerDownloadFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/TaskerDownloadFragment.java	(date 1501671703000)
@@ -1,93 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-import android.support.v7.app.AlertDialog;
-import android.util.Log;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-import net.dinglisch.android.tasker.TaskerIntent;
-
-/**
- *
- *
- */
-public class TaskerDownloadFragment extends DialogFragment {
-    private DownloadCanceledListener mListener;
-
-    public static TaskerDownloadFragment getInstance() {
-        final TaskerDownloadFragment fragment = new TaskerDownloadFragment();
-        return fragment;
-    }
-
-    @Override
-    public void onAttach(final Activity activity) {
-        super.onAttach(activity);
-
-        try {
-            mListener = (DownloadCanceledListener) activity;
-        } catch (final ClassCastException e) {
-            Log.e(Constants.TAG, "Parent activity must implement DownloadCancelListener interface", e);
-        }
-    }
-
-    @Override
-    public Dialog onCreateDialog(final Bundle savedInstanceState) {
-        return new AlertDialog.Builder(getActivity()).setTitle(R.string.action_tasker_download)
-                .setIcon(R.drawable.ic_action_tasker)
-                .setMessage(R.string.action_tasker_message).setCancelable(false)
-                .setPositiveButton(R.string.tasker_download, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int whichButton) {
-                        // Go to Google Play
-                        final Intent intent = TaskerIntent.getTaskerInstallIntent(true);
-                        startActivity(intent);
-                    }
-                }).setNeutralButton(R.string.tasker_website, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        // Open link in the browser
-                        final Intent intent = TaskerIntent.getTaskerInstallIntent(false);
-                        startActivity(intent);
-                    }
-                }).setNegativeButton(R.string.dialog_action_cancel, new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int whichButton) {
-                        mListener.onTaskerNotInstalled();
-                    }
-                }).create();
-    }
-
-    @Override
-    public void onCancel(final DialogInterface dialog) {
-        mListener.onTaskerNotInstalled();
-    }
-
-    public interface DownloadCanceledListener {
-        public void onTaskerNotInstalled();
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/Action.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/Action.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/Action.java	(date 1501671703000)
@@ -1,12 +0,0 @@
-package com.ellipsonic.www.student_tracking.action;
-import android.content.Context;
-/**
- * Created by lovin on 8/2/2017.
- */
-
-abstract class Action implements IAction {
-    @Override
-    abstract public String execute(Context context);
-
-}
-
Index: app/src/main/res/layout/activity_map_navigation_activty.xml
===================================================================
--- app/src/main/res/layout/activity_map_navigation_activty.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_map_navigation_activty.xml	(date 1501671703000)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/drawer_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:openDrawer="start">
-
-    <include
-        layout="@layout/app_bar_map__beacon"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-        android:background="@color/purple_light"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_home_beacon_navigation"
-        app:menu="@menu/map_menu" />
-
-</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/layout/activity_jay_login.xml
===================================================================
--- app/src/main/res/layout/activity_jay_login.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_jay_login.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.jayLogin">
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/ActionExecutor.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/ActionExecutor.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/ActionExecutor.java	(date 1501671703000)
@@ -1,57 +0,0 @@
-
-package com.ellipsonic.www.student_tracking.action;
-
-import android.content.Context;
-import android.util.Log;
-
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import java.util.ArrayList;
-import java.util.List;
-
-public class ActionExecutor {
-
-    private final Context mContext;
-    private List<IAction> mHistory = new ArrayList<>();
-    private List<IAction> mFailed = new ArrayList<>();
-
-    public ActionExecutor(Context context) {
-        this.mContext = context;
-    }
-
-    public static IAction actionBuilder(ActionBeacon.ActionType type, String param, NotificationAction notification) {
-        switch (type) {
-            case ACTION_NONE:
-                return new NoneAction(param, notification);
-            case ACTION_WEB:
-                return new WebAction(param, notification);
-            case ACTION_URL:
-                return new UrlAction(param, notification);
-            case ACTION_INTENT_ACTION:
-                return new IntentAction(param, notification);
-            case ACTION_START_APP:
-                return new StartAppAction(param, notification);
-            case ACTION_GET_LOCATION:
-                return new LocationAction(param, notification);
-            case ACTION_SET_SILENT_ON:
-                return new SilentOnAction(param, notification);
-            case ACTION_SET_SILENT_OFF:
-                return new SilentOffAction(param, notification);
-            case ACTION_TASKER:
-                return new TaskerAction(param, notification);
-        }
-        return null;
-    }
-
-    public String storeAndExecute(IAction action) {
-        this.mHistory.add(action); // optional
-        try {
-            return action.execute(mContext);
-        } catch (Exception e) {
-            mFailed.add(action);
-            Log.d(Constants.TAG, "Error executing action: " + action, e);
-        }
-        return null;
-    }
-}
Index: app/src/main/res/layout/nav_header_home__beacon.xml
===================================================================
--- app/src/main/res/layout/nav_header_home__beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/nav_header_home__beacon.xml	(date 1501671703000)
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/nav_header_height"
-    android:gravity="bottom"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark">
-
-
-
-</LinearLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/ActionBeaconAdapter.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/ActionBeaconAdapter.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/ActionBeaconAdapter.java	(date 1501671703000)
@@ -1,111 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.adapter;
-
-import android.databinding.DataBindingUtil;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.ViewGroup;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.databinding.ItemActionBeaconBinding;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.TrackedBeaconsFragment;
-import com.ellipsonic.www.student_tracking.viewModel.ActionBeaconViewModel;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Created by vitas on 19/10/15.
- */
-public class ActionBeaconAdapter extends RecyclerView.Adapter<ActionBeaconAdapter.BindingHolder> {
-    private List<ActionBeacon> mItemsList;
-    private TrackedBeaconsFragment mFragment;
-
-    public ActionBeaconAdapter(TrackedBeaconsFragment fragment) {
-        mFragment = fragment;
-        mItemsList = new ArrayList<>();
-    }
-
-    @Override
-    public BindingHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        ItemActionBeaconBinding beaconBinding = DataBindingUtil.inflate(
-                LayoutInflater.from(parent.getContext()),
-                R.layout.item_action_beacon,
-                parent,
-                false);
-        return new BindingHolder(beaconBinding);
-    }
-
-    @Override
-    public void onBindViewHolder(BindingHolder holder, int position) {
-        ItemActionBeaconBinding itemBinding = holder.binding;
-        itemBinding.setViewModel(new ActionBeaconViewModel(mFragment, mItemsList.get(position)));
-    }
-
-    @Override
-    public int getItemCount() {
-        return mItemsList.size();
-    }
-
-    public void setItems(List<ActionBeacon> itemsList) {
-        this.mItemsList = itemsList;
-        notifyDataSetChanged();
-    }
-
-    public void addItem(ActionBeacon itemsList) {
-        if (!this.mItemsList.contains(itemsList)) {
-            this.mItemsList.add(itemsList);
-            notifyItemInserted(this.mItemsList.size() - 1);
-        } else {
-            this.mItemsList.set(mItemsList.indexOf(itemsList), itemsList);
-            notifyItemChanged(this.mItemsList.indexOf(itemsList));
-        }
-    }
-
-    public void removeItemById(int id) {
-        for (ActionBeacon action : mItemsList) {
-            if (action.getId() == id) {
-                mItemsList.remove(action);
-                notifyDataSetChanged();
-                break;
-            }
-        }
-    }
-
-    public ActionBeacon getItemById(int id) {
-        for (ActionBeacon action : mItemsList) {
-            if (action.getId() == id) {
-                return action;
-            }
-        }
-        return null;
-    }
-
-    public static class BindingHolder extends RecyclerView.ViewHolder {
-        private ItemActionBeaconBinding binding;
-
-        public BindingHolder(ItemActionBeaconBinding binding) {
-            super(binding.contentView);
-            this.binding = binding;
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/DatabaseHelper.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/DatabaseHelper.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/DatabaseHelper.java	(date 1501671703000)
@@ -1,162 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.ContentValues;
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import static android.R.attr.name;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.detectedMacId;
-
-public class DatabaseHelper extends SQLiteOpenHelper {
-    public static final String DATABASE_NAME = "Student.db";
-
-    public static final String TABLE_NAME_STUDENT = "student_table";
-    public static final String COL_1 = "FIRSTNAME";
-    public static final String COL_2 = "LASTNAME";
-    public static final String COL_3 = "EMAIL";
-    public static final String COL_4 = "PASSWORD";
-    public static final String COL_5 = "CONFORM_PASSWORD";
-
-    public static final String TABLE_NAME_BEACON = "beacon_table";
-    public static final String COL_1_BEACON = "STUDENT_NAME";
-    public static final String COL_2_BEACON= "SCHOOL_NAME";
-    public static final String COL_3_BEACON = "MACID";
-    public static final String COL_4_BEACON= "STUDENT_AGE";
-    public static final String COL_5_BEACON = "STUDENT_STANDARD";
-
-    public DatabaseHelper(Context context) {
-        super(context, DATABASE_NAME, null, 1);
-    }
-
-    @Override
-    public void onCreate(SQLiteDatabase db) {
-        db.execSQL("create table " + TABLE_NAME_STUDENT + " (EMAIL TEXT PRIMARY KEY, FIRSTNAME TEXT,LASTNAME TEXT," +
-                "PASSWORD TEXT,CONFORM_PASSWORD TEXT)");
-
-        db.execSQL("create table " + TABLE_NAME_BEACON + " (MACID TEXT PRIMARY KEY, STUDENT_NAME TEXT,SCHOOL_NAME TEXT," +
-                "STUDENT_AGE TEXT,STUDENT_STANDARD TEXT)");
-    }
-
-
-    @Override
-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_STUDENT);
-        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_BEACON);
-
-        onCreate(db);
-    }
-
-    public boolean insertStudentData(String firstname, String lastname, String email, String password, String coform_pwd) {
-        SQLiteDatabase db = this.getWritableDatabase();
-        ContentValues contentValues = new ContentValues();
-        contentValues.put(COL_1, firstname);
-        contentValues.put(COL_2, lastname);
-        contentValues.put(COL_3, email);
-        contentValues.put(COL_4, password);
-        contentValues.put(COL_5, coform_pwd);
-
-        String abx = email;
-        long result = db.insert(TABLE_NAME_STUDENT, null, contentValues);
-        if (result == -1)
-            return false;
-        else
-            return true;
-    }
-
-
-    public boolean insertBeaconData(String student_name, String school_name, String macID, String age,
-                                    String student_standard) {
-        SQLiteDatabase db = this.getWritableDatabase();
-        ContentValues contentValues = new ContentValues();
-        contentValues.put(COL_1_BEACON, student_name);
-        contentValues.put(COL_2_BEACON, school_name);
-        contentValues.put(COL_3_BEACON, macID);
-        contentValues.put(COL_4_BEACON, age);
-        contentValues.put(COL_5_BEACON, student_standard);
-
-        //  String abx = email;
-        long result = db.insert(TABLE_NAME_BEACON, null, contentValues);
-        if (result == -1)
-            return false;
-        else
-            return true;
-    }
-
-    public Cursor getAllStudentData() {
-        SQLiteDatabase db = this.getWritableDatabase();
-        Cursor res = db.rawQuery("select * from " + TABLE_NAME_STUDENT, null);
-        return res;
-    }
-    public  String[]  getAllBeaconData() {
-        SQLiteDatabase db = this.getWritableDatabase();
-        String[]  arrData = null;
-       // Cursor res = db.rawQuery("select * from " + TABLE_NAME_BEACON, null);
-
-
-        Cursor cursor = db.query(TABLE_NAME_BEACON, new String[] { "*" },
-                null,
-                null, null, null, null, null);
-
-        if(cursor != null)
-        {
-            if (cursor.moveToFirst()) {
-                arrData = new String[cursor.getColumnCount()];
-
-                arrData[0] = cursor.getString(0); //  MACID
-                arrData[1] = cursor.getString(1); // STUDENT_NAME
-                arrData[2] = cursor.getString(2); // SCHOOL_NAME
-                arrData[3] = cursor.getString(3); // AGE
-                arrData[4] = cursor.getString(4); // STUDENT_STANDARD
-            }
-        }
-
-        cursor.close();
-        db.close();
-        return arrData;
-    }
-
-    public boolean updateBeaconData( String student_name, String school_name,String mac, String age,String student_standard) {
-        SQLiteDatabase db = this.getWritableDatabase();
-        ContentValues contentValues = new ContentValues();
-        contentValues.put(COL_1_BEACON, student_name);
-        contentValues.put(COL_2_BEACON, school_name);
-        contentValues.put(COL_3_BEACON, mac);
-        contentValues.put(COL_4_BEACON, age);
-        contentValues.put(COL_5_BEACON, student_standard);
-        db.update(TABLE_NAME_BEACON, contentValues, "MACID = ?", new String[]{mac});
-        return true;
-    }
-
-    public void deleteBeaconData() {
-        SQLiteDatabase db = this.getWritableDatabase();
-        db.execSQL("delete from "+ TABLE_NAME_BEACON);
-        db.execSQL("create table " + TABLE_NAME_BEACON + " (MACID TEXT PRIMARY KEY, STUDENT_NAME TEXT,SCHOOL_NAME TEXT," +
-                "STUDENT_AGE TEXT,STUDENT_STANDARD TEXT)");
-//        return db.delete(TABLE_NAME_BEACON, "MACID = ?", new String[]{id});
-    }
-
-
-    public int Login(String email, String password) {
-        SQLiteDatabase db = this.getWritableDatabase();
-        try {
-            int i = 0;
-            Cursor c = null;
-            c = db.rawQuery("select * from " + TABLE_NAME_STUDENT + " where email =" + "\"" + email.trim() + "\""
-                    + " and password=" + "\"" + password.trim() + "\"", null);
-            c.moveToFirst();
-            i = c.getCount();
-            c.close();
-            return i;
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-        return 0;
-    }
-
-}
Index: app/src/main/res/layout/app_bar_home_beacon_navigation.xml
===================================================================
--- app/src/main/res/layout/app_bar_home_beacon_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_home_beacon_navigation.xml	(date 1501671703000)
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:background="@color/purple_light"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.HomeBeaconNavigationActivity">
-
-    <android.support.design.widget.AppBarLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:theme="@style/AppTheme.AppBarOverlay">
-        <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:layout_width="match_parent"
-            android:layout_height="?attr/actionBarSize"
-            android:background="@color/purple"
-            app:popupTheme="@style/AppTheme.PopupOverlay" />
-    </android.support.design.widget.AppBarLayout>
-
-    <!--<android.support.design.widget.FloatingActionButton-->
-        <!--android:id="@+id/fab"-->
-        <!--android:layout_width="wrap_content"-->
-        <!--android:layout_height="wrap_content"-->
-        <!--android:layout_gravity="bottom|end"-->
-        <!--android:layout_margin="@dimen/fab_margin"-->
-        <!--app:srcCompat="@android:drawable/ic_dialog_email" />-->
-
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:background="@color/purple_light"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        android:src="@drawable/ic_add_white_24dp"/>
-
-
-    <include layout="@layout/content_home_beacon_navigation" />
-
-</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/xml/pref_headers.xml
===================================================================
--- app/src/main/res/xml/pref_headers.xml	(date 1501671703000)
+++ app/src/main/res/xml/pref_headers.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<preference-headers xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <header
-        android:fragment="com.ellipsonic.www.student_tracking.ui.activity.SettingsActivity$ScanPreferenceFragment"
-        android:icon="@drawable/ic_radar_black_24dp"
-        android:title="@string/pref_header_scanner" />
-
-
-</preference-headers>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/injection/component/ApplicationComponent.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/injection/component/ApplicationComponent.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/injection/component/ApplicationComponent.java	(date 1501671703000)
@@ -1,50 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.injection.component;
-
-
-import android.app.Application;
-
-import com.ellipsonic.www.student_tracking.action.ActionExecutor;
-import com.ellipsonic.www.student_tracking.data.DataManager;
-import com.ellipsonic.www.student_tracking.injection.module.ApplicationModule;
-
-import org.altbeacon.beacon.BeaconManager;
-
-import javax.inject.Singleton;
-
-import dagger.Component;
-
-
-/**
- * Created by vitas on 18/10/15.
- */
-@Singleton
-@Component(modules = ApplicationModule.class)
-public interface ApplicationComponent {
-
-    Application application();
-
-    DataManager dataManager();
-
-    BeaconManager beaconManager();
-
-    ActionExecutor actionExecutor();
-
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_main_navigation.xml
===================================================================
--- app/src/main/res/layout/activity_main_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_main_navigation.xml	(date 1501671703000)
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/drawer_layout"
-    android:background="@drawable/appblue"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:openDrawer="start">
-
-    <FrameLayout
-        android:id="@+id/content_frame"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <include
-        layout="@layout/app_bar_main_navigation"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_main_navigation"
-        app:menu="@menu/activity_main_navigation_drawer" />
-
-</android.support.v4.widget.DrawerLayout>
Index: settings.gradle
===================================================================
--- settings.gradle	(date 1501671703000)
+++ settings.gradle	(date 1501671703000)
@@ -1,1 +0,0 @@
-include ':app'
Index: app/src/main/res/layout/app_bar_home__beacon.xml
===================================================================
--- app/src/main/res/layout/app_bar_home__beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_home__beacon.xml	(date 1501671703000)
@@ -1,65 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    xmlns:card_view="http://schemas.android.com/apk/res-auto"
-    android:layout_height="match_parent"
-    tools:context=".ui.activity.Home_Beacon">
-
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        app:srcCompat="@android:drawable/ic_dialog_email"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        android:layout_marginLeft="8dp"
-        app:layout_constraintLeft_toLeftOf="parent"
-        android:layout_marginRight="8dp"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintHorizontal_bias="1.0"
-        app:layout_constraintVertical_bias="1.0" />
-
-    <android.support.v7.widget.CardView
-        android:id="@+id/card_view"
-        android:layout_width="0dp"
-        android:layout_height="100dp"
-        android:layout_gravity="center"
-        android:layout_margin="5dp"
-        android:layout_marginBottom="8dp"
-        android:layout_marginLeft="8dp"
-        android:layout_marginTop="8dp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintHorizontal_bias="0.0"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.162"
-        android:background="@color/purple_light"
-
-        card_view:cardCornerRadius="2dp"
-        card_view:contentPadding="10dp">
-
-        <ImageView
-            android:id="@+id/student_tracking_btn"
-            android:layout_width="match_parent"
-            android:layout_height="100dp"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentTop="true"
-            android:scaleType="fitXY"
-            app:srcCompat="@drawable/background" />
-
-        <TextView
-            android:id="@+id/mac"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:text="Register Your Beacon "
-            android:textColor="@color/white" />
-    </android.support.v7.widget.CardView>
-
-
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapPage.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapPage.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapPage.java	(date 1501671703000)
@@ -1,200 +0,0 @@
-//
-//package com.ellipsonic.www.student_tracking.ui.activity;
-//
-//
-//
-//        import android.content.Context;
-//        import android.content.Intent;
-//        import android.content.res.Configuration;
-//        import android.os.Bundle;
-//        import android.support.design.widget.FloatingActionButton;
-//        import android.support.design.widget.Snackbar;
-//        import android.support.v7.widget.CardView;
-//        import android.view.LayoutInflater;
-//        import android.view.View;
-//        import android.support.design.widget.NavigationView;
-//        import android.support.v4.view.GravityCompat;
-//        import android.support.v4.widget.DrawerLayout;
-//        import android.support.v7.app.ActionBarDrawerToggle;
-//        import android.support.v7.app.AppCompatActivity;
-//        import android.support.v7.widget.Toolbar;
-//        import android.view.Menu;
-//        import android.view.MenuItem;
-//        import android.widget.TextView;
-//        import android.widget.Toast;
-//
-//        import com.ellipsonic.www.student_tracking.R;
-//
-//        import static com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.StudentName;
-//
-//public class MapPage extends AppCompatActivity
-//        implements NavigationView.OnNavigationItemSelectedListener {
-//
-//    CardView card_view;
-//    private LayoutInflater inflater2;
-//
-//    String studentname1;
-//    TextView studentname;
-//    DatabaseHelper databaseHelper;
-//    private DrawerLayout mDrawerLayout;
-//    private ActionBarDrawerToggle mDrawerToggle;
-//
-//    @Override
-//    protected void onCreate(Bundle savedInstanceState) {
-//        super.onCreate(savedInstanceState);
-//        setContentView(R.layout.activity_map_page);
-//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-//        setSupportActionBar(toolbar);
-//
-//        databaseHelper = new DatabaseHelper(this);
-//        card_view = (CardView) findViewById(R.id.card_view1);
-//        studentname=(TextView)findViewById(R.id.user);
-//
-//        card_view.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//                String student_name=StudentName;
-//                Intent myIntent = new Intent(getApplicationContext(), MapsActivity .class);
-//                myIntent.putExtra("studentname", student_name);
-//                startActivity(myIntent);
-//            }
-//        });
-//
-//
-//        try {
-//            String[] mac = databaseHelper.getAllBeaconData();
-//            studentname.setText("Start Tracking "+mac[1]);
-//        } catch (NullPointerException e) {
-//            e.printStackTrace();
-//        }
-//
-//
-//
-////        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-////        fab.setOnClickListener(new View.OnClickListener() {
-////            @Override
-////            public void onClick(View view) {
-////                Intent intent = new Intent(getApplicationContext(), com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.class);
-////                startActivity(intent);
-////            }
-////        });
-////
-////
-////        DrawerLayout   nav_signout= (DrawerLayout) findViewById(R.id.nav_signout);
-////        nav_signout.setOnClickListener(new View.OnClickListener() {
-////            @Override
-////            public void onClick(View view) {
-////                Intent intent = new Intent(getApplicationContext(), com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.class);
-////
-////                startActivity(intent);
-////            }
-////        });
-////
-////
-////        DrawerLayout   nav_register= (DrawerLayout) findViewById(R.id.nav_register);
-////        nav_register.setOnClickListener(new View.OnClickListener() {
-////            @Override
-////            public void onClick(View view) {
-////                Intent intent = new Intent(getApplicationContext(), com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.class);
-////                startActivity(intent);
-////            }
-////        });
-//
-//
-//
-//        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-//        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
-//                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
-//        drawer.setDrawerListener(toggle);
-//        toggle.syncState();
-//
-//        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
-//        navigationView.setNavigationItemSelectedListener(this);
-//
-////        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
-////        mDrawerToggle = new ActionBarDrawerToggle(
-////                this,                  /* host Activity */
-////                mDrawerLayout,         /* DrawerLayout object */
-////                toolbar,  /* nav drawer icon to replace 'Up' caret */
-////                R.string.drawer_open,  /* "open drawer" description */
-////                R.string.drawer_close  /* "close drawer" description */
-////        ) {
-////
-////            /** Called when a drawer has settled in a completely closed state. */
-////            public void onDrawerClosed(View view) {
-////                getActionBar().setTitle("Map PAge");
-////            }
-////
-////            /** Called when a drawer has settled in a completely open state. */
-//
-////            public void onDrawerOpened(View drawerView) {
-////                getActionBar().setTitle("Map PAge");
-////            }
-////        };
-//
-//        // Set the drawer toggle as the DrawerListener
-//        mDrawerLayout.setDrawerListener(mDrawerToggle);
-//
-//        getActionBar().setDisplayHomeAsUpEnabled(true);
-//        getActionBar().setHomeButtonEnabled(true);
-//    }
-//
-//
-//
-//
-////    @Override
-////    public void onBackPressed(){
-////        startActivity(new Intent(getApplicationContext(), Home_Beacon.class));
-////        finish();
-////    }
-////
-//
-//
-//    @Override
-//    public boolean onCreateOptionsMenu(Menu menu) {
-//        // Inflate the menu; this adds items to the action bar if it is present.
-//        getMenuInflater().inflate(R.menu.home__beacon, menu);
-//        return true;
-//    }
-//
-//    @Override
-//    public boolean onOptionsItemSelected(MenuItem item) {
-//        // Handle action bar item clicks here. The action bar will
-//        // automatically handle clicks on the Home/Up button, so long
-//        // as you specify a parent activity in AndroidManifest.xml.
-//        int id = item.getItemId();
-//
-//        //noinspection SimplifiableIfStatement
-//
-//
-//        return super.onOptionsItemSelected(item);
-//    }
-//
-//
-//    @SuppressWarnings("StatementWithEmptyBody")
-//    @Override
-//    public boolean onNavigationItemSelected(MenuItem item) {
-//        // Handle navigation view item clicks here.
-//        int id = item.getItemId();
-//        if (id == R.id.nav_signout) {
-//            Intent intent = new Intent(getApplicationContext(),Login.class);
-//            startActivity(intent);
-//
-//        }
-//        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-//        drawer.closeDrawer(GravityCompat.START);
-//        return true;
-//    }
-//
-//
-//    @Override
-//    public void onBackPressed() {
-//        //super.onBackPressed();
-//        startActivity(new Intent(getApplicationContext(), Home_Beacon.class));
-//        finish();
-//        System.exit(1);
-//
-//    }
-//
-//
-//}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/TaskerAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/TaskerAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/TaskerAction.java	(date 1501671703000)
@@ -1,64 +0,0 @@
-package com.ellipsonic.www.student_tracking.action;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.util.Log;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-import net.dinglisch.android.tasker.TaskerIntent;
-
-
-public class TaskerAction extends NoneAction {
-
-
-    public TaskerAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-
-        switch (TaskerIntent.testStatus(context)) {
-            case OK:
-                final TaskerIntent newIntent = new TaskerIntent(param);
-                final BroadcastReceiver broadcastRec = new BroadcastReceiver() {
-                    @Override
-                    public void onReceive(final Context context, final Intent recIntent) {
-                        if (recIntent.getBooleanExtra(TaskerIntent.EXTRA_SUCCESS_FLAG, false)) {
-
-                        }
-                        context.unregisterReceiver(this);
-                    }
-                };
-                context.registerReceiver(broadcastRec, newIntent.getCompletionFilter());
-                context.sendBroadcast(newIntent);
-                break;
-            case NotEnabled:
-                Log.w(Constants.TAG, "Tasker is not enabled");
-                return context.getString(R.string.tasker_disabled);
-            case AccessBlocked:
-                Log.w(Constants.TAG, "Taskers access is blocked");
-                return context.getString(R.string.tasker_external_access_denided);
-            case NotInstalled:
-                Log.w(Constants.TAG, "Tasker is not installed");
-                return context.getString(R.string.tasker_not_installed);
-            default:
-                break;
-        }
-        return super.execute(context);
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return true;
-    }
-
-    @Override
-    public String toString() {
-        return "TaskerAction, param(s): " + param;
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/ActionBeaconViewModel.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/ActionBeaconViewModel.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/ActionBeaconViewModel.java	(date 1501671703000)
@@ -1,117 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.viewModel;
-
-import android.content.Intent;
-import android.databinding.BaseObservable;
-import android.support.annotation.NonNull;
-import android.view.View;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.ui.activity.BeaconActionActivity;
-import com.ellipsonic.www.student_tracking.ui.fragment.TrackedBeaconsFragment;
-import com.ellipsonic.www.student_tracking.util.BeaconUtil;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 19/10/15.
- */
-public class ActionBeaconViewModel extends BaseObservable {
-
-    protected ActionBeacon mActionBeacon;
-    protected TrackedBeaconsFragment mFragment;
-
-    public ActionBeaconViewModel(@NonNull TrackedBeaconsFragment fragment, @NonNull ActionBeacon actionBeacon) {
-        this.mActionBeacon = actionBeacon;
-        this.mFragment = fragment;
-    }
-
-    public String getName() {
-        return mActionBeacon.getName();
-    }
-
-    public String getEventName() {
-        return mFragment.getString(BeaconUtil.getEventTypeResourceId(mActionBeacon.getEventType()));
-    }
-
-    public String getActionNames() {
-        switch (mActionBeacon.getActionType()) {
-            case ACTION_WEB:
-                return mFragment.getString(R.string.mv_action_type_open_web);
-            case ACTION_URL:
-                return mFragment.getString(R.string.mv_action_type_open_url);
-            case ACTION_INTENT_ACTION:
-                return mFragment.getString(R.string.mv_action_type_broadcast_intent);
-            case ACTION_START_APP:
-                return mFragment.getString(R.string.mv_action_type_start_app);
-            case ACTION_GET_LOCATION:
-                return mFragment.getString(R.string.mv_action_type_get_location);
-            case ACTION_SET_SILENT_ON:
-                return mFragment.getString(R.string.mv_action_type_set_silent_on);
-            case ACTION_SET_SILENT_OFF:
-                return mFragment.getString(R.string.mv_action_type_set_silent_off);
-            case ACTION_TASKER:
-                return mFragment.getString(R.string.mv_action_type_tasker);
-        }
-        return mFragment.getString(R.string.mv_action_type_none);
-    }
-
-    public boolean isEnabled() {
-        return mActionBeacon.isEnabled();
-    }
-
-    public String getEnableStatus() {
-        return mActionBeacon.isEnabled() ? mFragment.getString(R.string.mv_action_status_enable) : mFragment.getString(R.string.mv_action_status_disabled);
-    }
-
-    public View.OnClickListener onClickEdit() {
-        return new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                launchActionDetailsActivity();
-            }
-        };
-    }
-
-    protected void launchActionDetailsActivity() {
-        Intent intent = BeaconActionActivity.getStartIntent(mFragment.getActivity());
-        intent.putExtra(Constants.ARG_ACTION_BEACON, mActionBeacon);
-        mFragment.startActivityForResult(intent, Constants.REQ_UPDATED_ACTION_BEACON);
-    }
-
-
-    public View.OnClickListener onClickDelete() {
-        return new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                mFragment.removeBeaconAction(mActionBeacon.getBeaconId(), mActionBeacon.getId());
-            }
-        };
-    }
-
-    public View.OnClickListener onClickEnable() {
-        return new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                mFragment.enableBeaconAction(mActionBeacon.getBeaconId(), mActionBeacon.getId(), !mActionBeacon.isEnabled());
-            }
-        };
-    }
-}
Index: app/src/main/res/drawable-v21/ic_menu_camera.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_camera.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_menu_camera.xml	(date 1501671703000)
@@ -1,12 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0" />
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M9,2L7.17,4H4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2H9zm3,15c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z" />
-</vector>
Index: app/src/main/res/layout/activity_home_beacon_navigation.xml
===================================================================
--- app/src/main/res/layout/activity_home_beacon_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_home_beacon_navigation.xml	(date 1501671703000)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/drawer_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:openDrawer="start">
-
-    <include
-        layout="@layout/app_bar_home_beacon_navigation"
-        android:layout_width="match_parent"
-        android:background="@color/purple_light"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_home_beacon_navigation"
-        app:menu="@menu/activity_home_beacon_navigation_drawer" />
-
-</android.support.v4.widget.DrawerLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/data/StoreService.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/data/StoreService.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/data/StoreService.java	(date 1501671703000)
@@ -1,58 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.data;
-
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-
-import java.util.List;
-
-/**
- * Created by vitas on 20/12/15.
- */
-public interface StoreService {
-
-    boolean createBeacon(final TrackedBeacon beacon);
-
-    boolean updateBeacon(final TrackedBeacon beacon);
-
-    boolean deleteBeacon(final String id, boolean cascade);
-
-    TrackedBeacon getBeacon(final String id);
-
-    List<TrackedBeacon> getBeacons();
-
-    boolean updateBeaconDistance(final String id, double distance);
-
-    boolean updateBeaconAction(ActionBeacon beacon);
-
-    boolean createBeaconAction(ActionBeacon beacon);
-
-    List<ActionBeacon> getBeaconActions(final String beaconId);
-
-    boolean deleteBeaconAction(final int id);
-
-    boolean deleteBeaconActions(final String beaconId);
-
-    List<ActionBeacon> getAllEnabledBeaconActions();
-
-    boolean updateBeaconActionEnable(final int id, boolean enable);
-
-    List<ActionBeacon> getEnabledBeaconActionsByEvent(final int eventType, final String beaconId);
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/util/PreferencesUtil.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/util/PreferencesUtil.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/util/PreferencesUtil.java	(date 1501671703000)
@@ -1,83 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.util;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
-
-
-/**
- * Created by vitas on 21/10/15.
- */
-public final class PreferencesUtil {
-
-    private PreferencesUtil() {
-    }
-
-    public static SharedPreferences getSharedPreferences(Context context) {
-        return PreferenceManager.getDefaultSharedPreferences(context);
-        //return Student_Tracking.from(mContext).getSharedPreferences("beaconloc_pref_name", Context.MODE_PRIVATE);
-    }
-
-    public static String getDefaultRegionName(Context context) {
-        return getSharedPreferences(context).getString("scan_default_region_text", Constants.DEFAULT_PROJECT_NAME);
-    }
-
-    public static int getScanBeaconSort(Context context) {
-        return Integer.parseInt(getSharedPreferences(context).getString("scan_sorting_order_list", Integer.toString(Constants.SORT_DISTANCE_NEAREST_FIRST)));
-    }
-
-    public static void setScanBeaconSort(Context context, int sort) {
-        getSharedPreferences(context).edit().putString("scan_sorting_order_list", Integer.toString(sort)).apply();
-    }
-
-    public static int getManualScanTimeout(Context context) {
-        return Integer.parseInt(getSharedPreferences(context).getString("scan_manual_timeout_list", "30000"));
-    }
-
-    public static void clear(Context context) {
-        getSharedPreferences(context).edit().clear().apply();
-    }
-
-    public static boolean isBackgroundScan(Context context) {
-        return getSharedPreferences(context).getBoolean("scan_background_switch", true);
-    }
-
-    public static int getBackgroundScanInterval(Context context) {
-        return Integer.parseInt(getSharedPreferences(context).getString("scan_background_timeout_list", "120000"));
-    }
-
-    public static boolean isEddystoneLayoutUID(Context context) {
-        return getSharedPreferences(context).getBoolean("scan_parser_layout_eddystone_uid", true);
-    }
-
-    public static boolean isEddystoneLayoutURL(Context context) {
-        return getSharedPreferences(context).getBoolean("scan_parser_layout_eddystone_url", true);
-    }
-
-    public static int getSilentModeProfile(Context context) {
-        return getSharedPreferences(context).getInt("silent_profile_mode", 2);
-    }
-
-    public static void setSilentModeProfile(Context context, int mode) {
-        getSharedPreferences(context).edit().putInt("silent_profile_mode", mode).apply();
-    }
-
-}
\ No newline at end of file
Index: app/src/main/res/xml/preferences_beacon_detail.xml
===================================================================
--- app/src/main/res/xml/preferences_beacon_detail.xml	(date 1501671703000)
+++ app/src/main/res/xml/preferences_beacon_detail.xml	(date 1501671703000)
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:key="key_details">
-
-    <PreferenceCategory
-        android:title="@string/pref_bd_name_category">
-        <SwitchPreferenceCompat
-            android:title="@string/pref_bd_switch_active"
-            android:key="bd_switch_active"
-            android:summary="@string/pref_bd_summary_switch_active"/>
-        <EditTextPreference
-            android:title="@string/pref_bd_name"
-            android:key="bd_name_info"/>
-
-    </PreferenceCategory>
-
-    <Preference
-        android:title="@string/pref_bd_bluetooth_address"
-        android:key="bd_bluetooth_address_info"/>
-    <Preference
-        android:title="@string/pref_bd_uuid"
-        android:key="bd_uuid_info"/>
-    <Preference
-        android:title="@string/pref_bd_major"
-        android:key="bd_major_info"/>
-    <Preference
-        android:title="@string/pref_bd_minor"
-        android:key="bd_minor_info"/>
-
-</PreferenceScreen>
\ No newline at end of file
Index: app/src/main/res/layout/content_map_page.xml
===================================================================
--- app/src/main/res/layout/content_map_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_map_page.xml	(date 1501671703000)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MapPage"
-    tools:showIn="@layout/app_bar_map_page">
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/res/drawable-hdpi/ic_menu_send.xml
===================================================================
--- app/src/main/res/drawable-hdpi/ic_menu_send.xml	(date 1501671703000)
+++ app/src/main/res/drawable-hdpi/ic_menu_send.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z" />
-</vector>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapsActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapsActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapsActivity.java	(date 1501671703000)
@@ -1,709 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.Manifest;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.drawable.Drawable;
-import android.location.Location;
-import android.location.LocationListener;
-import android.os.AsyncTask;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.v4.app.ActivityCompat;
-import android.support.v4.app.FragmentActivity;
-import android.support.v4.content.ContextCompat;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.android.volley.Request;
-import com.android.volley.RequestQueue;
-import com.android.volley.Response;
-import com.android.volley.VolleyError;
-import com.android.volley.toolbox.StringRequest;
-import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.api.GoogleApiClient;
-import com.google.android.gms.location.LocationRequest;
-import com.google.android.gms.location.LocationServices;
-import com.google.android.gms.maps.CameraUpdateFactory;
-import com.google.android.gms.maps.GoogleMap;
-import com.google.android.gms.maps.OnMapReadyCallback;
-import com.google.android.gms.maps.SupportMapFragment;
-import com.google.android.gms.maps.model.BitmapDescriptor;
-import com.google.android.gms.maps.model.BitmapDescriptorFactory;
-import com.google.android.gms.maps.model.LatLng;
-import com.google.android.gms.maps.model.Marker;
-import com.google.android.gms.maps.model.MarkerOptions;
-import com.google.android.gms.maps.model.PolylineOptions;
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.data.NewDbStoreService;
-import com.ellipsonic.www.student_tracking.database.SharedPreference;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-
-//import org.json.JSONArray;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.net.HttpURLConnection;
-import java.net.MalformedURLException;
-import java.net.ProtocolException;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.Executors;
-import java.util.concurrent.ScheduledExecutorService;
-import java.util.concurrent.TimeUnit;
-
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.detectedMacId;
-//
-//import static android.os.Build.VERSION_CODES.N;
-//import static java.lang.Math.E;
-
-public class MapsActivity extends FragmentActivity implements OnMapReadyCallback,
-        GoogleApiClient.ConnectionCallbacks,
-        GoogleApiClient.OnConnectionFailedListener,
-        LocationListener {
-
-    private static final String url = "http://wisdomkraft.com/wisdomkraft.com/prudence/IoT/StudentTracking/Data_in_json.php";
-
-    public static String LastSeen;
-    String studentname3;
-    Button student_info;
-    private GoogleMap mMap;
-    ArrayList<LatLng> MarkerPoints;
-    GoogleApiClient mGoogleApiClient;
-    Location mLastLocation;
-    Marker mCurrLocationMarker;
-    LocationRequest mLocationRequest;
-    Thread track_bus;
-    Button logoutBtn;
-    ScheduledExecutorService scheduleTaskExecutor;
-    Marker myMarker = null;
-    SharedPreference sharedPreference;
-    private com.android.volley.toolbox.Volley Volley;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_maps);
-
-        sharedPreference = new SharedPreference();
-
-        student_info = (Button) findViewById(R.id.student_info);
-
-        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-            checkLocationPermission();
-        }
-        // Initializing
-        MarkerPoints = new ArrayList<>();
-
-        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
-        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
-        mapFragment.getMapAsync(this);
-
-//        logoutBtn = (Button)findViewById(R.id.logoutBtn);
-//        logoutBtn.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//               sharedPreference.clearSharedPreference(getApplicationContext());
-//
-//                scheduleTaskExecutor.shutdownNow();
-//                Intent intent = new Intent(getApplicationContext() , Login.class);
-//                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-//                startActivity(intent);
-//                finish();
-//            }
-//        });
-
-    }
-
-
-
-    @Override
-    public void onMapReady(GoogleMap googleMap) {
-        mMap = googleMap;
-
-        start_backgroundTask();
-
-        Drawable circleDrawable = getResources().getDrawable(R.drawable.school_public);
-        BitmapDescriptor markerIcon = getMarkerIconFromDrawable(circleDrawable);
-
-        LatLng latLng = new LatLng(12.9771, 77.5525);
-        MarkerPoints.add(latLng);
-        MarkerOptions markerOptions = new MarkerOptions();
-        markerOptions.position(latLng);
-      //  markerOptions.title("BNM public School");
-        markerOptions.icon(markerIcon);
-//        markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_MAGENTA));
-        mCurrLocationMarker = mMap.addMarker(markerOptions);
-        //move map camera
-      //  mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
-      //  mMap.animateCamera(CameraUpdateFactory.zoomTo(15));
-
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        if(scheduleTaskExecutor != null){
-            scheduleTaskExecutor.shutdown();
-        }
-
-    }
-
-    private void start_backgroundTask() {
-        scheduleTaskExecutor = Executors.newScheduledThreadPool(5);
-        //  This schedule a runnable task every 2 minutes
-        scheduleTaskExecutor.scheduleAtFixedRate(new Runnable() {
-            public void run() {
-        server();
-
-//                String url_map = "http://wisdomkraft.com/wisdomkraft.com/prudence/IoT/StudentTracking/Data_in_json.php"+sharedPreference.getValue(getApplicationContext(),"STUDENT_MAC");
-//              new GetBusPoints().execute(url_map);
-
-         //       display_busLocation(12.9716, 77.5946);
-
-
-        //       new GetBusPoints().execute("http://www.wisdomkraft.com/Dev/StudentTracking/RawBeaconDataWithGPS_To_Android.php?UUID=2F234452CF6D4A0FADF2F4911BA9FFA6");
-             //   Log.d("Url",url_map);
-            }
-        }, 0, 1000, TimeUnit.SECONDS);
-    }
-
-    public void server()
-    {
-        StringRequest stringRequest = new StringRequest(Request.Method.POST,url,
-                new Response.Listener<String>() {
-                    @Override
-                    public void onResponse(String response) {
-                     //  Toast.makeText(MapsActivity.this,response, Toast.LENGTH_LONG).show();
-                        JSONArray jsonObj = null;
-                        try {
-                            double lastSeen;
-                            jsonObj = new JSONArray(response);
-                            JSONObject resultObj=jsonObj.getJSONObject(0);
-                            double latitude = 0.0, longitude = 0.0;
-                            latitude = Double.parseDouble(resultObj.getString("LATITUDE"));
-                            longitude = Double.parseDouble(resultObj.getString("LONGITUDE"));
-                            LastSeen=String.valueOf(resultObj.getString("TIME"));
-                            display_busLocation(latitude, longitude);
-
-
-                            Intent intent1 = getIntent();
-                            try {
-                                if (!intent1.equals(null)) {
-                                    studentname3 = intent1.getStringExtra("studentname");
-                                    student_info.setText("Now We are Tracking "+" "+studentname3+"\n"+"LastSeen is "+"  "+LastSeen);
-
-                                }
-                            } catch (NullPointerException e) {
-                                e.printStackTrace();
-                            }
-
-
-
-
-                        } catch (JSONException e) {
-                            e.printStackTrace();
-                        }
-                    }
-                },
-                new Response.ErrorListener() {
-                    @Override
-                    public void onErrorResponse(VolleyError error) {
-                        Toast.makeText(MapsActivity.this,error.toString(),Toast.LENGTH_LONG).show();
-                    }
-                }){
-            @Override
-
-            protected Map<String,String> getParams(){
-
-                // String s="0CF3EE09392B";
-                //  s="0CF3EE09392B";
-                Map<String,String> params = new HashMap<String, String>();
-                String aa=detectedMacId;
-                params.put("mac",detectedMacId);
-                return params;
-            }
-
-        };
-
-        RequestQueue requestQueue = Volley.newRequestQueue(this);
-        requestQueue.add(stringRequest);
-    }
-
-
-
-
-    private void display_busLocation(double lat, double lon) {
-
-        // Already two locations
-        if (MarkerPoints.size() >= 2) {
-            MarkerPoints.remove(2);
-            MarkerPoints.add(new LatLng(lat,lon));
-            myMarker.remove();
-        }else {
-            MarkerPoints.add(new LatLng(lat, lon));
-        }
-            LatLng point = new LatLng(lat,lon);
-            // Adding new item to the ArrayList
-            MarkerPoints.add(point);
-
-            Drawable circleDrawable = getResources().getDrawable(R.drawable.child);
-            BitmapDescriptor icon = getMarkerIconFromDrawable(circleDrawable);
-
-        // Creating MarkerOptions
-            MarkerOptions options = new MarkerOptions();
-            options.position(point);
-            options.title(sharedPreference.getValue(this,"STUDENT_NAME"));
-            options.icon(icon);
-            myMarker = mMap.addMarker(options);
-//            if (MarkerPoints.size() == 2) {
-//                options.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_BLUE));
-//                options.icon(icon);
-//            }
-            mMap.addMarker(options);
-            // Checks, whether start and end locations are captured
-            if (MarkerPoints.size() >= 2) {
-                LatLng origin = MarkerPoints.get(0);
-                LatLng dest = MarkerPoints.get(1);
-
-                // Getting URL to the Google Directions API
-                String url = getUrl(origin, dest);
-                Log.d("onMapClick", url.toString());
-                FetchUrl FetchUrl = new FetchUrl();
-
-                // Start downloading json data from Google Directions API
-            //    FetchUrl.execute(url);
-//                //move map camera
-                mMap.moveCamera(CameraUpdateFactory.newLatLng(dest));
-                mMap.animateCamera(CameraUpdateFactory.zoomTo(16));
-
-                // Move the camera instantly to Sydney with a zoom of 15.
-          //      mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(dest, 15));
-
-// Zoom in, animating the camera.
-         //       mMap.animateCamera(CameraUpdateFactory.zoomIn());
-
-// Zoom out to zoom level 10, animating with a duration of 2 seconds.
-            //    mMap.animateCamera(CameraUpdateFactory.zoomTo(10), 2000, null);
-
-// Construct a CameraPosition focusing on Mountain View and animate the camera to that position.
-//                CameraPosition cameraPosition = new CameraPosition.Builder()
-//                        .target(dest)      // Sets the center of the map to Mountain View
-//                        .zoom(17)                   // Sets the zoom
-//                        .bearing(90)                // Sets the orientation of the camera to east
-//                        .tilt(30)                   // Sets the tilt of the camera to 30 degrees
-//                        .build();                   // Creates a CameraPosition from the builder
-//                mMap.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPosition));
-            }
-       }
-
-    private BitmapDescriptor getMarkerIconFromDrawable(Drawable drawable) {
-        Canvas canvas = new Canvas();
-        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
-        canvas.setBitmap(bitmap);
-        drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
-        drawable.draw(canvas);
-        return BitmapDescriptorFactory.fromBitmap(bitmap);
-    }
-
-    private String getUrl(LatLng origin, LatLng dest) {
-
-        // Origin of route
-        String str_origin = "origin=" + origin.latitude + "," + origin.longitude;
-
-        // Destination of route
-        String str_dest = "destination=" + dest.latitude + "," + dest.longitude;
-
-        // Sensor enabled
-        String sensor = "sensor=false";
-
-        // Building the parameters to the web service
-        String parameters = str_origin + "&" + str_dest + "&" + sensor;
-
-        // Output format
-        String output = "json";
-
-        // Building the url to the web service
-        String url = "https://maps.googleapis.com/maps/api/directions/" + output + "?" + parameters;
-
-        return url;
-    }
-
-    /**
-     * A method to download json data from url
-     */
-
-    private String downloadUrl(String strUrl) throws IOException {
-        String data = "";
-        InputStream iStream = null;
-        HttpURLConnection urlConnection = null;
-        try {
-            URL url = new URL(strUrl);
-
-            // Creating an http connection to communicate with url
-            urlConnection = (HttpURLConnection) url.openConnection();
-
-            // Connecting to url
-            urlConnection.connect();
-
-            // Reading data from url
-            iStream = urlConnection.getInputStream();
-
-            BufferedReader br = new BufferedReader(new InputStreamReader(iStream));
-
-            StringBuffer sb = new StringBuffer();
-
-            String line = "";
-            while ((line = br.readLine()) != null) {
-                sb.append(line);
-            }
-
-            data = sb.toString();
-            Log.d("downloadUrl", data.toString());
-            br.close();
-
-        } catch (Exception e) {
-            Log.d("Exception", e.toString());
-        } finally {
-            iStream.close();
-            urlConnection.disconnect();
-        }
-        return data;
-    }
-
-
-    protected synchronized void buildGoogleApiClient() {
-        mGoogleApiClient = new GoogleApiClient.Builder(this)
-                .addConnectionCallbacks(this)
-                .addOnConnectionFailedListener(this)
-                .addApi(LocationServices.API)
-                .build();
-        mGoogleApiClient.connect();
-
-    }
-
-    @Override
-    public void onConnected(Bundle bundle) {
-    }
-
-    @Override
-    public void onConnectionSuspended(int i) {
-    }
-
-    @Override
-    public void onLocationChanged(Location location) {
-    }
-
-    @Override
-    public void onStatusChanged(String provider, int status, Bundle extras) {
-    }
-
-    @Override
-    public void onProviderEnabled(String provider) {
-    }
-
-    @Override
-    public void onProviderDisabled(String provider) {
-    }
-
-    @Override
-    public void onConnectionFailed(ConnectionResult connectionResult) {
-    }
-
-    // Fetches data from url passed
-    private class FetchUrl extends AsyncTask<String, Void, String> {
-
-        @Override
-        protected String doInBackground(String... url) {
-
-            // For storing data from web service
-            String data = "";
-
-            try {
-                // Fetching the data from web service
-                data = downloadUrl(url[0]);
-                Log.d("Background Task data", data.toString());
-            } catch (Exception e) {
-                Log.d("Background Task", e.toString());
-            }
-            return data;
-        }
-
-        @Override
-        protected void onPostExecute(String result) {
-            super.onPostExecute(result);
-
-            ParserTask parserTask = new ParserTask();
-
-            // Invokes the thread for parsing the JSON data
-            parserTask.execute(result);
-
-        }
-    }
-
-    /**
-     * A class to parse the Google Places in JSON format
-     */
-    private class ParserTask extends AsyncTask<String, Integer, List<List<HashMap<String, String>>>> {
-
-        // Parsing the data in non-ui thread
-        @Override
-        protected List<List<HashMap<String, String>>> doInBackground(String... jsonData) {
-
-            JSONObject jObject;
-            List<List<HashMap<String, String>>> routes = null;
-
-            try {
-                jObject = new JSONObject(jsonData[0]);
-                Log.d("ParserTask",jsonData[0].toString());
-//                DataParser parser = new DataParser();
-//                Log.d("ParserTask", parser.toString());
-
-                // Starts parsing data
-//                routes = parser.parse(jObject);
-                Log.d("ParserTask","Executing routes");
-                Log.d("ParserTask",routes.toString());
-
-            } catch (Exception e) {
-                Log.d("ParserTask",e.toString());
-                e.printStackTrace();
-            }
-            return routes;
-        }
-
-        // Executes in UI thread, after the parsing process
-        @Override
-        protected void onPostExecute(List<List<HashMap<String, String>>> result) {
-            ArrayList<LatLng> points;
-            PolylineOptions lineOptions = null;
-
-            // Traversing through all the routes
-            for (int i = 0; i < result.size(); i++) {
-                points = new ArrayList<>();
-                lineOptions = new PolylineOptions();
-
-                // Fetching i-th route
-                List<HashMap<String, String>> path = result.get(i);
-
-                // Fetching all the points in i-th route
-                for (int j = 0; j < path.size(); j++) {
-                    HashMap<String, String> point = path.get(j);
-
-                    double lat = Double.parseDouble(point.get("lat"));
-                    double lng = Double.parseDouble(point.get("lng"));
-                    LatLng position = new LatLng(lat, lng);
-
-                    points.add(position);
-                }
-
-                // Adding all the points in the route to LineOptions
-                lineOptions.addAll(points);
-                lineOptions.width(5);
-                lineOptions.color(Color.RED);
-
-                Log.d("onPostExecute","onPostExecute lineoptions decoded");
-
-            }
-
-            // Drawing polyline in the Google Map for the i-th route
-            if(lineOptions != null) {
-                mMap.addPolyline(lineOptions);
-            }
-            else {
-                Log.d("onPostExecute","without Polylines drawn");
-            }
-        }
-    }
-
-
-
-    public static final int MY_PERMISSIONS_REQUEST_LOCATION = 99;
-    public boolean checkLocationPermission(){
-        if (ContextCompat.checkSelfPermission(this,
-                Manifest.permission.ACCESS_FINE_LOCATION)
-                != PackageManager.PERMISSION_GRANTED) {
-
-            // Asking user if explanation is needed
-            if (ActivityCompat.shouldShowRequestPermissionRationale(this,
-                    Manifest.permission.ACCESS_FINE_LOCATION)) {
-
-                // Show an explanation to the user *asynchronously* -- don't block
-                // this thread waiting for the user's response! After the user
-                // sees the explanation, try again to request the permission.
-
-                //Prompt the user once explanation has been shown
-                ActivityCompat.requestPermissions(this,
-                        new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
-                        MY_PERMISSIONS_REQUEST_LOCATION);
-
-
-            } else {
-                // No explanation needed, we can request the permission.
-                ActivityCompat.requestPermissions(this,
-                        new String[]{Manifest.permission.ACCESS_FINE_LOCATION},
-                        MY_PERMISSIONS_REQUEST_LOCATION);
-            }
-            return false;
-        } else {
-            return true;
-        }
-    }
-
-    @Override
-    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
-        switch (requestCode) {
-            case MY_PERMISSIONS_REQUEST_LOCATION: {
-                // If request is cancelled, the result arrays are empty.
-                if (grantResults.length > 0
-                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
-
-                    // permission was granted. Do the
-                    // contacts-related task you need to do.
-                    if (ContextCompat.checkSelfPermission(this,
-                            Manifest.permission.ACCESS_FINE_LOCATION)
-                            == PackageManager.PERMISSION_GRANTED) {
-
-                        if (mGoogleApiClient == null) {
-                            buildGoogleApiClient();
-                        }
-                    //    mMap.setMyLocationEnabled(true);
-                    }
-                } else {
-                    // Permission denied, Disable the functionality that depends on this permission.
-                    Toast.makeText(this, "permission denied", Toast.LENGTH_LONG).show();
-                }
-                return;
-            }
-        }
-    }
-
-    public class GetBusPoints extends AsyncTask<String , Void ,String> {
-        String server_response;
-        @Override
-        protected String doInBackground(String... strings) {
-
-            InputStream input_stream = null;
-
-            try {
-                URL url = new URL(strings[0]);
-                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
-                conn.setRequestMethod("GET");
-                conn.setDoInput(true);
-                conn.connect();
-                int response = conn.getResponseCode();
-                input_stream = conn.getInputStream();
-                server_response = readStream(input_stream);
-                return server_response;
-
-            } catch (MalformedURLException e) {
-                e.printStackTrace();
-            } catch (ProtocolException e) {
-                e.printStackTrace();
-            } catch (IOException e) {
-                e.printStackTrace();
-            }  finally {
-                if (input_stream != null) {
-                    try {
-                        input_stream.close();
-                    } catch (IOException e) {
-                        e.printStackTrace();
-                    }
-                }
-            }
-            return null;
-        }
-
-        @Override
-        protected void onPostExecute(String stringRequest) {
-            super.onPostExecute(stringRequest);
-
-            if(!stringRequest.equals(null)){
-                try {
-                    JSONArray jsonObj = new JSONArray(server_response);
-                    if(jsonObj.length() != 0) {
-                        JSONObject resultObj = null;
-                        double latitude = 0.0, longitude = 0.0;
-                        try {
-                            resultObj = new JSONObject(jsonObj.get(0).toString());
-                        } catch (NullPointerException e) {
-                            e.printStackTrace();
-                        }
-                        if (!resultObj.equals(null)) {
-                            latitude = Double.parseDouble(resultObj.getString("LATITUDE"));
-                            longitude = Double.parseDouble(resultObj.getString("LONGITUDE"));
-                        }
-                        if (latitude != 0.0 && longitude != 0.0){
-                            display_busLocation(latitude, longitude);
-                            //    String abc = R.string.student_captured+resultObj.getString("TIME");
-                            String student_name = sharedPreference.getValue(getApplicationContext(),"STUDENT_NAME");
-                            student_info.setText(student_name+" := is here At This Time : "+resultObj.getString("TIME"));
-                        }else {
-                            student_info.setText(R.string.student_data_not_recieved);
-                        }
-                    }
-
-                }catch (JSONException e){
-                    e.printStackTrace();
-                }catch (NullPointerException e){
-                    e.printStackTrace();
-                }
-
-            }else{
-//                Log.e("Response", "" + server_response);
-                student_info.setText(R.string.student_data_not_recieved);
-                Toast.makeText(getApplicationContext(),"No data Fetched",Toast.LENGTH_SHORT).show();
-            }
-        }
-    }
-
-    // Converting InputStream to String
-    private String readStream(InputStream in) {
-        BufferedReader reader = null;
-        StringBuffer response = new StringBuffer();
-        try {
-            reader = new BufferedReader(new InputStreamReader(in));
-            String line = "";
-            while ((line = reader.readLine()) != null) {
-                response.append(line);
-            }
-        } catch (IOException e) {
-            e.printStackTrace();
-        } finally {
-            if (reader != null) {
-                try {
-                    reader.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-        return response.toString();
-    }
-
-    @Override
-    public void onBackPressed(){
-
-        startActivity(new Intent(getApplicationContext(), MapNavigationActivty.class));
-        finish();
-        System.exit(1);
-
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/util/AngleLowpassFilter.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/util/AngleLowpassFilter.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/util/AngleLowpassFilter.java	(date 1501671703000)
@@ -1,53 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.util;
-
-import java.util.ArrayDeque;
-
-/**
- * thanks
- * http://stackoverflow.com/questions/4699417/android-compass-orientation-on-unreliable-low-pass-filter
- */
-public class AngleLowpassFilter {
-
-    private final int LENGTH = 10;
-    private float sumSin, sumCos;
-
-    private ArrayDeque<Float> queue = new ArrayDeque<>();
-
-    public void add(float radians) {
-
-        sumSin += (float) Math.sin(radians);
-        sumCos += (float) Math.cos(radians);
-
-        queue.add(radians);
-
-        if (queue.size() > LENGTH) {
-
-            float old = queue.poll();
-            sumSin -= Math.sin(old);
-            sumCos -= Math.cos(old);
-        }
-    }
-
-    public float average() {
-        int size = queue.size();
-        return (float) Math.atan2(sumSin / size, sumCos / size);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/net/dinglisch/android/tasker/TaskerIntent.java
===================================================================
--- app/src/main/java/net/dinglisch/android/tasker/TaskerIntent.java	(date 1501671703000)
+++ app/src/main/java/net/dinglisch/android/tasker/TaskerIntent.java	(date 1501671703000)
@@ -1,433 +0,0 @@
-
-// Version 1.3.3
-
-// Changelog
-
-// Version 1.3.3
-//   - increased MAX_NO_ARGS to 10
-
-// Version 1.3.2
-// 	- bug setting app arg
-//	- pulled provider column names out of function
-
-// For usage examples see http://tasker.dinglisch.net/invoketasks.html
-
-package net.dinglisch.android.tasker;
-
-import java.lang.reflect.Field;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Random;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.database.Cursor;
-import android.net.Uri;
-import android.os.Bundle;
-import android.os.PatternMatcher;
-import android.os.Process;
-import android.util.Log;
-
-public class TaskerIntent extends Intent {
-
-	// 3 Tasker versions
-	public final static String TASKER_PACKAGE = "net.dinglisch.android.tasker";
-	public final static String TASKER_PACKAGE_MARKET = TASKER_PACKAGE + "m";
-	public final static String TASKER_PACKAGE_CUPCAKE = TASKER_PACKAGE + "cupcake";
-
-	// Play Store download URLs
-	public final static String MARKET_DOWNLOAD_URL_PREFIX = "market://details?id=";
-	private final static String TASKER_MARKET_URL = MARKET_DOWNLOAD_URL_PREFIX + TASKER_PACKAGE_MARKET;
-	private final static String TASKER_MARKET_URL_CUPCAKE = MARKET_DOWNLOAD_URL_PREFIX + TASKER_PACKAGE_CUPCAKE;
-
-	// Direct-purchase version
-	private final static String TASKER_DOWNLOAD_URL = "http://tasker.dinglisch.net/download.html";
-
-	// Intent actions
-	public final static String ACTION_TASK = TASKER_PACKAGE + ".ACTION_TASK";
-	public final static String ACTION_TASK_COMPLETE = TASKER_PACKAGE + ".ACTION_TASK_COMPLETE";
-	public final static String ACTION_TASK_SELECT = TASKER_PACKAGE + ".ACTION_TASK_SELECT";
-
-	// Intent parameters
-	public final static String EXTRA_ACTION_INDEX_PREFIX = "action";
-	public final static String TASK_NAME_DATA_SCHEME = "task";
-	public final static String EXTRA_TASK_NAME = "task_name";
-	public final static String EXTRA_TASK_PRIORITY = "task_priority";
-	public final static String EXTRA_SUCCESS_FLAG = "success";
-	public final static String EXTRA_VAR_NAMES_LIST = "varNames";
-	public final static String EXTRA_VAR_VALUES_LIST = "varValues";
-	public final static String EXTRA_TASK_OUTPUT = "output";
-
-	// Content provider columns
-	public static final String PROVIDER_COL_NAME_EXTERNAL_ACCESS = "ext_access";
-	public static final String PROVIDER_COL_NAME_ENABLED = "enabled";
-
-	// DEPRECATED, use EXTRA_VAR_NAMES_LIST, EXTRA_VAR_VALUES_LIST
-	public final static String EXTRA_PARAM_LIST = "params";
-
-	// Intent data
-
-	public final static String TASK_ID_SCHEME = "id";
-
-	// For particular actions
-
-	public final static String DEFAULT_ENCRYPTION_KEY = "default";
-	public final static String ENCRYPTED_AFFIX = "tec";
-	public final static int MAX_NO_ARGS = 10;
-
-	// Bundle keys
-	// Only useful for Tasker
-	public final static String ACTION_CODE = "action";
-	public final static String APP_ARG_PREFIX = "app:";
-	public final static String ICON_ARG_PREFIX = "icn:";
-	public final static String ARG_INDEX_PREFIX = "arg:";
-	public static final String PARAM_VAR_NAME_PREFIX = "par";
-
-	// Misc
-	private final static String PERMISSION_RUN_TASKS = TASKER_PACKAGE + ".PERMISSION_RUN_TASKS";
-
-	private final static String ACTION_OPEN_PREFS = TASKER_PACKAGE + ".ACTION_OPEN_PREFS";
-	public final static String EXTRA_OPEN_PREFS_TAB_NO = "tno";
-	private final static int MISC_PREFS_TAB_NO = 3; // 0 based
-
-	// To query whether Tasker is enabled and external access is enabled
-	private final static String TASKER_PREFS_URI = "content://" + TASKER_PACKAGE + "/prefs";
-
-	private final static int CUPCAKE_SDK_VERSION = 3;
-
-	// result values for TestSend
-
-	// NotInstalled: Tasker package not found on device
-	// NoPermission: calling app does not have permission PERMISSION_RUN_TASKS
-	// NotEnabled: Tasker is not enabled
-	// AccessBlocked: user prefs disallow external access
-	// NoReceiver: Tasker has not created a listener for external access (probably a Tasker bug)
-	// OK: you should be able to send a task to run. Still need to listen for result 
-	//     for e.g. task not found
-
-	public enum Status {
-		NotInstalled,
-		NoPermission,
-		NotEnabled,
-		AccessBlocked,
-		NoReceiver,
-		OK
-	}
-
-	// -------------------------- PRIVATE VARS ---------------------------- //
-
-	private final static String TAG = "TaskerIntent";
-
-	private final static String EXTRA_INTENT_VERSION_NUMBER = "version_number";
-	private final static String INTENT_VERSION_NUMBER = "1.2.2";
-
-	// Inclusive values
-	private final static int MIN_PRIORITY = 0;
-	private final static int MAX_PRIORITY = 10;
-
-	// For generating random names
-	private static Random rand = new Random();
-
-	// Tracking state
-	private int actionCount = 0;
-	private int argCount;
-
-	// -------------------------- PUBLIC METHODS ---------------------------- //
-
-	public static int getMaxPriority() {
-		return MAX_PRIORITY;
-	}
-
-	public static boolean validatePriority(int pri) {
-		return ((pri >= MIN_PRIORITY) || (pri <= MAX_PRIORITY));
-	}
-
-	// Tasker has different package names for Play Store and non- versions
-	// for historical reasons
-
-	public static String getInstalledTaskerPackage(Context context) {
-
-		String foundPackage = null;
-
-		try {
-			context.getPackageManager().getPackageInfo(TASKER_PACKAGE, 0);
-			foundPackage = TASKER_PACKAGE;
-		} catch (PackageManager.NameNotFoundException e) {
-		}
-
-		try {
-			context.getPackageManager().getPackageInfo(TASKER_PACKAGE_MARKET, 0);
-			foundPackage = TASKER_PACKAGE_MARKET;
-		} catch (PackageManager.NameNotFoundException e) {
-		}
-
-		return foundPackage;
-	}
-
-	// test we can send a TaskerIntent to Tasker
-	// use *before* sending an intent
-	// still need to test the *result after* sending intent
-
-	public static Status testStatus(Context c) {
-
-		Status result;
-
-		if (!taskerInstalled(c))
-			result = Status.NotInstalled;
-		else if (!havePermission(c))
-			result = Status.NoPermission;
-		else if (!TaskerIntent.prefSet(c, PROVIDER_COL_NAME_ENABLED))
-			result = Status.NotEnabled;
-		else if (!TaskerIntent.prefSet(c, PROVIDER_COL_NAME_EXTERNAL_ACCESS))
-			result = Status.AccessBlocked;
-		else if (!new TaskerIntent("").receiverExists(c))
-			result = Status.NoReceiver;
-		else
-			result = Status.OK;
-
-		return result;
-	}
-
-	// Check if Tasker installed 
-
-	public static boolean taskerInstalled(Context context) {
-		return (getInstalledTaskerPackage(context) != null);
-	}
-
-	// Use with startActivity to retrieve Tasker from Android market
-	public static Intent getTaskerInstallIntent(boolean marketFlag) {
-
-		return new Intent(Intent.ACTION_VIEW, Uri.parse(marketFlag ? ((SDKVersion() == CUPCAKE_SDK_VERSION) ? TASKER_MARKET_URL_CUPCAKE : TASKER_MARKET_URL) : TASKER_DOWNLOAD_URL));
-	}
-
-	public static int SDKVersion() {
-		try {
-			Field f = android.os.Build.VERSION.class.getField("SDK_INT");
-			return f.getInt(null);
-		} catch (Exception e) {
-			return CUPCAKE_SDK_VERSION;
-		}
-	}
-
-	public static IntentFilter getCompletionFilter(String taskName) {
-
-		IntentFilter filter = new IntentFilter(TaskerIntent.ACTION_TASK_COMPLETE);
-
-		filter.addDataScheme(TASK_NAME_DATA_SCHEME);
-		filter.addDataPath(taskName, PatternMatcher.PATTERN_LITERAL);
-
-		return filter;
-	}
-
-	public static Intent getTaskSelectIntent() {
-		return new Intent(ACTION_TASK_SELECT).setFlags(Intent.FLAG_ACTIVITY_NO_USER_ACTION | Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS | Intent.FLAG_ACTIVITY_NO_HISTORY);
-	}
-
-	// public access deprecated, use TaskerIntent.testSend() instead
-
-	public static boolean havePermission(Context c) {
-		return c.checkPermission(PERMISSION_RUN_TASKS, Process.myPid(), Process.myUid()) == PackageManager.PERMISSION_GRANTED;
-	}
-
-	// Get an intent that will bring up the Tasker prefs screen with the External Access control(s)
-	// Probably you want to use startActivity or startActivityForResult with it
-
-	public static Intent getExternalAccessPrefsIntent() {
-		return new Intent(ACTION_OPEN_PREFS).putExtra(EXTRA_OPEN_PREFS_TAB_NO, MISC_PREFS_TAB_NO);
-	}
-
-	// ------------------------------------- INSTANCE METHODS ----------------------------- //
-
-	public TaskerIntent() {
-		super(ACTION_TASK);
-		setRandomData();
-		putMetaExtras(getRandomString());
-	}
-
-	public TaskerIntent(String taskName) {
-		super(ACTION_TASK);
-		setRandomData();
-		putMetaExtras(taskName);
-	}
-
-	public TaskerIntent setTaskPriority(int priority) {
-
-		if (validatePriority(priority))
-			putExtra(EXTRA_TASK_PRIORITY, priority);
-		else
-			Log.e(TAG, "priority out of range: " + MIN_PRIORITY + ":" + MAX_PRIORITY);
-
-		return this;
-	}
-
-	// Sets subsequently %par1, %par2 etc
-	public TaskerIntent addParameter(String value) {
-
-		int index = 1;
-
-		if (getExtras().containsKey(EXTRA_VAR_NAMES_LIST))
-			index = getExtras().getStringArrayList(EXTRA_VAR_NAMES_LIST).size() + 1;
-
-		Log.d(TAG, "index: " + index);
-
-		addLocalVariable("%" + PARAM_VAR_NAME_PREFIX + index, value);
-
-		return this;
-	}
-
-	// Arbitrary specification of (local) variable names and values
-	public TaskerIntent addLocalVariable(String name, String value) {
-
-		ArrayList<String> names, values;
-
-		if (hasExtra(EXTRA_VAR_NAMES_LIST)) {
-			names = getStringArrayListExtra(EXTRA_VAR_NAMES_LIST);
-			values = getStringArrayListExtra(EXTRA_VAR_VALUES_LIST);
-		} else {
-			names = new ArrayList<>();
-			values = new ArrayList<>();
-
-			putStringArrayListExtra(EXTRA_VAR_NAMES_LIST, names);
-			putStringArrayListExtra(EXTRA_VAR_VALUES_LIST, values);
-		}
-
-		names.add(name);
-		values.add(value);
-
-		return this;
-	}
-
-	public TaskerIntent addAction(int code) {
-
-		actionCount++;
-		argCount = 1;
-
-		Bundle actionBundle = new Bundle();
-
-		actionBundle.putInt(ACTION_CODE, code);
-
-		// Add action bundle to intent
-		putExtra(EXTRA_ACTION_INDEX_PREFIX + Integer.toString(actionCount), actionBundle);
-
-		return this;
-	}
-
-	// string arg
-	public TaskerIntent addArg(String arg) {
-
-		Bundle b = getActionBundle();
-
-		if (b != null)
-			b.putString(ARG_INDEX_PREFIX + Integer.toString(argCount++), arg);
-
-		return this;
-	}
-
-	// int arg
-	public TaskerIntent addArg(int arg) {
-		Bundle b = getActionBundle();
-
-		if (b != null)
-			b.putInt(ARG_INDEX_PREFIX + Integer.toString(argCount++), arg);
-
-		return this;
-	}
-
-	// boolean arg
-	public TaskerIntent addArg(boolean arg) {
-		Bundle b = getActionBundle();
-
-		if (b != null)
-			b.putBoolean(ARG_INDEX_PREFIX + Integer.toString(argCount++), arg);
-
-		return this;
-	}
-
-	// Application arg
-	public TaskerIntent addArg(String pkg, String cls) {
-		Bundle b = getActionBundle();
-
-		if (b != null) {
-			StringBuilder builder = new StringBuilder();
-			builder.append(APP_ARG_PREFIX).append(pkg).append(",").append(cls);
-			b.putString(ARG_INDEX_PREFIX + Integer.toString(argCount++), builder.toString()); // CHANGED: b.toString()
-		}
-
-		return this;
-	}
-
-	public IntentFilter getCompletionFilter() {
-		return getCompletionFilter(getTaskName());
-	}
-
-	public String getTaskName() {
-		return getStringExtra(EXTRA_TASK_NAME);
-	}
-
-	public boolean receiverExists(Context context) {
-		List<ResolveInfo> recs = context.getPackageManager().queryBroadcastReceivers(this, 0);
-		return ((recs != null) && (recs.size() > 0));
-	}
-
-	// -------------------- PRIVATE METHODS -------------------- //
-
-	private String getRandomString() {
-		return Long.toString(rand.nextLong());
-	}
-
-	// so that if multiple TaskerIntents are used in PendingIntents there's virtually no
-	// clash chance
-	private void setRandomData() {
-		setData(Uri.parse(TASK_ID_SCHEME + ":" + getRandomString()));
-	}
-
-	private Bundle getActionBundle() {
-
-		Bundle toReturn = null;
-
-		if (argCount > MAX_NO_ARGS)
-			Log.e(TAG, "maximum number of arguments exceeded (" + MAX_NO_ARGS + ")");
-		else {
-			String key = EXTRA_ACTION_INDEX_PREFIX + Integer.toString(actionCount);
-
-			if (this.hasExtra(key))
-				toReturn = getBundleExtra(key);
-			else
-				Log.e(TAG, "no actions added yet");
-		}
-
-		return toReturn;
-	}
-
-	private void putMetaExtras(String taskName) {
-		putExtra(EXTRA_INTENT_VERSION_NUMBER, INTENT_VERSION_NUMBER);
-		putExtra(EXTRA_TASK_NAME, taskName);
-	}
-
-	// for testing that Tasker is enabled and external access is allowed
-
-	private static boolean prefSet(Context context, String col) {
-
-		String[] proj = new String[] { col };
-
-		Cursor c = context.getContentResolver().query(Uri.parse(TASKER_PREFS_URI), proj, null, null, null);
-
-		boolean acceptingFlag = false;
-
-		if (c == null)
-			Log.w(TAG, "no cursor for " + TASKER_PREFS_URI);
-		else {
-			c.moveToFirst();
-
-			if (Boolean.TRUE.toString().equals(c.getString(0)))
-				acceptingFlag = true;
-
-			c.close();
-		}
-
-		return acceptingFlag;
-	}
-}
\ No newline at end of file
Index: build.gradle
===================================================================
--- build.gradle	(date 1501671703000)
+++ build.gradle	(date 1501671703000)
@@ -1,24 +0,0 @@
-// Top-level build file where you can add configuration options common to all sub-projects/modules.
-
-buildscript {
-    repositories {
-        jcenter()
-    }
-    dependencies {
-
-       // classpath 'com.google.gms:google-services:3.0.0'
-        classpath 'com.android.tools.build:gradle:2.3.3'
-        classpath 'com.android.databinding:dataBinder:1.0-rc4'
-        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
-    }
-}
-
-allprojects {
-    repositories {
-        jcenter()
-    }
-}
-
-task clean(type: Delete) {
-    delete rootProject.buildDir
-}
Index: app/.gitignore
===================================================================
--- app/.gitignore	(date 1501671703000)
+++ app/.gitignore	(date 1501671703000)
@@ -1,10 +0,0 @@
-/build
-*.jks
-*.keystore
-*.iml
-.gradle
-.idea
-.DS_Store
-build
-local.properties
-signing.properties
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/data/DataManager.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/data/DataManager.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/data/DataManager.java	(date 1501671703000)
@@ -1,113 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.data;
-
-import android.content.Context;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.injection.component.DaggerDataComponent;
-import com.ellipsonic.www.student_tracking.injection.module.DataModule;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import javax.inject.Inject;
-
-public class DataManager {
-
-    @Inject
-    protected StoreService mStoreService;
-    private List<ActionBeacon> mActionBeaconCache = new ArrayList<>();
-
-    public DataManager(Context context) {
-        injectDependencies(context);
-    }
-
-    protected void injectDependencies(Context context) {
-        DaggerDataComponent.builder()
-                .applicationComponent(Student_Tracking.from(context).getComponent())
-                .dataModule(new DataModule(context))
-                .build()
-                .inject(this);
-    }
-
-    public boolean createBeacon(TrackedBeacon beacon) {
-        return mStoreService.createBeacon(beacon);
-    }
-
-    public boolean updateBeacon(TrackedBeacon beacon) {
-        return mStoreService.updateBeacon(beacon);
-    }
-
-    public List<TrackedBeacon> getAllBeacons() {
-        return mStoreService.getBeacons();
-    }
-
-    public boolean createBeaconAction(ActionBeacon beacon) {
-        return mStoreService.createBeaconAction(beacon);
-    }
-
-    public boolean updateBeaconAction(ActionBeacon beacon) {
-        return mStoreService.updateBeaconAction(beacon);
-    }
-
-    public boolean deleteBeaconAction(int id) {
-        return mStoreService.deleteBeaconAction(id);
-    }
-
-    public boolean deleteBeacon(String beaconId, boolean cascade) {
-        return mStoreService.deleteBeacon(beaconId, cascade);
-    }
-
-    public List<ActionBeacon> getAllEnabledBeaconActions() {
-        List<ActionBeacon> actions = mStoreService.getAllEnabledBeaconActions();
-        mActionBeaconCache.clear();
-        mActionBeaconCache.addAll(actions);
-        return actions;
-    }
-
-    public boolean enableBeaconAction(int id, boolean enable) {
-        return mStoreService.updateBeaconActionEnable(id, enable);
-    }
-
-    public List<ActionBeacon> getEnabledBeaconActionsByEvent(ActionBeacon.EventType eventType, String beaconId) {
-        if (!mActionBeaconCache.isEmpty()) {
-            List<ActionBeacon> actionBeacons = new ArrayList<>();
-            for (ActionBeacon action : mActionBeaconCache) {
-                if (action.getBeaconId().equals(beaconId) && action.getEventType() == eventType) {
-                    actionBeacons.add(action);
-                }
-            }
-            if (actionBeacons.size() > 0) {
-                return actionBeacons;
-            }
-        }
-        return mStoreService.getEnabledBeaconActionsByEvent(eventType.getValue(), beaconId);
-    }
-
-    public TrackedBeacon getBeacon(String id) {
-        return mStoreService.getBeacon(id);
-    }
-
-    public boolean updateBeaconDistance(final String id, double distance) {
-        return mStoreService.updateBeaconDistance(id, distance);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/SettingsActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/SettingsActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/SettingsActivity.java	(date 1501671703000)
@@ -1,247 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-
-import android.annotation.TargetApi;
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.Configuration;
-import android.media.Ringtone;
-import android.media.RingtoneManager;
-import android.net.Uri;
-import android.os.Build;
-import android.os.Bundle;
-import android.preference.ListPreference;
-import android.preference.Preference;
-import android.preference.PreferenceFragment;
-import android.preference.PreferenceManager;
-import android.preference.RingtonePreference;
-import android.support.v7.app.ActionBar;
-import android.text.TextUtils;
-import android.view.MenuItem;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import java.util.List;
-
-
-public class SettingsActivity extends AppCompatPreferenceActivity {
-    /**
-     * A preference value change listener that updates the preference's summary
-     * to reflect its new value.
-     */
-    private static Preference.OnPreferenceChangeListener sBindPreferenceSummaryToValueListener = new Preference.OnPreferenceChangeListener() {
-        @Override
-        public boolean onPreferenceChange(Preference preference, Object value) {
-            String stringValue = value.toString();
-
-            if (preference instanceof ListPreference) {
-                // For list preferences, look up the correct display value in
-                // the preference's 'entries' list.
-                ListPreference listPreference = (ListPreference) preference;
-                int index = listPreference.findIndexOfValue(stringValue);
-
-                // Set the summary to reflect the new value.
-                preference.setSummary(
-                        index >= 0
-                                ? listPreference.getEntries()[index]
-                                : null);
-
-            } else if (preference instanceof RingtonePreference) {
-                // For ringtone preferences, look up the correct display value
-                // using RingtoneManager.
-                if (TextUtils.isEmpty(stringValue)) {
-                    // Empty values correspond to 'silent' (no ringtone).
-                    preference.setSummary(R.string.pref_ringtone_silent);
-
-                } else {
-                    Ringtone ringtone = RingtoneManager.getRingtone(
-                            preference.getContext(), Uri.parse(stringValue));
-
-                    if (ringtone == null) {
-                        // Clear the summary if there was a lookup error.
-                        preference.setSummary(null);
-                    } else {
-                        // Set the summary to reflect the new ringtone display
-                        // name.
-                        String name = ringtone.getTitle(preference.getContext());
-                        preference.setSummary(name);
-                    }
-                }
-
-            } else {
-                // For all other preferences, set the summary to the value's
-                // simple string representation.
-                preference.setSummary(stringValue);
-            }
-            return true;
-        }
-    };
-
-    /**
-     * Helper method to determine if the device has an extra-large screen. For
-     * example, 10" tablets are extra-large.
-     */
-    private static boolean isXLargeTablet(Context context) {
-        return (context.getResources().getConfiguration().screenLayout
-                & Configuration.SCREENLAYOUT_SIZE_MASK) >= Configuration.SCREENLAYOUT_SIZE_XLARGE;
-    }
-
-    /**
-     * Binds a preference's summary to its value. More specifically, when the
-     * preference's value is changed, its summary (line of text below the
-     * preference title) is updated to reflect the value. The summary is also
-     * immediately updated upon calling this method. The exact display format is
-     * dependent on the type of preference.
-     *
-     * @see #sBindPreferenceSummaryToValueListener
-     */
-    private static void bindPreferenceSummaryToValue(Preference preference) {
-        // Set the listener to watch for value changes.
-        preference.setOnPreferenceChangeListener(sBindPreferenceSummaryToValueListener);
-
-        // Trigger the listener immediately with the preference's
-        // current value.
-        sBindPreferenceSummaryToValueListener.onPreferenceChange(preference,
-                PreferenceManager
-                        .getDefaultSharedPreferences(preference.getContext())
-                        .getString(preference.getKey(), ""));
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setupActionBar();
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        int id = item.getItemId();
-        if (id == android.R.id.home) {
-            int SUCCESS_RESULT = 1;
-            setResult(SUCCESS_RESULT, new Intent());
-            finish();  //return to caller
-            return true;
-        }
-        return super.onOptionsItemSelected(item);
-    }
-
-    /**
-     * Set up the {@link android.app.ActionBar}, if the API is available.
-     */
-    private void setupActionBar() {
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            // Show the Up button in the action bar.
-            actionBar.setDisplayHomeAsUpEnabled(true);
-        }
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    @Override
-    public boolean onIsMultiPane() {
-        return isXLargeTablet(this);
-    }
-
-    /**
-     * {@inheritDoc}
-     */
-    @Override
-    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public void onBuildHeaders(List<Header> target) {
-        loadHeadersFromResource(R.xml.pref_headers, target);
-    }
-
-    /**
-     * This method stops fragment injection in malicious applications.
-     * Make sure to deny any unknown fragments here.
-     */
-    protected boolean isValidFragment(String fragmentName) {
-        return PreferenceFragment.class.getName().equals(fragmentName)
-                || ScanPreferenceFragment.class.getName().equals(fragmentName)
-                || ActionPreferenceFragment.class.getName().equals(fragmentName);
-    }
-
-    /**
-     * This fragment shows general preferences only. It is used when the
-     * activity is showing a two-pane settings UI.
-     */
-    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public static class ScanPreferenceFragment extends PreferenceFragment {
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-            addPreferencesFromResource(R.xml.pref_scan);
-            setHasOptionsMenu(true);
-
-            // Bind the summaries of EditText/List/Dialog/Ringtone preferences
-            // to their values. When their values change, their summaries are
-            // updated to reflect the new value, per the Android Design
-            // guidelines.
-            bindPreferenceSummaryToValue(findPreference("scan_default_region_text"));
-            bindPreferenceSummaryToValue(findPreference("scan_manual_timeout_list"));
-            bindPreferenceSummaryToValue(findPreference("scan_sorting_order_list"));
-
-        }
-
-        @Override
-        public boolean onOptionsItemSelected(MenuItem item) {
-            int id = item.getItemId();
-            switch (id) {
-                case android.R.id.home:
-                    startActivity(new Intent(getActivity(), SettingsActivity.class));
-                    return true;
-
-            }
-
-            return super.onOptionsItemSelected(item);
-        }
-    }
-
-    /**
-     * This fragment shows notification preferences only. It is used when the
-     * activity is showing a two-pane settings UI.
-     */
-    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public static class ActionPreferenceFragment extends PreferenceFragment {
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-            addPreferencesFromResource(R.xml.pref_actions);
-            setHasOptionsMenu(true);
-
-            bindPreferenceSummaryToValue(findPreference("notifications_action_ringtone"));
-        }
-
-        @Override
-        public boolean onOptionsItemSelected(MenuItem item) {
-            int id = item.getItemId();
-            if (id == android.R.id.home) {
-                startActivity(new Intent(getActivity(), SettingsActivity.class));
-                return true;
-            }
-            return super.onOptionsItemSelected(item);
-        }
-    }
-
-
-}
Index: app/src/main/res/drawable-v21/ic_menu_manage.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_manage.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_menu_manage.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M22.7,19l-9.1,-9.1c0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3L9,6 6,9 1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1c1.9,1.9 4.6,2.4 6.9,1.5l9.1,9.1c0.4,0.4 1,0.4 1.4,0l2.3,-2.3c0.5,-0.4 0.5,-1.1 0.1,-1.4z" />
-</vector>
\ No newline at end of file
Index: app/src/main/res/xml/preferences_beacon_notification.xml
===================================================================
--- app/src/main/res/xml/preferences_beacon_notification.xml	(date 1501671703000)
+++ app/src/main/res/xml/preferences_beacon_notification.xml	(date 1501671703000)
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:key="key_event">
-
-    <PreferenceCategory
-        android:title="@string/pref_bn_notification_category">
-
-    <SwitchPreferenceCompat
-        android:defaultValue="false"
-        android:key="bn_notification_action"
-        android:title="@string/pref_bn_notification_action" />
-
-    <EditTextPreference
-        android:title="@string/pref_bn_notification_action_message"
-        android:dependency="bn_notification_action"
-        android:key="bn_notification_action_message"
-        android:summary="@string/pref_bn_default_notification_action_message"/>
-
-    <Preference
-        android:dependency="bn_notification_action"
-        android:key="bn_notification_action_ringtone"
-        android:title="@string/pref_bn_notification_action_ringtone" />
-
-    <SwitchPreferenceCompat
-        android:defaultValue="true"
-        android:dependency="bn_notification_action"
-        android:key="bn_notification_action_vibrate"
-        android:title="@string/pref_bn_notification_action_vibrate" />
-
-    </PreferenceCategory>
-
-</PreferenceScreen>
\ No newline at end of file
Index: app/src/main/res/layout/activity_beacon.xml
===================================================================
--- app/src/main/res/layout/activity_beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_beacon.xml	(date 1501671703000)
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:context=".ui.activity.BeaconActionActivity">
-
-    <android.support.design.widget.AppBarLayout
-        android:id="@+id/appbar"
-        android:layout_width="match_parent"
-        android:layout_height="60dp">
-
-        <android.support.design.widget.TabLayout
-            android:id="@+id/sliding_tabs"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            app:tabMode="scrollable"
-            app:tabTextColor="@color/white"
-            app:tabIndicatorColor="@color/dark_grey"
-            app:tabSelectedTextColor="@color/cardview_dark_background"
-            app:tabGravity="fill" />
-
-        <include android:id="@+id/fab" layout="@layout/toolbar"/>
-
-    </android.support.design.widget.AppBarLayout>
-
-    <android.support.v4.view.ViewPager
-        android:id="@+id/viewpager"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        app:layout_behavior="@string/appbar_scrolling_view_behavior">
-
-    </android.support.v4.view.ViewPager>
-
-
-</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/data/NewDbStoreService.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/data/NewDbStoreService.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/data/NewDbStoreService.java	(date 1501671703000)
@@ -1,516 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.data;
-
-
-import android.content.ContentValues;
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
-import android.provider.BaseColumns;
-
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-
-/*
- * Created by vitas on 20/12/15.
- */
-public class NewDbStoreService extends SQLiteOpenHelper implements StoreService {
-
-    public static final int DATABASE_VERSION = 1;
-    public static final String DATABASE_NAME = "beaconloc.db";
-
-    private static final String SEPARATOR = ",";
-    private static final String BEACON_SQL_CREATE_DATA = "CREATE TABLE IF NOT EXISTS "
-            + ScanColumns.TABLE_NAME
-            + "("
-            + ScanColumns.COLUMN_ID
-            + " TEXT NOT NULL"
-            + SEPARATOR
-            + ScanColumns.COLUMN_LAST_SEEN_TIME
-            + " INTEGER NOT NULL"
-            + SEPARATOR
-            + ScanColumns.COLUMN_BLUETOOTH_NAME
-            + " TEXT"
-            + SEPARATOR
-            + ScanColumns.COLUMN_BLUETOOTH_ADDRESS
-            + " TEXT NOT NULL"
-            + SEPARATOR
-            + ScanColumns.COLUMN_UUID
-            + " TEXT NOT NULL"
-            + SEPARATOR
-            + ScanColumns.COLUMN_DISTANCE
-            + " REAL"
-            + SEPARATOR
-            + ScanColumns.COLUMN_RSSI
-            + " INTEGER"
-            + SEPARATOR
-            + ScanColumns.COLUMN_TXPOWER
-            + " INTEGER"
-            + SEPARATOR
-            + ScanColumns.COLUMN_TYPE
-            + " INTEGER"
-            + SEPARATOR
-            + ScanColumns.COLUMN_URL
-            + " TEXT"
-            + SEPARATOR
-            + ScanColumns.COLUMN_MAJOR
-            + " TEXT"
-            + SEPARATOR
-            + ScanColumns.COLUMN_MINOR
-            + " TEXT"
-            + SEPARATOR
-            + " PRIMARY KEY ("
-            + ScanColumns.COLUMN_ID + "))";
-
-    private static final String BEACON_ACTION_SQL_CREATE_DATA = "CREATE TABLE IF NOT EXISTS "
-            + ActionColumns.TABLE_NAME
-            + "("
-            + ActionColumns.COLUMN_ID
-            + " INTEGER PRIMARY KEY"
-            + SEPARATOR
-            + ActionColumns.COLUMN_BEACON_ID
-            + " TEXT NOT NULL"
-            + SEPARATOR
-            + ActionColumns.COLUMN_NAME
-            + " TEXT NOT NULL"
-            + SEPARATOR
-            + ActionColumns.COLUMN_EVENT_TYPE
-            + " INTEGER NOT NULL"
-            + SEPARATOR
-            + ActionColumns.COLUMN_ACTION_TYPE
-            + " INTEGER NOT NULL"
-            + SEPARATOR
-            + ActionColumns.COLUMN_ACTION_PARAMS
-            + " TEXT"
-            + SEPARATOR
-            + ActionColumns.COLUMN_IS_ENABLED
-            + " INTEGER NOT NULL DEFAULT(1)"
-            + SEPARATOR
-            + ActionColumns.COLUMN_NOTIF_IS_ENABLED
-            + " INTEGER NOT NULL DEFAULT(0)"
-            + SEPARATOR
-            + ActionColumns.COLUMN_NOTIF_VIBRATE_IS_ENABLED
-            + " INTEGER NOT NULL DEFAULT(0)"
-            + SEPARATOR
-            + ActionColumns.COLUMN_NOTIF_RINGTONE
-            + " TEXT"
-            + SEPARATOR
-            + ActionColumns.COLUMN_NOTIF_MSG
-            + " TEXT"
-            + ");";
-
-    private static final String BEACON_SQL_DELETE_DATA = "DROP TABLE IF EXISTS "
-            + ScanColumns.TABLE_NAME;
-
-    private static final String BEACON_ACTION_SQL_DELETE_DATA = "DROP TABLE IF EXISTS "
-            + ActionColumns.TABLE_NAME;
-
-    public NewDbStoreService(Context context) {
-        super(context, DATABASE_NAME, null, DATABASE_VERSION);
-    }
-
-    public void onCreate(SQLiteDatabase db) {
-        db.execSQL(BEACON_SQL_CREATE_DATA);
-        db.execSQL(BEACON_ACTION_SQL_CREATE_DATA);
-    }
-
-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-        db.execSQL(BEACON_SQL_DELETE_DATA);
-        db.execSQL(BEACON_ACTION_SQL_DELETE_DATA);
-
-        onCreate(db);
-    }
-
-    public void onDowngrade(SQLiteDatabase db, int oldVersion,
-                            int newVersion) {
-    }
-
-    @Override
-    public boolean createBeacon(TrackedBeacon beacon) {
-        ContentValues values = new ContentValues();
-
-        values.put(ScanColumns.COLUMN_ID, beacon.getId());
-        values.put(ScanColumns.COLUMN_LAST_SEEN_TIME, beacon.getTimeLastSeen());
-        values.put(ScanColumns.COLUMN_BLUETOOTH_NAME, beacon.getBluetoothName());
-        values.put(ScanColumns.COLUMN_BLUETOOTH_ADDRESS, beacon.getBluetoothAddress());
-        values.put(ScanColumns.COLUMN_UUID, beacon.getUUID());
-        values.put(ScanColumns.COLUMN_DISTANCE, beacon.getDistance());
-        values.put(ScanColumns.COLUMN_RSSI, beacon.getRssi());
-        values.put(ScanColumns.COLUMN_TXPOWER, beacon.getTxPower());
-        values.put(ScanColumns.COLUMN_TYPE, beacon.getBeaconType().ordinal());
-        values.put(ScanColumns.COLUMN_URL, beacon.getEddystoneURL());
-        values.put(ScanColumns.COLUMN_MAJOR, beacon.getMajor());
-        values.put(ScanColumns.COLUMN_MINOR, beacon.getMinor());
-
-        SQLiteDatabase db = getWritableDatabase();
-
-        long res = db.insert(ScanColumns.TABLE_NAME, null, values);
-        db.close();
-
-        for (ActionBeacon action : beacon.getActions()) {
-            createBeaconAction(action);
-        }
-        return (res == -1) ? false : true;
-    }
-
-
-    @Override
-    public boolean updateBeacon(TrackedBeacon beacon) {
-        final ContentValues values = new ContentValues();
-        values.put(ScanColumns.COLUMN_LAST_SEEN_TIME, new Date().getTime());
-        values.put(ScanColumns.COLUMN_BLUETOOTH_NAME, beacon.getBluetoothName());
-        values.put(ScanColumns.COLUMN_BLUETOOTH_ADDRESS, beacon.getBluetoothAddress());
-        values.put(ScanColumns.COLUMN_UUID, beacon.getUUID());
-        values.put(ScanColumns.COLUMN_DISTANCE, beacon.getDistance());
-        values.put(ScanColumns.COLUMN_RSSI, beacon.getRssi());
-        values.put(ScanColumns.COLUMN_TXPOWER, beacon.getTxPower());
-        values.put(ScanColumns.COLUMN_TYPE, beacon.getBeaconType().ordinal());
-        values.put(ScanColumns.COLUMN_URL, beacon.getEddystoneURL());
-        values.put(ScanColumns.COLUMN_MAJOR, beacon.getMajor());
-        values.put(ScanColumns.COLUMN_MINOR, beacon.getMinor());
-
-        SQLiteDatabase db = getWritableDatabase();
-        int numUpdated = db.update(ScanColumns.TABLE_NAME, values, ScanColumns.COLUMN_ID + "=?", new String[]{beacon.getId()});
-        db.close();
-        return (numUpdated == 0) ? false : true;
-    }
-
-    @Override
-    public TrackedBeacon getBeacon(String id) {
-        TrackedBeacon beacon = new TrackedBeacon();
-        SQLiteDatabase db = getReadableDatabase();
-        Cursor cursor = db.query(ScanColumns.TABLE_NAME,
-                new String[]{
-                        ScanColumns.COLUMN_ID,
-                        ScanColumns.COLUMN_LAST_SEEN_TIME,
-                        ScanColumns.COLUMN_BLUETOOTH_NAME,
-                        ScanColumns.COLUMN_BLUETOOTH_ADDRESS,
-                        ScanColumns.COLUMN_UUID,
-                        ScanColumns.COLUMN_DISTANCE,
-                        ScanColumns.COLUMN_RSSI,
-                        ScanColumns.COLUMN_TXPOWER,
-                        ScanColumns.COLUMN_TYPE,
-                        ScanColumns.COLUMN_URL,
-                        ScanColumns.COLUMN_MAJOR,
-                        ScanColumns.COLUMN_MINOR
-                },
-                ScanColumns.COLUMN_ID + "=?", new String[]{String.valueOf(id)}, null, null, null, null);
-
-        if (cursor != null) {
-            if (cursor.moveToFirst()) {
-
-                beacon.setId(cursor.getString(0));
-                beacon.setTimeLastSeen(Long.parseLong(cursor.getString(1)));
-                beacon.setBluetoothName(cursor.getString(2));
-                beacon.setBluetoothAddress(cursor.getString(3));
-                beacon.setUUID(cursor.getString(4));
-                beacon.setDistance(Double.parseDouble(cursor.getString(5)));
-                beacon.setRssi(Integer.parseInt(cursor.getString(6)));
-                beacon.setTxPower(Integer.parseInt(cursor.getString(7)));
-                beacon.setType(Integer.parseInt(cursor.getString(8)));
-                beacon.setUrl(cursor.getString(9));
-                beacon.setMajor(cursor.getString(10));
-                beacon.setMinor(cursor.getString(11));
-
-                List<ActionBeacon> actions = getBeaconActions(beacon.getId());
-                beacon.addActions(actions);
-
-                cursor.close();
-            }
-        }
-        db.close();
-        return beacon;
-    }
-
-    @Override
-    public boolean updateBeaconDistance(String id, double distance) {
-        final ContentValues values = new ContentValues();
-        values.put(ScanColumns.COLUMN_DISTANCE, distance);
-        values.put(ScanColumns.COLUMN_LAST_SEEN_TIME, new Date().getTime());
-
-        SQLiteDatabase db = getWritableDatabase();
-        int numUpdated = db.update(ScanColumns.TABLE_NAME, values, ScanColumns.COLUMN_ID + "=?", new String[]{id});
-        db.close();
-        return (numUpdated == 0) ? false : true;
-    }
-
-
-    @Override
-    public List<TrackedBeacon> getBeacons() {
-        List<TrackedBeacon> beacons = new ArrayList<>();
-
-        SQLiteDatabase db = getReadableDatabase();
-        Cursor cursor = db.rawQuery("SELECT * FROM " + ScanColumns.TABLE_NAME, null);
-
-        if (cursor.moveToFirst()) {
-            do {
-                TrackedBeacon beacon = new TrackedBeacon();
-
-                beacon.setId(cursor.getString(0));
-                beacon.setTimeLastSeen(Long.parseLong(cursor.getString(1)));
-                beacon.setBluetoothName(cursor.getString(2));
-                beacon.setBluetoothAddress(cursor.getString(3));
-                beacon.setUUID(cursor.getString(4));
-                beacon.setDistance(Double.parseDouble(cursor.getString(5)));
-                beacon.setRssi(cursor.getInt(6));
-                beacon.setTxPower(cursor.getInt(7));
-                beacon.setType(cursor.getInt(8));
-                beacon.setUrl(cursor.getString(9));
-                beacon.setMajor(cursor.getString(10));
-                beacon.setMinor(cursor.getString(11));
-
-                List<ActionBeacon> actions = getBeaconActions(beacon.getId());
-                beacon.addActions(actions);
-
-                beacons.add(beacon);
-            }
-            while (cursor.moveToNext());
-        }
-        cursor.close();
-        db.close();
-
-        return beacons;
-    }
-
-
-    @Override
-    public boolean createBeaconAction(ActionBeacon beacon) {
-        ContentValues values = new ContentValues();
-
-        values.put(ActionColumns.COLUMN_BEACON_ID, beacon.getBeaconId());
-        values.put(ActionColumns.COLUMN_NAME, beacon.getName());
-        values.put(ActionColumns.COLUMN_EVENT_TYPE, beacon.getEventType().getValue());
-        values.put(ActionColumns.COLUMN_ACTION_TYPE, beacon.getActionType().getValue());
-        values.put(ActionColumns.COLUMN_ACTION_PARAMS, beacon.getActionParam());
-        values.put(ActionColumns.COLUMN_IS_ENABLED, beacon.isEnabled() ? 1 : 0);
-        values.put(ActionColumns.COLUMN_NOTIF_IS_ENABLED, beacon.getNotification().isEnabled() ? 1 : 0);
-        values.put(ActionColumns.COLUMN_NOTIF_VIBRATE_IS_ENABLED, beacon.getNotification().isVibrate() ? 1 : 0);
-        values.put(ActionColumns.COLUMN_NOTIF_RINGTONE, beacon.getNotification().getRingtone());
-        values.put(ActionColumns.COLUMN_NOTIF_MSG, beacon.getNotification().getMessage());
-
-        SQLiteDatabase db = getWritableDatabase();
-
-        long res = db.insert(ActionColumns.TABLE_NAME, null, values);
-        db.close();
-        if (res != -1) {
-            beacon.setId((int) res);
-        }
-
-        return (res == -1) ? false : true;
-    }
-
-    @Override
-    public boolean updateBeaconAction(ActionBeacon beacon) {
-        final ContentValues values = new ContentValues();
-        values.put(ActionColumns.COLUMN_NAME, beacon.getName());
-        values.put(ActionColumns.COLUMN_BEACON_ID, beacon.getBeaconId());
-        values.put(ActionColumns.COLUMN_EVENT_TYPE, beacon.getEventType().getValue());
-        values.put(ActionColumns.COLUMN_ACTION_TYPE, beacon.getActionType().getValue());
-        values.put(ActionColumns.COLUMN_ACTION_PARAMS, beacon.getActionParam());
-        values.put(ActionColumns.COLUMN_IS_ENABLED, beacon.isEnabled() ? 1 : 0);
-        values.put(ActionColumns.COLUMN_NOTIF_IS_ENABLED, beacon.getNotification().isEnabled() ? 1 : 0);
-        values.put(ActionColumns.COLUMN_NOTIF_VIBRATE_IS_ENABLED, beacon.getNotification().isVibrate() ? 1 : 0);
-        values.put(ActionColumns.COLUMN_NOTIF_RINGTONE, beacon.getNotification().getRingtone());
-        values.put(ActionColumns.COLUMN_NOTIF_MSG, beacon.getNotification().getMessage());
-
-        SQLiteDatabase db = getWritableDatabase();
-        int numUpdated = db.update(ActionColumns.TABLE_NAME, values, ActionColumns.COLUMN_ID + "=?"
-                , new String[]{String.valueOf(beacon.getId())});
-        db.close();
-        return (numUpdated == 0) ? false : true;
-    }
-
-    @Override
-    public List<ActionBeacon> getBeaconActions(String beaconId) {
-        List<ActionBeacon> actions = new ArrayList<>();
-
-        SQLiteDatabase db = getReadableDatabase();
-        Cursor cursor = db.rawQuery("SELECT * FROM " + ActionColumns.TABLE_NAME + " WHERE "
-                + ActionColumns.COLUMN_BEACON_ID + "=?", new String[]{String.valueOf(beaconId)});
-
-        if (cursor.moveToFirst()) {
-            do {
-                ActionBeacon beacon = new ActionBeacon();
-
-                beacon.setId(cursor.getInt(0));
-                beacon.setBeaconId(cursor.getString(1));
-                beacon.setName(cursor.getString(2));
-                beacon.setEventType(ActionBeacon.EventType.fromInt(cursor.getInt(3)));
-                beacon.setActionType(ActionBeacon.ActionType.fromInt(cursor.getInt(4)));
-                beacon.setActionParam(cursor.getString(5));
-                beacon.setIsEnabled(cursor.getInt(6) == 1 ? true : false);
-                beacon.getNotification().setIsEnabled(cursor.getInt(7) == 1 ? true : false);
-                beacon.getNotification().setIsVibrate(cursor.getInt(8) == 1 ? true : false);
-                beacon.getNotification().setRingtone(cursor.getString(9));
-                beacon.getNotification().setMessage(cursor.getString(10));
-
-                actions.add(beacon);
-            }
-            while (cursor.moveToNext());
-        }
-        cursor.close();
-        db.close();
-        return actions;
-    }
-
-    @Override
-    public boolean deleteBeaconAction(int id) {
-        SQLiteDatabase db = getWritableDatabase();
-        int numDeleted = db.delete(ActionColumns.TABLE_NAME, ActionColumns.COLUMN_ID + "=?", new String[]{String.valueOf(id)});
-        db.close();
-        return (numDeleted == 0) ? false : true;
-    }
-
-    @Override
-    public boolean deleteBeaconActions(String beaconId) {
-        SQLiteDatabase db = getWritableDatabase();
-        int numDeleted = db.delete(ActionColumns.TABLE_NAME, ActionColumns.COLUMN_BEACON_ID + "=?", new String[]{String.valueOf(beaconId)});
-        db.close();
-        return (numDeleted == 0) ? false : true;
-    }
-
-    @Override
-    public List<ActionBeacon> getAllEnabledBeaconActions() {
-        List<ActionBeacon> actions = new ArrayList<>();
-
-        SQLiteDatabase db = getReadableDatabase();
-        Cursor cursor = db.rawQuery("SELECT * FROM " + ActionColumns.TABLE_NAME + " WHERE "
-                + ActionColumns.COLUMN_IS_ENABLED + "=?", new String[]{String.valueOf(1)});
-
-        if (cursor.moveToFirst()) {
-            do {
-                ActionBeacon beacon = new ActionBeacon();
-
-                beacon.setId(cursor.getInt(0));
-                beacon.setBeaconId(cursor.getString(1));
-                beacon.setName(cursor.getString(2));
-                beacon.setEventType(ActionBeacon.EventType.fromInt(cursor.getInt(3)));
-                beacon.setActionType(ActionBeacon.ActionType.fromInt(cursor.getInt(4)));
-                beacon.setActionParam(cursor.getString(5));
-                beacon.setIsEnabled(cursor.getInt(6) == 1 ? true : false);
-                beacon.getNotification().setIsEnabled(cursor.getInt(7) == 1 ? true : false);
-                beacon.getNotification().setIsVibrate(cursor.getInt(8) == 1 ? true : false);
-                beacon.getNotification().setRingtone(cursor.getString(9));
-                beacon.getNotification().setMessage(cursor.getString(10));
-
-                actions.add(beacon);
-            }
-            while (cursor.moveToNext());
-        }
-        cursor.close();
-        db.close();
-        return actions;
-    }
-
-    @Override
-    public boolean updateBeaconActionEnable(int id, boolean enable) {
-        SQLiteDatabase db = getWritableDatabase();
-
-        final ContentValues values = new ContentValues();
-        values.put(ActionColumns.COLUMN_IS_ENABLED, enable);
-        int numUpdated = db.update(ActionColumns.TABLE_NAME, values, ActionColumns.COLUMN_ID + "=?", new String[]{String.valueOf(id)});
-
-        db.close();
-        return (numUpdated == 0) ? false : true;
-    }
-
-    @Override
-    public List<ActionBeacon> getEnabledBeaconActionsByEvent(int eventType, String beaconId) {
-        List<ActionBeacon> actions = new ArrayList<>();
-
-        SQLiteDatabase db = getReadableDatabase();
-        Cursor cursor = db.rawQuery("SELECT * FROM " + ActionColumns.TABLE_NAME + " WHERE "
-                        + ActionColumns.COLUMN_IS_ENABLED + "=? AND "
-                        + ActionColumns.COLUMN_BEACON_ID + "=? ",
-                new String[]{String.valueOf(1), String.valueOf(eventType), beaconId});
-
-        if (cursor.moveToFirst()) {
-            do {
-                ActionBeacon beacon = new ActionBeacon();
-
-                beacon.setId(cursor.getInt(0));
-                beacon.setBeaconId(cursor.getString(1));
-                beacon.setName(cursor.getString(2));
-                beacon.setEventType(ActionBeacon.EventType.fromInt(cursor.getInt(3)));
-                beacon.setActionType(ActionBeacon.ActionType.fromInt(cursor.getInt(4)));
-                beacon.setActionParam(cursor.getString(5));
-                beacon.setIsEnabled(cursor.getInt(6) == 1 ? true : false);
-                beacon.getNotification().setIsEnabled(cursor.getInt(7) == 1 ? true : false);
-                beacon.getNotification().setIsVibrate(cursor.getInt(8) == 1 ? true : false);
-                beacon.getNotification().setRingtone(cursor.getString(9));
-                beacon.getNotification().setMessage(cursor.getString(10));
-
-                actions.add(beacon);
-            }
-            while (cursor.moveToNext());
-        }
-        cursor.close();
-        db.close();
-        return actions;
-    }
-
-    @Override
-    public boolean deleteBeacon(String id, boolean cascade) {
-        SQLiteDatabase db = getWritableDatabase();
-        int numDeleted = db.delete(ScanColumns.TABLE_NAME, ScanColumns.COLUMN_ID + "=?", new String[]{String.valueOf(id)});
-        db.close();
-        if (cascade) {
-            deleteBeaconActions(id);
-        }
-        return (numDeleted == 0) ? false : true;
-    }
-
-    protected static abstract class ScanColumns implements BaseColumns {
-        public static final String TABLE_NAME = "TrackedBeacon";
-        public static final String COLUMN_ID = "id";
-        public static final String COLUMN_BLUETOOTH_NAME = "bl_name";
-        public static final String COLUMN_BLUETOOTH_ADDRESS = "bl_address";
-        public static final String COLUMN_LAST_SEEN_TIME = "last_seen_time";
-        public static final String COLUMN_UUID = "uuid";
-        public static final String COLUMN_RSSI = "rssi";
-        public static final String COLUMN_TXPOWER = "tx";
-        public static final String COLUMN_TYPE = "type";
-        public static final String COLUMN_URL = "url";
-        public static final String COLUMN_DISTANCE = "distance";
-        public static final String COLUMN_MAJOR = "major";
-        public static final String COLUMN_MINOR = "minor";
-    }
-
-    protected static abstract class ActionColumns implements BaseColumns {
-        public static final String TABLE_NAME = "ActionBeacon";
-        public static final String COLUMN_ID = "id";
-        public static final String COLUMN_BEACON_ID = "beacon_id";
-        public static final String COLUMN_NAME = "name";
-        public static final String COLUMN_EVENT_TYPE = "event_type";
-        public static final String COLUMN_ACTION_TYPE = "action_type";
-        public static final String COLUMN_ACTION_PARAMS = "action_param";
-        public static final String COLUMN_IS_ENABLED = "is_enabled";
-        public static final String COLUMN_NOTIF_IS_ENABLED = "notif_enabled";
-        public static final String COLUMN_NOTIF_VIBRATE_IS_ENABLED = "notif_vibrate";
-        public static final String COLUMN_NOTIF_RINGTONE = "notif_ringtone";
-        public static final String COLUMN_NOTIF_MSG = "notif_msg";
-
-    }
-}
Index: app/src/main/res/values-w820dp/dimens.xml
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(date 1501671703000)
+++ app/src/main/res/values-w820dp/dimens.xml	(date 1501671703000)
@@ -1,6 +0,0 @@
-<resources>
-    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
-         (such as screen margins) for screens with more than 820dp of available width. This
-         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
-    <dimen name="activity_horizontal_margin">64dp</dimen>
-</resources>
Index: app/proguard-rules.pro
===================================================================
--- app/proguard-rules.pro	(date 1501671703000)
+++ app/proguard-rules.pro	(date 1501671703000)
@@ -1,17 +0,0 @@
-# Add project specific ProGuard rules here.
-# By default, the flags in this file are appended to flags specified
-# in /Users/vitas/dev/android-sdk/tools/proguard/proguard-android.txt
-# You can edit the include path and order by changing the proguardFiles
-# directive in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
Index: app/src/main/res/values/colors.xml
===================================================================
--- app/src/main/res/values/colors.xml	(date 1501671703000)
+++ app/src/main/res/values/colors.xml	(date 1501671703000)
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <color name="hn_orange">#FF6600</color>
-    <color name="hn_orange_dark">#e65c00</color>
-    <color name="hn_orange_lighter">#FF8C3F</color>
-    <color name="light_grey">#D4D4D4</color>
-    <color name="bg_light_grey">#E9E9E9</color>
-    <color name="dark_grey">#A8A8A8</color>
-    <color name="white">#FFFFFF</color>
-    <color name="black">#000000</color>
-    <color name="super_light_grey">#FAFAFA</color>
-    <color name="line_grey">#D7D7D7</color>
-    <color name="black_87pc">#DD000000</color>
-    <color name="colorPrimary">#3F51B5</color>
-    <color name="colorPrimaryDark">#303F9F</color>
-    <color name="colorAccent">#FF4081</color>
-
-
-
-    <color name="purple">#009688</color>
-    <color name="purple_light">#E0F2F1</color>
-
-    <!--<color name="purple">#673AB7</color>-->
-    <!--<color name="purple_light">#EDE7F6</color>-->
-
-
-
-    <color name="orange_light">#FFCCBC</color>
-    <color name="teal_light">#B2DFDB</color>
-
-
-
-
-
-
-    <color name="wallet_bright_foreground_holo_dark">#fff3f3f3</color>
-    <color name="wallet_dim_foreground_holo_dark">#bebebe</color>
-    <color name="wallet_dim_foreground_disabled_holo_dark">#80bebebe</color>
-    <color name="wallet_dim_foreground_inverse_holo_dark">#323232</color>
-    <color name="wallet_dim_foreground_inverse_disabled_holo_dark">#80323232</color>
-    <color name="wallet_bright_foreground_disabled_holo_light">#ffb2b2b2</color>
-    <color name="wallet_bright_foreground_holo_light">#ff000000</color>
-    <color name="wallet_hint_foreground_holo_light">#808080</color>
-    <color name="wallet_hint_foreground_holo_dark">#808080</color>
-    <color name="wallet_highlighted_text_holo_light">#6633b5e5</color>
-    <color name="wallet_highlighted_text_holo_dark">#6633b5e5</color>
-    <color name="wallet_holo_blue_light">#ff33b5e5</color>
-    <color name="wallet_link_text_light">#0000ee</color>
-</resources>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/ActionBeacon.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/ActionBeacon.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/ActionBeacon.java	(date 1501671703000)
@@ -1,227 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import android.os.Parcel;
-import android.os.Parcelable;
-
-/**
- * Created by vitas on 28/12/15.
- */
-public class ActionBeacon implements Parcelable {
-    public static final Creator<ActionBeacon> CREATOR = new Creator<ActionBeacon>() {
-        @Override
-        public ActionBeacon createFromParcel(Parcel in) {
-            return new ActionBeacon(in);
-        }
-
-        @Override
-        public ActionBeacon[] newArray(int size) {
-            return new ActionBeacon[size];
-        }
-    };
-    private int id;
-    private String beaconId;
-    private String name;
-    private EventType eventType = EventType.EVENT_ENTERS_REGION;
-    private ActionType actionType = ActionType.ACTION_NONE;
-    private String actionParam = "";
-    private boolean isEnabled;
-    private NotificationAction notification = new NotificationAction();
-
-    public ActionBeacon(String beaconId, String name) {
-        this.beaconId = beaconId;
-        this.name = name;
-    }
-
-    public ActionBeacon() {
-
-    }
-
-    protected ActionBeacon(Parcel in) {
-        id = in.readInt();
-        beaconId = in.readString();
-        name = in.readString();
-        eventType = EventType.fromInt(in.readInt());
-        actionType = ActionType.fromInt(in.readInt());
-        actionParam = in.readString();
-        isEnabled = in.readByte() != 0;
-        notification = in.readParcelable(NotificationAction.class.getClassLoader());
-    }
-
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
-    public String getBeaconId() {
-        return beaconId;
-    }
-
-    public void setBeaconId(String beaconId) {
-        this.beaconId = beaconId;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public EventType getEventType() {
-        return this.eventType;
-    }
-
-    public void setEventType(EventType eventType) {
-        this.eventType = eventType;
-    }
-
-    public ActionType getActionType() {
-        return actionType;
-    }
-
-    public void setActionType(ActionType actionType) {
-        this.actionType = actionType;
-    }
-
-    public String getActionParam() {
-        return actionParam;
-    }
-
-    public void setActionParam(String actionParam) {
-        this.actionParam = actionParam;
-    }
-
-    public boolean isEnabled() {
-        return isEnabled;
-    }
-
-    public void setIsEnabled(boolean isEnabled) {
-        this.isEnabled = isEnabled;
-    }
-
-
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
-    @Override
-    public void writeToParcel(Parcel dest, int flags) {
-        dest.writeInt(id);
-        dest.writeString(beaconId);
-        dest.writeString(name);
-        dest.writeInt(eventType.getValue());
-        dest.writeInt(actionType.getValue());
-        dest.writeString(actionParam);
-        dest.writeByte((byte) (isEnabled ? 1 : 0));
-        dest.writeParcelable(this.notification, flags);
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
-
-        ActionBeacon that = (ActionBeacon) o;
-
-        if (getId() != that.getId()) return false;
-        return getBeaconId().equals(that.getBeaconId());
-
-    }
-
-    @Override
-    public int hashCode() {
-        int result = getId();
-        result = 31 * result + getBeaconId().hashCode();
-        return result;
-    }
-
-    public NotificationAction getNotification() {
-        return this.notification;
-    }
-
-    public void setNotification(NotificationAction value) {
-        this.notification = value;
-    }
-
-
-    public enum ActionType {
-        ACTION_NONE(0),
-        ACTION_URL(1),
-        ACTION_INTENT_ACTION(2),
-        ACTION_START_APP(3),
-        ACTION_SET_SILENT_ON(4),
-        ACTION_SET_SILENT_OFF(5),
-        ACTION_GET_LOCATION(6),
-        ACTION_TASKER(7),
-        ACTION_WEB(8);
-
-        private final int value;
-
-        ActionType(int value) {
-            this.value = value;
-        }
-
-        public static ActionType fromInt(int value) {
-            for (ActionType type : ActionType.values()) {
-                if (type.getValue() == value) {
-                    return type;
-                }
-            }
-            return ACTION_WEB;
-        }
-
-        public int getValue() {
-            return value;
-        }
-    }
-
-    public enum EventType {
-        EVENT_ENTERS_REGION(0),
-        EVENT_LEAVES_REGION(1),
-        EVENT_NEAR_YOU(2);
-
-        private final int value;
-
-        EventType(int value) {
-            this.value = value;
-        }
-
-        public static EventType fromInt(int value) {
-            for (EventType type : EventType.values()) {
-                if (type.getValue() == value) {
-                    return type;
-                }
-            }
-            return EVENT_ENTERS_REGION;
-        }
-
-        public int getValue() {
-            return value;
-        }
-    }
-}
-
-
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/NoneAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/NoneAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/NoneAction.java	(date 1501671703000)
@@ -1,77 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-
-import android.content.Context;
-import android.content.Intent;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class NoneAction extends Action {
-
-    protected final String param;
-    protected final NotificationAction notification;
-
-    public NoneAction(String param, NotificationAction notification) {
-        this.param = param;
-        this.notification = notification;
-    }
-
-
-    @Override
-    public String execute(Context context) {
-        if (isParamRequired() && isParamEmpty()) {
-            return context.getString(R.string.action_action_param_is_required);
-        }
-        //empty
-        sendAlarm(context);
-        return null;
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return false;
-    }
-
-    protected void sendAlarm(Context context) {
-        if (isNotificationRequired()) {
-            Intent newIntent = new Intent(Constants.ALARM_NOTIFICATION_SHOW);
-            newIntent.putExtra("NOTIFICATION", notification);
-            context.sendBroadcast(newIntent);
-        }
-    }
-
-    protected boolean isParamEmpty() {
-        return param == null || param.isEmpty();
-    }
-
-    protected boolean isNotificationRequired() {
-        return notification != null && notification.isEnabled();
-    }
-
-    @Override
-    public String toString() {
-        return "NoneAction, action: " + param;
-    }
-}
\ No newline at end of file
Index: .gitignore
===================================================================
--- .gitignore	(date 1501671703000)
+++ .gitignore	(date 1501671703000)
@@ -1,16 +0,0 @@
-.idea
-/.idea/workspace.xml
-/.idea/libraries
-/promo
-/key
-/captures
-*.apk
-*.jks
-*.keystore
-*.iml
-.gradle
-.idea
-.DS_Store
-build
-local.properties
-signing.properties
\ No newline at end of file
Index: app/src/main/res/layout/nav_header_welcome_page.xml
===================================================================
--- app/src/main/res/layout/nav_header_welcome_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/nav_header_welcome_page.xml	(date 1501671703000)
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/nav_header_height"
-    android:background="@drawable/appblue"
-    android:gravity="bottom"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark"
-    android:weightSum="1">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="horizontal">
-
-        <de.hdodenhof.circleimageview.CircleImageView
-            android:id="@+id/profile_img"
-            android:layout_marginTop="20dp"
-            android:src="@drawable/profile"
-            android:layout_height="90dp"
-            android:layout_width="90dp"
-            android:layout_centerVertical="true"
-            android:layout_alignParentLeft="true"
-            android:layout_alignParentStart="true" />
-
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:paddingTop="@dimen/nav_header_vertical_spacing"
-                android:layout_marginTop="50dp"
-                android:text="Android developer"
-                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
-                android:layout_marginLeft="19dp"
-                android:layout_marginStart="19dp"
-                android:layout_weight="0.05"
-                android:id="@+id/profileDescripton"/>
-
-            <TextView
-                android:text="Veerendra NS"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:paddingBottom="@dimen/nav_header_vertical_spacing"
-                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
-                android:id="@+id/profile_name"
-                android:layout_alignBottom="@+id/profileDescripton"
-                android:layout_alignLeft="@+id/profileDescripton"
-                android:layout_alignStart="@+id/profileDescripton"
-                android:layout_marginBottom="5dp" />
-        </RelativeLayout>
-
-    </LinearLayout>
-
-
-</LinearLayout>
Index: app/src/main/res/menu/menu_main_navigation.xml
===================================================================
--- app/src/main/res/menu/menu_main_navigation.xml	(date 1501671703000)
+++ app/src/main/res/menu/menu_main_navigation.xml	(date 1501671703000)
@@ -1,27 +0,0 @@
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MainNavigationActivity">
-
-    <item
-        android:id="@+id/action_settings"
-        android:icon="@drawable/ic_settings_black_24dp"
-        android:title="@string/action_settings"
-        app:showAsAction="never" />
-
-    <item
-        android:id="@+id/action_help"
-        android:title="@string/action_help"
-        app:showAsAction="never" />
-
-    <item
-        android:id="@+id/action_view_on_github"
-        android:title="@string/action_view_on_github"
-        app:showAsAction="never" />
-
-    <item
-        android:id="@+id/action_donate"
-        android:title="@string/action_donate"
-        app:showAsAction="never" />
-
-</menu>
Index: app/src/main/res/layout/nav_header_home_beacon_navigation.xml
===================================================================
--- app/src/main/res/layout/nav_header_home_beacon_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/nav_header_home_beacon_navigation.xml	(date 1501671703000)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="200sp"
-
-    android:background="@drawable/man0"
-    android:gravity="bottom"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark">
-
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/nav_header_vertical_spacing"
-        android:text="SmartStudent"
-        android:textSize="20sp"
-        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
-
-
-</LinearLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/IManagedBeacon.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/IManagedBeacon.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/IManagedBeacon.java	(date 1501671703000)
@@ -1,128 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-
-/**
- * Created by vitas on 23/12/15.
- */
-public interface IManagedBeacon {
-    String getId();
-
-    int getType();
-
-    String getUUID();
-
-    String getMinor();
-
-    String getMajor();
-
-    double getDistance();
-
-    String getEddystoneURL();
-
-    long getTimeLastSeen();
-
-    String getBluetoothName();
-
-    String getBluetoothAddress();
-
-    int getTxPower();
-
-    int getRssi();
-
-    boolean equalTo(IManagedBeacon target);
-
-    BeaconType getBeaconType();
-
-    boolean isEddyStoneTLM();
-
-    boolean isEddyStoneUID();
-
-    boolean isEddyStoneURL();
-
-    boolean isEddystone();
-
-    enum BeaconType {
-        UNSPECIFIED("Unspecified"),
-        EDDYSTONE("Eddystone"),
-        EDDYSTONE_URL("Eddystone-URL"),
-        EDDYSTONE_UID("Eddystone-UID"),
-        EDDYSTONE_TLM("Eddystone-TLM"),
-        IBEACON("iBeacon"),
-        ALTBEACON("AltBeacon");
-
-        private String string;
-
-        BeaconType(String string) {
-            this.string = string;
-        }
-
-        public static BeaconType fromInt(int value) {
-            for (BeaconType type : BeaconType.values()) {
-                if (type.ordinal() == value) {
-                    return type;
-                }
-            }
-            return UNSPECIFIED;
-        }
-
-        public static BeaconType fromString(String string) {
-            if (string != null) {
-                for (BeaconType status : BeaconType.values()) {
-                    if (string.equalsIgnoreCase(status.string)) {
-                        return status;
-                    }
-                }
-            }
-            return null;
-        }
-
-        public String getString() {
-            return string;
-        }
-
-    }
-
-    enum ProximityType {
-        FAR(0),
-        NEAR(1),
-        IMMEDIATE(2);
-
-        private final int value;
-
-        ProximityType(int value) {
-            this.value = value;
-        }
-
-        public static ProximityType fromInt(int value) {
-            for (ProximityType type : ProximityType.values()) {
-                if (type.getValue() == value) {
-                    return type;
-                }
-            }
-            return FAR;
-        }
-
-        public int getValue() {
-            return value;
-        }
-    }
-
-}
Index: app/src/main/res/drawable-hdpi/ic_menu_manage.xml
===================================================================
--- app/src/main/res/drawable-hdpi/ic_menu_manage.xml	(date 1501671703000)
+++ app/src/main/res/drawable-hdpi/ic_menu_manage.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M22.7,19l-9.1,-9.1c0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3L9,6 6,9 1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1c1.9,1.9 4.6,2.4 6.9,1.5l9.1,9.1c0.4,0.4 1,0.4 1.4,0l2.3,-2.3c0.5,-0.4 0.5,-1.1 0.1,-1.4z" />
-</vector>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/ActionRegion.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/ActionRegion.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/ActionRegion.java	(date 1501671703000)
@@ -1,48 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import org.altbeacon.beacon.Identifier;
-import org.altbeacon.beacon.Region;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class ActionRegion {
-
-    public static Region parseRegion(ActionBeacon actionBeacon) {
-        if (actionBeacon == null) {
-            throw new IllegalArgumentException("ActionBeacon object is null");
-        }
-        String[] idents = actionBeacon.getBeaconId().split(";");
-        if (idents == null || idents.length < 3) {
-            throw new IllegalArgumentException("ActionBeacon has invalid id");
-        }
-        List<Identifier> identifiers = new ArrayList<>();
-
-        for (int i = 0; i < 3; i++) {
-            identifiers.add(Identifier.parse(idents[i]));
-        }
-        return new Region(RegionName.buildRegionNameId(actionBeacon), identifiers, idents[3]);
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/ITriggerable.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/ITriggerable.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/ITriggerable.java	(date 1501671703000)
@@ -1,32 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import java.util.List;
-
-/**
- * Created by vitas on 29/12/15.
- */
-public interface ITriggerable {
-    List<ActionBeacon> getActions();
-
-    void addAction(ActionBeacon action);
-
-    void addActions(List<ActionBeacon> actions);
-}
Index: app/src/main/res/xml/pref_actions.xml
===================================================================
--- app/src/main/res/xml/pref_actions.xml	(date 1501671703000)
+++ app/src/main/res/xml/pref_actions.xml	(date 1501671703000)
@@ -1,21 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <SwitchPreference
-        android:defaultValue="true"
-        android:key="notifications_action"
-        android:title="@string/pref_title_use_notifications" />
-
-    <RingtonePreference
-        android:defaultValue="content://settings/system/notification_sound"
-        android:dependency="notifications_action"
-        android:key="notifications_action_ringtone"
-        android:ringtoneType="notification"
-        android:title="@string/pref_title_ringtone" />
-
-    <SwitchPreference
-        android:defaultValue="true"
-        android:dependency="notifications_action"
-        android:key="notifications_action_vibrate"
-        android:title="@string/pref_title_vibrate" />
-
-</PreferenceScreen>
Index: app/src/main/res/xml/pref_scan.xml
===================================================================
--- app/src/main/res/xml/pref_scan.xml	(date 1501671703000)
+++ app/src/main/res/xml/pref_scan.xml	(date 1501671703000)
@@ -1,71 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-
-    <SwitchPreference
-        android:defaultValue="true"
-        android:key="scan_background_switch"
-        android:summary="@string/pref_description_background_scan"
-        android:title="@string/pref_title_background_scan" />
-
-    <ListPreference
-        android:defaultValue="30000"
-        android:entries="@array/pref_background_scan_timeout_titles"
-        android:entryValues="@array/pref_background_scan_timeout_values"
-        android:key="scan_background_timeout_list"
-        android:negativeButtonText="@null"
-        android:positiveButtonText="@null"
-        android:dependency="scan_background_switch"
-        android:title="@string/pref_title_background_scan_timeout" />
-
-    <ListPreference
-        android:defaultValue="30000"
-        android:entries="@array/pref_manual_scan_timeout_titles"
-        android:entryValues="@array/pref_manual_scan_timeout_values"
-        android:key="scan_manual_timeout_list"
-        android:negativeButtonText="@null"
-        android:positiveButtonText="@null"
-        android:title="@string/pref_title_manual_scan_timeout" />
-
-    <ListPreference
-        android:defaultValue="0"
-        android:entries="@array/pref_scan_sorting_titles"
-        android:entryValues="@array/pref_scan_sorting_values"
-        android:key="scan_sorting_order_list"
-        android:negativeButtonText="@null"
-        android:positiveButtonText="@null"
-        android:title="@string/pref_title_scan_sorting" />
-
-    <EditTextPreference
-        android:capitalize="words"
-        android:defaultValue="@string/pref_default_region_name"
-        android:inputType="textCapWords"
-        android:key="scan_default_region_text"
-        android:maxLines="1"
-        android:selectAllOnFocus="true"
-        android:singleLine="true"
-        android:title="@string/pref_title_region_name" />
-
-
-    <PreferenceCategory android:title="@string/pref_title_scan_layout_category">
-
-        <CheckBoxPreference
-            android:title="@string/pref_scan_parser_layout_eddystone_uid"
-            android:key="scan_parser_layout_eddystone_uid"
-            android:defaultValue="true"
-            android:checked="true"/>
-
-        <CheckBoxPreference
-            android:title="@string/pref_scan_parser_layout_eddystone_url"
-            android:key="scan_parser_layout_eddystone_url"
-            android:defaultValue="true"
-            android:checked="true"/>
-
-        <CheckBoxPreference
-            android:title="@string/pref_scan_parser_layout_eddystone_tlm"
-            android:key="scan_parser_layout_eddystone_tlm"
-            android:enabled="false"
-            android:checked="false"/>
-
-    </PreferenceCategory>
-</PreferenceScreen>
-
Index: app/src/main/java/com/ellipsonic/www/student_tracking/util/BeaconUtil.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/util/BeaconUtil.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/util/BeaconUtil.java	(date 1501671703000)
@@ -1,135 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.util;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-
-import java.text.DecimalFormat;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Created by vitas on 09/12/2015.
- */
-public final class BeaconUtil {
-
-    public static IManagedBeacon.ProximityType getProximity(double paramDouble) {
-        if (paramDouble <= 0.5D) {
-            return IManagedBeacon.ProximityType.IMMEDIATE;
-        }
-        if ((paramDouble > 0.5D) && (paramDouble <= 3.0D)) {
-            return IManagedBeacon.ProximityType.NEAR;
-        }
-        return IManagedBeacon.ProximityType.FAR;
-    }
-
-    public static int getProximityResourceId(IManagedBeacon.ProximityType proximityType) {
-        if (proximityType == IManagedBeacon.ProximityType.IMMEDIATE) {
-            return R.string.proximity_immediate;
-        }
-        if (proximityType == IManagedBeacon.ProximityType.NEAR) {
-            return R.string.proximity_near;
-        }
-        return R.string.proximity_far;
-    }
-
-    public static int getEventTypeResourceId(ActionBeacon.EventType eventType) {
-        switch (eventType) {
-            case EVENT_LEAVES_REGION:
-                return R.string.mv_event_type_leaves_region;
-            case EVENT_ENTERS_REGION:
-                return R.string.mv_event_type_enters_region;
-            case EVENT_NEAR_YOU:
-                return R.string.mv_event_type_near_you;
-        }
-        return R.string.action_alarm_text_title;
-    }
-
-    public static boolean isInProximity(IManagedBeacon.ProximityType proximityType, double paramDouble) {
-        return (getProximity(paramDouble) == proximityType) ? true : false;
-    }
-
-    public static double getRoundedDistance(double distance) {
-        return Math.ceil(distance * 100.0D) / 100.0D;
-    }
-
-    public static String getRoundedDistanceString(double distance) {
-        return new DecimalFormat("##0.00").format(getRoundedDistance(distance));
-    }
-
-
-    public static Map<String, IManagedBeacon> sortBecons(Map<String, IManagedBeacon> beacons, final int sortMode) {
-        Object localObject = new ArrayList(beacons.entrySet());
-        Collections.sort((List) localObject, new Comparator() {
-            @Override
-            public int compare(Object lhs, Object rhs) {
-                return compare((Map.Entry<String, IManagedBeacon>) (lhs), (Map.Entry<String, IManagedBeacon>) (rhs));
-            }
-
-            private int compare(Map.Entry<String, IManagedBeacon> obj1, Map.Entry<String, IManagedBeacon> obj2) {
-                if (sortMode == Constants.SORT_UUID_MAJOR_MINOR) {
-                    int i = obj1.getValue().getUUID().compareTo(obj2.getValue().getUUID());
-                    if (i != 0) {
-                        return i;
-                    }
-                    i = obj1.getValue().getMajor().compareTo(obj2.getValue().getMajor());
-                    if (i != 0) {
-                        return i;
-                    }
-                    if ((!obj1.getValue().isEddystone()) && (!obj2.getValue().isEddystone())) {
-                        return obj1.getValue().getMinor().compareTo(obj2.getValue().getMinor());
-                    }
-                    return 0;
-                }
-                double d1 = obj1.getValue().getDistance();
-                double d2 = obj2.getValue().getDistance();
-                if (d1 == d2) {
-                    return 0;
-                }
-                if (sortMode == Constants.SORT_DISTANCE_NEAREST_FIRST) {
-                    if (d1 < d2) {
-                        return -1;
-                    }
-                    return 1;
-                }
-                if (sortMode == Constants.SORT_DISTANCE_FAR_FIRST) {
-                    if (d1 < d2) {
-                        return 1;
-                    }
-                    return -1;
-                }
-                return -1;
-            }
-        });
-        LinkedHashMap localLinkedHashMap = new LinkedHashMap();
-        localObject = ((List) localObject).iterator();
-        while (((Iterator) localObject).hasNext()) {
-            Map.Entry localEntry = (Map.Entry) ((Iterator) localObject).next();
-            localLinkedHashMap.put(localEntry.getKey(), localEntry.getValue());
-        }
-        return localLinkedHashMap;
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/Card_view.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/Card_view.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/Card_view.java	(date 1501671703000)
@@ -1,37 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.Intent;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.EditText;
-import android.widget.TextView;
-
-import com.ellipsonic.www.student_tracking.R;
-
-public class Card_view extends AppCompatActivity  implements View.OnClickListener {
-
-    TextView textcart;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_card_view);
-        textcart= (TextView) findViewById(R.id.card_view);
-
-    }
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()){
-
-            case R.id.card_view:
-                Intent intent = new Intent(getApplicationContext(), com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.class);
-                startActivity(intent);
-                break;
-
-        }
-    }
-
-
-
-}
Index: app/src/main/res/values-v21/styles.xml
===================================================================
--- app/src/main/res/values-v21/styles.xml	(date 1501671703000)
+++ app/src/main/res/values-v21/styles.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<resources>>
-
-    <style name="AppTheme.NoActionBar">
-        <item name="windowActionBar">false</item>
-        <item name="windowNoTitle">true</item>
-        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
-        <item name="android:statusBarColor">@android:color/transparent</item>
-    </style>
-</resources>
Index: app/google-services .json
===================================================================
--- app/google-services .json	(date 1501671703000)
+++ app/google-services .json	(date 1501671703000)
@@ -1,48 +0,0 @@
-{
-  "project_info": {
-    "project_number": "231299447879",
-    "project_id": "smartnew-174908"
-  },
-  "client": [
-    {
-      "client_info": {
-        "mobilesdk_app_id": "1:231299447879:android:64c86ccc86215405",
-        "android_client_info": {
-          "package_name": "com.ellipsonic.www.student_tracking"
-        }
-      },
-      "oauth_client": [
-        {
-          "client_id": "231299447879-tnbl8ivpcus57snbe9npj79nqrnclj9a.apps.googleusercontent.com",
-          "client_type": 3
-        },
-        {
-          "client_id": "231299447879-o02dt72nooepltc7jkt8m5ak3jvsa70e.apps.googleusercontent.com",
-          "client_type": 1,
-          "android_info": {
-            "package_name": "com.ellipsonic.www.student_tracking",
-            "certificate_hash": "c3146f906c2398ebe2d9a307435b031a2b4e524d"
-          }
-        }
-      ],
-      "api_key": [
-        {
-          "current_key": "AIzaSyAmGs_ll5zxzzx-WTENs-E_53UIMf5hpKY"
-        }
-      ],
-      "services": {
-        "analytics_service": {
-          "status": 1
-        },
-        "appinvite_service": {
-          "status": 1,
-          "other_platform_oauth_client": []
-        },
-        "ads_service": {
-          "status": 1
-        }
-      }
-    }
-  ],
-  "configuration_version": "1"
-}
\ No newline at end of file
Index: app/src/main/res/layout/layout_empty_list.xml
===================================================================
--- app/src/main/res/layout/layout_empty_list.xml	(date 1501671703000)
+++ app/src/main/res/layout/layout_empty_list.xml	(date 1501671703000)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:background="@color/purple_light"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <ImageView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_margin="30dp"
-        android:layout_gravity="top"
-        android:layout_weight="1"
-        android:tint="@color/light_grey"
-        android:src="@drawable/g9777"/>
-
-    <TextView
-        android:id="@+id/empty_text"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="center"
-        android:layout_weight="2"
-        android:text="@string/text_empty_list"
-        android:textSize="@dimen/text_large_body" />
-
-</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapNavigationActivty.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapNavigationActivty.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MapNavigationActivty.java	(date 1501671703000)
@@ -1,125 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
-import android.support.v7.widget.CardView;
-import android.view.View;
-import android.support.design.widget.NavigationView;
-import android.support.v4.view.GravityCompat;
-import android.support.v4.widget.DrawerLayout;
-import android.support.v7.app.ActionBarDrawerToggle;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.TextView;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import static com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.StudentName;
-
-public class MapNavigationActivty extends AppCompatActivity
-        implements NavigationView.OnNavigationItemSelectedListener {
-
-    TextView studentname;
-    DatabaseHelper databaseHelper;
-    CardView card_view;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_map_navigation_activty);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
-                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
-        drawer.setDrawerListener(toggle);
-        toggle.syncState();
-
-        databaseHelper = new DatabaseHelper(this);
-        card_view = (CardView) findViewById(R.id.card_view1);
-        studentname=(TextView)findViewById(R.id.user);
-
-        card_view.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                String student_name=StudentName;
-                Intent myIntent = new Intent(getApplicationContext(), MapsActivity .class);
-                myIntent.putExtra("studentname", student_name);
-                startActivity(myIntent);
-            }
-        });
-
-
-        try {
-            String[] mac = databaseHelper.getAllBeaconData();
-            studentname.setText("\n"+"  Start Tracking :  "+mac[1]);
-        } catch (NullPointerException e) {
-             e.printStackTrace();
-        }
-
-
-        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
-        navigationView.setNavigationItemSelectedListener(this);
-    }
-
-
-
-    @SuppressWarnings("StatementWithEmptyBody")
-    @Override
-    public boolean onNavigationItemSelected(MenuItem item) {
-        // Handle navigation view item clicks here.
-        int id = item.getItemId();
-
-        if (id == R.id.nav_signout) {
-            // Handle the camera action
-            Intent intent = new Intent(getApplicationContext(),Login.class);
-            startActivity(intent);
-            finish();
-        }
-
-
-//       else if (id == R.id.nav_map) {
-//            // Handle the camera action
-//            Intent intent = new Intent(getApplicationContext(),Login.class);
-//            startActivity(intent);
-//            finish();
-//        }
-
-
-        else if(id == R.id.nav_register) {
-            // Handle the camera action
-            Intent intent = new Intent(getApplicationContext(),HomeBeaconNavigationActivity.class);
-            startActivity(intent);
-            finish();
-        }
-
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        drawer.closeDrawer(GravityCompat.START);
-        return true;
-    }
-//    @Override
-//    public void onBackPressed(){
-//
-//        startActivity(new Intent(getApplicationContext(), HomeBeaconNavigationActivity.class));
-//        finish();
-//        System.exit(1);
-//
-//    }
-
-
-    @Override
-    public void onBackPressed() {
-
-        moveTaskToBack(true);
-                startActivity(new Intent(getApplicationContext(), HomeBeaconNavigationActivity.class));
-
-        // android.os.Process.killProcess(android.os.Process.myPid());
-        System.exit(1);
-
-    }
-}
Index: app/src/main/res/menu/map_page.xml
===================================================================
--- app/src/main/res/menu/map_page.xml	(date 1501671703000)
+++ app/src/main/res/menu/map_page.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item
-        android:id="@+id/action_settings"
-        android:orderInCategory="100"
-        android:title="@string/action_settings"
-        app:showAsAction="never" />
-</menu>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/BeaconViewModel.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/BeaconViewModel.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/BeaconViewModel.java	(date 1501671703000)
@@ -1,156 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.viewModel;
-
-import android.databinding.BaseObservable;
-import android.support.annotation.NonNull;
-import android.support.v4.content.ContextCompat;
-import android.text.format.DateUtils;
-import android.view.View;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.DetectedBeacon;
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.BaseFragment;
-import com.ellipsonic.www.student_tracking.util.BeaconUtil;
-
-/**
- * Created by vitas on 19/10/15.
- */
-public class BeaconViewModel extends BaseObservable {
-
-    protected IManagedBeacon mManagedBeacon;
-    protected BaseFragment mFragment;
-
-    public BeaconViewModel(@NonNull BaseFragment fragment, @NonNull IManagedBeacon managedBeacon) {
-        this.mManagedBeacon = managedBeacon;
-        this.mFragment = fragment;
-    }
-
-    public String getRssi() {
-        return String.format("%d", mManagedBeacon.getRssi());
-    }
-
-    public String getTxPower() {
-        return String.format("%d", mManagedBeacon.getTxPower());
-    }
-
-    public String getId() {
-        return mManagedBeacon.getId();
-    }
-
-    public String getDistance() {
-        return BeaconUtil.getRoundedDistanceString(mManagedBeacon.getDistance());
-    }
-
-    public String getName() {
-        return (mManagedBeacon.getBluetoothName() == null || mManagedBeacon.getBluetoothName().isEmpty()) ? mManagedBeacon.getBluetoothAddress() :
-                mManagedBeacon.getBluetoothName();
-    }
-
-    public String getSeenSince() {
-        return DateUtils.getRelativeTimeSpanString(mManagedBeacon.getTimeLastSeen(), System.currentTimeMillis(), 0L).toString();
-    }
-
-    private boolean isLostBeacon() {
-        return ((System.currentTimeMillis() - mManagedBeacon.getTimeLastSeen()) / 1000L > 5L);
-    }
-
-    public String getBeaconType() {
-        return mManagedBeacon.getBeaconType().getString();
-    }
-
-    public String getProximity() {
-        if (isLostBeacon()) {
-            return getSeenSince();
-        }
-        return mFragment.getString(BeaconUtil.getProximityResourceId(BeaconUtil.getProximity(mManagedBeacon.getDistance())));
-    }
-
-    public int getProximityColor() {
-        if (isLostBeacon()) {
-            return ContextCompat.getColor(mFragment.getActivity(), R.color.hn_orange_dark);
-        }
-        return ContextCompat.getColor(mFragment.getActivity(), android.R.color.tab_indicator_text);
-    }
-
-
-    public int visibilityMajor() {
-        return (mManagedBeacon.isEddyStoneURL()) ? View.GONE : View.VISIBLE;
-    }
-
-    public int visibilityMinor() {
-        return (mManagedBeacon.isEddyStoneURL() || mManagedBeacon.isEddyStoneUID()) ? View.GONE : View.VISIBLE;
-    }
-
-    public String getUuid() {
-        if (mManagedBeacon.getType() == DetectedBeacon.TYPE_EDDYSTONE_URL) {
-            return mManagedBeacon.getEddystoneURL();
-        }
-        return mManagedBeacon.getUUID();
-    }
-
-    public String getMajor() {
-        return mManagedBeacon.getMajor();
-    }
-
-    public String getMinor() {
-        return mManagedBeacon.getMinor();
-    }
-
-    public String getNameUuid() {
-
-        switch (mManagedBeacon.getType()) {
-            case DetectedBeacon.TYPE_EDDYSTONE_URL:
-                return mFragment.getString(R.string.mv_text_url);
-            case DetectedBeacon.TYPE_EDDYSTONE_UID:
-                return mFragment.getString(R.string.mv_text_namespace);
-            default:
-                return mFragment.getString(R.string.mv_text_uuid);
-        }
-    }
-
-    public String getNameMajor() {
-
-        switch (mManagedBeacon.getType()) {
-            case DetectedBeacon.TYPE_EDDYSTONE_UID:
-                return mFragment.getString(R.string.mv_text_instance);
-            default:
-                return mFragment.getString(R.string.mv_text_major);
-        }
-    }
-
-    public String getNameMinor() {
-        return mFragment.getString(R.string.mv_text_minor);
-    }
-
-
-    public View.OnClickListener onClickBeacon() {
-        return new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                launchBeaconDetailsActivity();
-            }
-        };
-    }
-
-    protected void launchBeaconDetailsActivity() {
-        // do abstract?
-    }
-}
Index: app/src/main/res/layout/content_home_beacon_navigation.xml
===================================================================
--- app/src/main/res/layout/content_home_beacon_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_home_beacon_navigation.xml	(date 1501671703000)
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.HomeBeaconNavigationActivity"
-    tools:showIn="@layout/app_bar_home_beacon_navigation">
-
-    <android.support.v7.widget.CardView
-        android:id="@+id/card_view"
-        android:layout_width="0dp"
-        android:layout_height="120dp"
-        android:layout_gravity="center"
-        android:layout_margin="5sp"
-        android:layout_marginBottom="8dp"
-        android:layout_marginLeft="8dp"
-        android:layout_marginTop="8dp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintHorizontal_bias="0.0"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.023"
-        app:cardCornerRadius="2sp"
-        app:contentPadding="10sp"
-        android:layout_marginStart="8dp">
-
-        <ImageView
-            android:id="@+id/student_tracking_btn"
-            android:layout_width="match_parent"
-            android:layout_height="120sp"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentTop="true"
-            android:scaleType="fitXY"
-            app:srcCompat="@drawable/background" />
-
-        <TextView
-            android:id="@+id/mac"
-            android:layout_width="304sp"
-            android:layout_height="wrap_content"
-            android:text="Register Your Beacon "
-            android:textColor="@color/white" />
-    </android.support.v7.widget.CardView>
-
-
-
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/res/layout/app_bar_welcome_page.xml
===================================================================
--- app/src/main/res/layout/app_bar_welcome_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_welcome_page.xml	(date 1501671703000)
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:context=".ui.activity.WelcomePage">
-
-    <android.support.design.widget.AppBarLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:theme="@style/AppTheme.AppBarOverlay">
-
-        <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:layout_width="match_parent"
-            android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary"
-            app:popupTheme="@style/AppTheme.PopupOverlay" />
-
-    </android.support.design.widget.AppBarLayout>
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        app:srcCompat="@android:drawable/ic_dialog_email" />
-
-    <include layout="@layout/content_welcome_page" />
-
-</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/values/arrays.xml
===================================================================
--- app/src/main/res/values/arrays.xml	(date 1501671703000)
+++ app/src/main/res/values/arrays.xml	(date 1501671703000)
@@ -1,85 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <string-array name="pref_scan_sorting_titles">
-        <item>@string/sort_type_nearest_first</item>
-        <item>@string/sort_type_furthest_first</item>
-        <item>@string/sort_type_uuid_major_minor</item>
-    </string-array>
-
-    <string-array name="pref_scan_sorting_values">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-    </string-array>
-
-    <string-array name="pref_manual_scan_timeout_titles">
-        <item>30 seconds</item>
-        <item>45 seconds</item>
-        <item>60 seconds</item>
-    </string-array>
-    <string-array name="pref_manual_scan_timeout_values">
-        <item>30000</item>
-        <item>45000</item>
-        <item>60000</item>
-    </string-array>
-
-    <string-array name="pref_background_scan_timeout_titles">
-        <item>60 seconds</item>
-        <item>90 seconds</item>
-        <item>2 minutes</item>
-        <item>3 minutes</item>
-        <item>5 minutes</item>
-        <item>10 minutes</item>
-        <item>20 minutes</item>
-
-    </string-array>
-    <string-array name="pref_background_scan_timeout_values">
-        <item>60000</item>
-        <item>90000</item>
-        <item>120000</item>
-        <item>180000</item>
-        <item>300000</item>
-        <item>600000</item>
-        <item>1200000</item>
-
-    </string-array>
-
-    <string-array name="pref_be_event_range_array">
-        <item>@string/pref_be_event_enter_region</item>
-        <item>@string/pref_be_event_leave_region</item>
-        <item>@string/pref_be_event_near</item>
-    </string-array>
-
-    <string-array name="pref_be_event_values">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-    </string-array>
-
-    <string-array name="pref_ba_action_range_array">
-        <item>@string/mv_action_type_none</item>
-        <item>@string/mv_action_type_open_url</item>
-        <item>@string/mv_action_type_broadcast_intent</item>
-        <item>@string/mv_action_type_start_app</item>
-        <item>@string/mv_action_type_set_silent_on</item>
-        <item>@string/mv_action_type_set_silent_off</item>
-        <item>@string/mv_action_type_get_location</item>
-        <item>@string/mv_action_type_tasker</item>
-        <item>@string/mv_action_type_open_web</item>
-
-    </string-array>
-
-    <string-array name="pref_ba_action_range_values">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-        <item>4</item>
-        <item>5</item>
-        <item>6</item>
-        <item>7</item>
-        <item>8</item>
-    </string-array>
-
-</resources>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/NewDatabaseHelper.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/NewDatabaseHelper.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/NewDatabaseHelper.java	(date 1501671703000)
@@ -1,97 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.ContentValues;
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import static android.R.attr.name;
-
-public class NewDatabaseHelper extends SQLiteOpenHelper {
-
-    public static final String DATABASE_NAME = "Student.db";
-    public static final String TABLE_NAME = "beacon_table";
-    public static final String COL_1 = "STUDENT_NAME";
-    public static final String COL_2 = "SCHOOL_NAME";
-    public static final String COL_3 = "MACID";
-    public static final String COL_4 = "AGE";
-    public static final String COL_5 = "STUDENT_STANDARD";
-
-    public NewDatabaseHelper(Context context) {
-        super(context, DATABASE_NAME, null, 1);
-    }
-
-    @Override
-    public void onCreate(SQLiteDatabase db) {
-        db.execSQL("create table " + TABLE_NAME + " (MACID TEXT PRIMARY KEY AUTOINCREMENT, STUDENT_NAME TEXT,SCHOOL_NAME TEXT,AGE TEXT,STUDENT_STANDARD TEXT)");
-    }
-
-    @Override
-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
-        onCreate(db);
-    }
-
-    public boolean insertData(String student_name, String school_name, String macID, String age, String student_standard) {
-        SQLiteDatabase db = this.getWritableDatabase();
-        ContentValues contentValues = new ContentValues();
-        contentValues.put(COL_1, student_name);
-        contentValues.put(COL_2, school_name);
-        contentValues.put(COL_3, macID);
-        contentValues.put(COL_4, age);
-        contentValues.put(COL_5, student_standard);
-
-      //  String abx = email;
-        long result = db.insert(TABLE_NAME, null, contentValues);
-        if (result == -1)
-            return false;
-        else
-            return true;
-    }
-
-//    public Cursor getAllData() {
-//        SQLiteDatabase db = this.getWritableDatabase();
-//        Cursor res = db.rawQuery("select * from " + TABLE_NAME, null);
-//        return res;
-//    }
-//
-//
-//    public boolean updateData(String id, String name, String surname, String marks) {
-//        SQLiteDatabase db = this.getWritableDatabase();
-//        ContentValues contentValues = new ContentValues();
-//        contentValues.put(COL_1, id);
-//        contentValues.put(COL_2, name);
-//        contentValues.put(COL_3, surname);
-//        contentValues.put(COL_4, marks);
-//        db.update(TABLE_NAME, contentValues, "ID = ?", new String[]{id});
-//        return true;
-//    }
-//
-//    public Integer deleteData(String id) {
-//        SQLiteDatabase db = this.getWritableDatabase();
-//        return db.delete(TABLE_NAME, "ID = ?", new String[]{id});
-//    }
-//
-//
-//    public int Login(String email, String password) {
-//        SQLiteDatabase db = this.getWritableDatabase();
-//        try {
-//            int i = 0;
-//            Cursor c = null;
-//            c = db.rawQuery("select * from " + TABLE_NAME + " where email =" + "\"" + email.trim() + "\"" + " and password=" + "\"" + password.trim() + "\"", null);
-//            c.moveToFirst();
-//            i = c.getCount();
-//            c.close();
-//            return i;
-//        } catch (Exception e) {
-//            e.printStackTrace();
-//        }
-//        return 0;
-//    }
-
-}
Index: app/src/main/res/menu/menu_detected_list.xml
===================================================================
--- app/src/main/res/menu/menu_detected_list.xml	(date 1501671703000)
+++ app/src/main/res/menu/menu_detected_list.xml	(date 1501671703000)
@@ -1,18 +0,0 @@
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MainNavigationActivity">
-
-    <item
-        android:id="@+id/action_manage_add"
-        android:icon="@drawable/ic_add_black_24dp"
-        android:title="@string/action_detected_beacon_add"
-        app:showAsAction="never" />
-
-    <item
-        android:id="@+id/action_filter_add"
-        android:icon="@drawable/ic_sort_black_24dp"
-        android:title="@string/action_detected_beacon_add_filter"
-        app:showAsAction="never" />
-
-</menu>
Index: app/src/main/res/drawable-v21/ic_menu_slideshow.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_slideshow.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_menu_slideshow.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M4,6H2v14c0,1.1 0.9,2 2,2h14v-2H4V6zm16,-4H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2V4c0,-1.1 -0.9,-2 -2,-2zm-8,12.5v-9l6,4.5 -6,4.5z" />
-</vector>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/DividerItemDecoration.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/DividerItemDecoration.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/DividerItemDecoration.java	(date 1501671703000)
@@ -1,64 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.view;
-
-import android.content.Context;
-import android.content.res.TypedArray;
-import android.graphics.Canvas;
-import android.graphics.Rect;
-import android.graphics.drawable.Drawable;
-import android.support.v7.widget.RecyclerView;
-import android.view.View;
-
-public class DividerItemDecoration extends RecyclerView.ItemDecoration {
-    private static final int[] ATTRS = new int[]{
-            android.R.attr.listDivider
-    };
-    private Drawable mDivider;
-
-    public DividerItemDecoration(Context context) {
-        final TypedArray a = context.obtainStyledAttributes(ATTRS);
-        mDivider = a.getDrawable(0);
-        a.recycle();
-    }
-
-    @Override
-    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
-        final int left = parent.getPaddingLeft();
-        final int right = parent.getWidth() - parent.getPaddingRight();
-
-        final int childCount = parent.getChildCount();
-        for (int i = 0; i < childCount; i++) {
-            final View child = parent.getChildAt(i);
-            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child
-                    .getLayoutParams();
-            final int top = child.getBottom() + params.bottomMargin;
-            final int bottom = top + mDivider.getIntrinsicHeight();
-            mDivider.setBounds(left, top, right, bottom);
-            mDivider.draw(c);
-        }
-    }
-
-
-    @Override
-    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State
-            state) {
-        outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/ScanFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/ScanFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/ScanFragment.java	(date 1501671703000)
@@ -1,198 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.ServiceConnection;
-import android.os.Bundle;
-import android.os.RemoteException;
-import android.util.Log;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import com.ellipsonic.www.student_tracking.util.PreferencesUtil;
-
-import org.altbeacon.beacon.Beacon;
-import org.altbeacon.beacon.BeaconConsumer;
-import org.altbeacon.beacon.BeaconManager;
-import org.altbeacon.beacon.RangeNotifier;
-import org.altbeacon.beacon.Region;
-
-import java.util.Collection;
-
-
-/**
- * Created by vitas on 8/11/15.
- */
-public abstract class ScanFragment extends BaseFragment implements BeaconConsumer, RangeNotifier {
-
-    final static String STATE_SCANNING = "STATE_SCANNING";
-
-    protected Region mRegion;
-    protected boolean isReadyForScan;
-    protected boolean isScanning;
-    protected BeaconManager mBeaconManager;
-    protected boolean needContinueScan;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mBeaconManager = Student_Tracking.from(getActivity()).getComponent().beaconManager();
-        mRegion = new Region(PreferencesUtil.getDefaultRegionName(getApplicationContext()), null, null, null);
-        mBeaconManager.bind(this);
-        mBeaconManager.setRangeNotifier(this);
-        setNeedFab(true);
-
-        if (savedInstanceState != null) {
-            needContinueScan = savedInstanceState.getBoolean(STATE_SCANNING);
-        }
-    }
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-        if (mBeaconManager.isBound(this)) {
-            mBeaconManager.unbind(this);
-        }
-    }
-
-
-    @Override
-    public void onActivityCreated(Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        if (getActivity() instanceof NewMainNavigationActivity) {
-           // ((NewMainNavigationActivity) getActivity()).swappingFloatingScanIcon(isScanning);
-        }
-    }
-
-    @Override
-    public void onStop() {
-        super.onStop();
-        stopScan();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        if (mBeaconManager.isBound(this)) mBeaconManager.setBackgroundMode(false);
-    }
-
-    @Override
-    public void onPause() {
-        //if (mBeaconManager.isBound(this)) mBeaconManager.setBackgroundMode(PreferencesUtil.isBackgroundScan(getActivity()));
-        super.onPause();
-    }
-
-    public void scanStartStopAction() {
-        if (isScanning) {
-            stopScan();
-        } else {
-            startScan();
-        }
-    }
-
-    public void startScan() {
-        try {
-            if (isCanScan() & mBeaconManager.isBound(this)) {
-                mBeaconManager.startRangingBeaconsInRegion(mRegion);
-                isScanning = true;
-                if (getActivity() instanceof NewMainNavigationActivity) {
-                    //((NewMainNavigationActivity) getActivity()).swappingFloatingScanIcon(isScanning);
-                }
-            }
-        } catch (RemoteException e) {
-            Log.d(Constants.TAG, "Start scan beacon problem", e);
-        }
-    }
-
-    public void stopScan() {
-        try {
-            if (mBeaconManager.isBound(this)) {
-                mBeaconManager.stopRangingBeaconsInRegion(mRegion);
-            }
-            isScanning = false;
-            if (getActivity() instanceof NewMainNavigationActivity) {
-                //((MainNavigationActivity) getActivity()).swappingFloatingScanIcon(isScanning);
-            }
-        } catch (RemoteException e) {
-            Log.d(Constants.TAG, "Stop scan beacon problem", e);
-        }
-    }
-
-    public abstract void onCanScan();
-
-    public abstract void updateBeaconList(final Collection<Beacon> beacons);
-
-    public abstract void updateBeaconList(final Collection<Beacon> beacons, final Region region);
-
-    protected boolean isCanScan() {
-        return isReadyForScan;
-    }
-
-    @Override
-    public void onBeaconServiceConnect() {
-        isReadyForScan = true;
-        isScanning = false;
-        onCanScan();
-
-        if (needContinueScan) {
-            scanStartStopAction();
-        }
-    }
-
-    @Override
-    public void didRangeBeaconsInRegion(final Collection<Beacon> beacons, final Region region) {
-        if (beacons != null) {
-            if (beacons.size() > 0 && region != null && region.equals(mRegion)) {
-                updateBeaconList(beacons);
-            } else {
-                updateBeaconList(beacons, region);
-            }
-        }
-    }
-
-    @Override
-    public Context getApplicationContext() {
-        return getActivity().getApplication();
-    }
-
-    @Override
-    public void unbindService(ServiceConnection serviceConnection) {
-        Log.d(Constants.TAG, "scan fragment unbound from beacon service");
-        if (mBeaconManager.isBound(this)) {
-            getActivity().unbindService(serviceConnection);
-        }
-        isReadyForScan = false;
-        isScanning = false;
-    }
-
-    @Override
-    public boolean bindService(Intent intent, ServiceConnection serviceConnection, int i) {
-        Log.d(Constants.TAG, "scan fragment bound to beacon service");
-        return getActivity().bindService(intent, serviceConnection, i);
-    }
-
-    @Override
-    public void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        outState.putBoolean(STATE_SCANNING, isScanning);
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/app_bar_map__beacon.xml
===================================================================
--- app/src/main/res/layout/app_bar_map__beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_map__beacon.xml	(date 1501671703000)
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/purple_light"
-    tools:context=".ui.activity.MapNavigationActivty">
-
-    <android.support.design.widget.AppBarLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:theme="@style/AppTheme.AppBarOverlay">
-
-        <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:layout_width="match_parent"
-            android:layout_height="?attr/actionBarSize"
-            android:background="@color/purple"
-            app:popupTheme="@style/AppTheme.PopupOverlay" />
-
-    </android.support.design.widget.AppBarLayout>
-
-    <include layout="@layout/content_map_activity" />
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:background="@color/purple_light"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        android:src="@drawable/ic_add_white_24dp"/>
-
-
-</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/menu/activity_navigation_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_navigation_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_navigation_drawer.xml	(date 1501671703000)
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_camera"
-            android:icon="@drawable/ic_menu_camera"
-            android:title="Map" />
-        <item
-            android:id="@+id/nav_gallery"
-            android:icon="@drawable/ic_menu_gallery"
-            android:title="Register_Beacon" />
-
-        <item
-            android:id="@+id/nav_manage"
-            android:icon="@drawable/ic_menu_manage"
-            android:title="SignOut" />
-    </group>
-
-
-
-</menu>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/receiver/LocationReceiver.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/receiver/LocationReceiver.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/receiver/LocationReceiver.java	(date 1501671703000)
@@ -1,85 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.receiver;
-
-import android.app.PendingIntent;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.location.Criteria;
-import android.location.Location;
-import android.location.LocationManager;
-import android.net.Uri;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.util.NotificationBuilder;
-
-
-public class LocationReceiver extends BroadcastReceiver {
-
-    private static final Criteria criteria = new Criteria();
-    private static final long MAX_AGE_TIME = 10000;
-    private static final int RETRY_COUNT_MAX = 2;
-    private int retryCount = 0;
-
-    @Override
-    public void onReceive(Context context, Intent intent)
-    {
-        retryCount = intent.getIntExtra("RETRY_COUNT", 0);
-        Location bestLocation = null;
-        final LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
-        for (final String provider : locationManager.getAllProviders()) {
-            if (provider != null) {
-                final Location location = locationManager.getLastKnownLocation(provider);
-                final long now = System.currentTimeMillis();
-                if (location != null
-                        && (bestLocation == null || location.getTime() > bestLocation.getTime())
-                        && location.getTime() > now - MAX_AGE_TIME) {
-                    bestLocation = location;
-                }
-            }
-        }
-
-        if (bestLocation != null) {
-            final String position = bestLocation.getLatitude() + "," + bestLocation.getLongitude();
-            final Uri uri = Uri.parse("geo:" + position + "?z=16&q=" + position);
-            final Intent mapIntent = new Intent(Intent.ACTION_VIEW, uri);
-
-            PendingIntent notificationIntent = PendingIntent.getActivity(context, 0, mapIntent, PendingIntent.FLAG_UPDATE_CURRENT);
-
-            NotificationBuilder notificationBuilder = new NotificationBuilder(context);
-            notificationBuilder.createNotification(R.mipmap.ic_launcher, context.getString(R.string.action_alarm_text_title), notificationIntent);
-            notificationBuilder.setMessage(context.getString(R.string.notification_display_last_position));
-            notificationBuilder.show(1);
-
-        } else {
-            if (retryCount < RETRY_COUNT_MAX) {
-                try {
-                    Thread.sleep(5000);
-                } catch (InterruptedException e) {
-                }
-                retryCount++;
-                intent.putExtra("RETRY_COUNT", retryCount);
-                final PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
-                locationManager.requestSingleUpdate(criteria, pendingIntent);
-            }
-        }
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/DetailFragmentPagerAdapter.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/DetailFragmentPagerAdapter.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/DetailFragmentPagerAdapter.java	(date 1501671703000)
@@ -1,86 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.adapter;
-
-import android.content.Context;
-import android.os.Bundle;
-import android.support.v4.app.FragmentManager;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.BeaconActionPageFragment;
-import com.ellipsonic.www.student_tracking.ui.fragment.BeaconDetailPageFragment;
-import com.ellipsonic.www.student_tracking.ui.fragment.BeaconEventPageFragment;
-import com.ellipsonic.www.student_tracking.ui.fragment.BeaconNotificationPageFragment;
-import com.ellipsonic.www.student_tracking.ui.fragment.PageBeaconFragment;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 25/12/15.
- */
-public class DetailFragmentPagerAdapter extends android.support.v4.app.FragmentPagerAdapter {
-    private int tabTitleResources[] = new int[]{R.string.tab_title_beacon_info, R.string.tab_title_beacon_event, R.string.tab_title_beacon_action,
-            R.string.tab_title_beacon_notification};
-    private Context mContext;
-    private ActionBeacon mActionBeacon;
-
-    public DetailFragmentPagerAdapter(FragmentManager fm, ActionBeacon beacon, Context context) {
-        super(fm);
-        this.mContext = context;
-        this.mActionBeacon = beacon;
-    }
-
-    @Override
-    public int getCount() {
-        return tabTitleResources.length;
-    }
-
-    @Override
-    public PageBeaconFragment getItem(int position) {
-        Bundle args = new Bundle();
-        args.putInt(Constants.ARG_PAGE, position + 1);
-
-        PageBeaconFragment frg = BeaconDetailPageFragment.newInstance(position + 1);
-        switch (position) {
-            case 0:
-                frg = BeaconDetailPageFragment.newInstance(position + 1);
-                break;
-            case 1:
-                frg = BeaconEventPageFragment.newInstance(position + 1);
-                break;
-            case 2:
-                frg = BeaconActionPageFragment.newInstance(position + 1);
-                break;
-            case 3:
-                frg = BeaconNotificationPageFragment.newInstance(position + 1);
-                break;
-        }
-
-        if (mActionBeacon != null) {
-            args.putParcelable(Constants.ARG_ACTION_BEACON, mActionBeacon);
-            frg.setArguments(args);
-        }
-        return frg;
-    }
-
-    @Override
-    public CharSequence getPageTitle(int position) {
-        return this.mContext.getString(tabTitleResources[position]);
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/BaseActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/BaseActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/BaseActivity.java	(date 1501671703000)
@@ -1,149 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.annotation.SuppressLint;
-import android.app.Activity;
-import android.app.FragmentManager;
-import android.content.Intent;
-import android.net.Uri;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.AppCompatActivity;
-import android.view.Menu;
-import android.view.MenuItem;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import com.ellipsonic.www.student_tracking.util.PreferencesUtil;
-
-
-/**
- * Created by vitas on 19/10/15.
- */
-@SuppressLint("Registered")
-public class BaseActivity extends AppCompatActivity {
-    //public static int glCount = 0;
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        //getMenuInflater().inflate(R.menu.menu_main_navigation, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case android.R.id.home:
-                FragmentManager fm = getFragmentManager();
-                if (fm.getBackStackEntryCount() > 0) {
-                    fm.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE);
-                } else {
-                    finish();
-                }
-                return true;
-//            case R.id.action_settings:
-//                launchSettingsActivity();
-//                return true;
-//            case R.id.action_view_on_github:
-//                launchGitHubPage();
-//                return true;
-//            case R.id.action_help:
-//                launchHelpPage();
-//                return true;
-//            case R.id.action_donate:
-//                launchDonatePage();
-//                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-    }
-
-
-//    private void launchGitHubPage() {
-//        Intent browserIntent = new Intent(Intent.ACTION_VIEW,
-//                Uri.parse("https://github.com/vitas/beaconloc"));
-//        startActivity(browserIntent);
-//    }
-//
-//    private void launchHelpPage() {
-//        Intent browserIntent = new Intent(Intent.ACTION_VIEW,
-//                Uri.parse("https://github.com/vitas/beaconloc/wiki/Help"));
-//        startActivity(browserIntent);
-//    }
-//
-//    private void launchDonatePage() {
-//        Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.paypal.me/SameBits"));
-//        startActivity(browserIntent);
-//    }
-//
-//    protected void launchSettingsActivity() {
-//        Intent intent = new Intent(this, SettingsActivity.class);
-//        startActivityForResult(intent, Constants.REQ_GLOBAL_SETTING);
-//    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (resultCode == Activity.RESULT_OK && requestCode == Constants.REQ_GLOBAL_SETTING) {
-            //TODO settings
-        }
-        super.onActivityResult(requestCode, resultCode, data);
-
-    }
-
-
-    protected Fragment checkFragmentInstance(int id, Object instanceClass) {
-
-        Fragment fragment = getFragmentInstance(id);
-        if (fragment != null && instanceClass.equals(fragment.getClass())) {
-            return fragment;
-        }
-        return null;
-    }
-
-    protected Fragment getFragmentInstance(int id) {
-        android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
-        if (fragmentManager != null) {
-            Fragment fragment = fragmentManager.findFragmentById(id);
-            if (fragment != null) {
-                return fragment;
-            }
-        }
-        return null;
-    }
-
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-//        glCount++;
-//        if (glCount == 1) {
-//            Student_Tracking.from(this).enableBackgroundScan(false);
-//        }
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-//        glCount--;
-//        if (glCount <= 0) {
-//            Student_Tracking.from(this).enableBackgroundScan(PreferencesUtil.isBackgroundScan(this));
-//        }
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/content_map_navigation_activty.xml
===================================================================
--- app/src/main/res/layout/content_map_navigation_activty.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_map_navigation_activty.xml	(date 1501671703000)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MapNavigationActivty"
-    tools:showIn="@layout/app_bar_map_navigation_activty">
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/IAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/IAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/IAction.java	(date 1501671703000)
@@ -1,29 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-
-import android.content.Context;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public interface IAction {
-    boolean isParamRequired();
-    String execute(Context context);
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/AppCompatPreferenceActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/AppCompatPreferenceActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/AppCompatPreferenceActivity.java	(date 1501671703000)
@@ -1,129 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.res.Configuration;
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-import android.support.annotation.LayoutRes;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatDelegate;
-import android.support.v7.widget.Toolbar;
-import android.view.MenuInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-/**
- * A {@link android.preference.PreferenceActivity} which implements and proxies the necessary calls
- * to be used with AppCompat.
- */
-public abstract class AppCompatPreferenceActivity extends PreferenceActivity {
-
-    private AppCompatDelegate mDelegate;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        getDelegate().installViewFactory();
-        getDelegate().onCreate(savedInstanceState);
-        super.onCreate(savedInstanceState);
-    }
-
-    @Override
-    protected void onPostCreate(Bundle savedInstanceState) {
-        super.onPostCreate(savedInstanceState);
-        getDelegate().onPostCreate(savedInstanceState);
-    }
-
-    public ActionBar getSupportActionBar() {
-        return getDelegate().getSupportActionBar();
-    }
-
-    public void setSupportActionBar(@Nullable Toolbar toolbar) {
-        getDelegate().setSupportActionBar(toolbar);
-    }
-
-    @NonNull
-    @Override
-    public MenuInflater getMenuInflater() {
-        return getDelegate().getMenuInflater();
-    }
-
-    @Override
-    public void setContentView(@LayoutRes int layoutResID) {
-        getDelegate().setContentView(layoutResID);
-    }
-
-    @Override
-    public void setContentView(View view) {
-        getDelegate().setContentView(view);
-    }
-
-    @Override
-    public void setContentView(View view, ViewGroup.LayoutParams params) {
-        getDelegate().setContentView(view, params);
-    }
-
-    @Override
-    public void addContentView(View view, ViewGroup.LayoutParams params) {
-        getDelegate().addContentView(view, params);
-    }
-
-    @Override
-    protected void onPostResume() {
-        super.onPostResume();
-        getDelegate().onPostResume();
-    }
-
-    @Override
-    protected void onTitleChanged(CharSequence title, int color) {
-        super.onTitleChanged(title, color);
-        getDelegate().setTitle(title);
-    }
-
-    @Override
-    public void onConfigurationChanged(Configuration newConfig) {
-        super.onConfigurationChanged(newConfig);
-        getDelegate().onConfigurationChanged(newConfig);
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        getDelegate().onStop();
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        getDelegate().onDestroy();
-    }
-
-    public void invalidateOptionsMenu() {
-        getDelegate().invalidateOptionsMenu();
-    }
-
-    private AppCompatDelegate getDelegate() {
-        if (mDelegate == null) {
-            mDelegate = AppCompatDelegate.create(this, null);
-        }
-        return mDelegate;
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/RegisterUser.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/RegisterUser.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/RegisterUser.java	(date 1501671703000)
@@ -1,198 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.Intent;
-import android.database.Cursor;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.UUID;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Major;
-
-
-import static com.ellipsonic.www.student_tracking.R.id.reg;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Minor;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.detectedMacId;
-
-public class RegisterUser extends AppCompatActivity implements View.OnClickListener {
-
-    Button register;
-
-    DatabaseHelper databaseHelper;
-
-
-    EditText firstname, lastname, phone, email, password, conformpassword;
-    public static String Email1;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_register_user);
-        databaseHelper = new DatabaseHelper(this);
-
-        firstname = (EditText) findViewById(R.id.firstname);
-        lastname = (EditText) findViewById(R.id.lastname);
-        email = (EditText) findViewById(R.id.email);
-        password = (EditText) findViewById(R.id.password);
-        phone = (EditText) findViewById(R.id.phone);
-        conformpassword = (EditText) findViewById(R.id.conform);
-        register = (Button) findViewById(R.id.reg);
-        register.setOnClickListener(this);
-
-        //UpdateData();
-        // DeleteData();
-
-    }
-
-
-    //   public void DeleteData() {
-//        btnDelete.setOnClickListener(
-//                new View.OnClickListener() {
-//                    @Override
-//                    public void onClick(View v) {
-//                        Integer deletedRows = myDb.deleteData(editTextId.getText().toString());
-//                        if(deletedRows > 0)
-//                            Toast.makeText(MainActivity.this,"Data Deleted",Toast.LENGTH_LONG).show();
-//                        else
-//                            Toast.makeText(MainActivity.this,"Data not Deleted", Toast.LENGTH_LONG).show();
-//                    }
-//                }
-//        );
-//    }
-//    public void UpdateData() {
-//        btnviewUpdate.setOnClickListener(
-//                new View.OnClickListener() {
-//                    @Override
-//                    public void onClick(View v) {
-//                        boolean isUpdate = myDb.updateData(editTextId.getText().toString(),
-//                                editName.getText().toString(),
-//                                editSurname.getText().toString(),editMarks.getText().toString());
-//                        if(isUpdate == true)
-//                            Toast.makeText(MainActivity.this,"Data Update",Toast.LENGTH_LONG).show();
-//                        else
-//                            Toast.makeText(MainActivity.this,"Data not Updated",Toast.LENGTH_LONG).show();
-//                    }
-//                }
-//        );
-//    }
-//    public  void AddData() {
-//        register.setOnClickListener(
-//                new View.OnClickListener() {
-//                    @Override
-//                    public void onClick(View v) {
-//                        boolean isInserted = myDb.insertData(firstname.getText().toString(),
-//                                lastname.getText().toString(),
-//                                username.getText().toString(),password.getText().toString(),
-//                                conformpassword.getText().toString() );
-//                        if(isInserted == true)
-//                            Toast.makeText(RegisterUser.this,"Data Inserted",Toast.LENGTH_LONG).show();
-//                        else
-//                            Toast.makeText(RegisterUser.this,"Data not Inserted",Toast.LENGTH_LONG).show();
-//                    }
-//                }
-//        );
-//    }
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-
-            case reg:
-                Register_Server();
-
-
-
-                break;
-
-        }
-    }
-
-    public void Register_Server() {
-        final String Firstanme = firstname.getText().toString().trim();
-        final String Lasttanme = lastname.getText().toString().trim();
-
-        String email1 = email.getText().toString().trim();
-        String emailPattern = "[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
-        if (email1.matches(emailPattern)) {
-
-            Toast.makeText(getApplicationContext(), "valid email address", Toast.LENGTH_SHORT).show();
-            final String Password = password.getText().toString().trim();
-            final String Phone = phone.getText().toString().trim();
-            final String conform_pwd = conformpassword.getText().toString().trim();
-            Email1=email1;
-
-
-            String a=Email1;
-            if (Firstanme.equals("") || Lasttanme.equals("") || email1.equals("") ||
-                    Password.equals("") || Phone.equals("")) {
-
-                Toast.makeText(getApplicationContext(), "Fill All the fields", Toast.LENGTH_SHORT).show();
-            } else {
-                if (Password.equals(conform_pwd)) {
-                    boolean isInserted = databaseHelper.insertStudentData(firstname.getText().toString(),
-                            lastname.getText().toString(),
-                            email.getText().toString(), password.getText().toString(),
-                            conformpassword.getText().toString());
-
-                    if(isInserted){
-                        try {
-                            String[] mac = databaseHelper.getAllBeaconData();
-                            detectedMacId = "";
-                            Major = "";
-                            Minor = "";
-                            UUID = "";
-//                            databaseHelper.deleteBeaconData(mac[0]);
-                            Toast.makeText(getApplicationContext(), "Succefully Registered", Toast.LENGTH_SHORT).show();
-                            Intent intent = new Intent(getApplicationContext(), Login.class);
-                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                            startActivity(intent);
-                            finish();
-
-                        }catch (NullPointerException e){
-                            e.printStackTrace();
-                            Toast.makeText(getApplicationContext(), "Succefully Registered", Toast.LENGTH_SHORT).show();
-                            Intent intent = new Intent(getApplicationContext(), Login.class);
-                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                            startActivity(intent);
-                            finish();
-
-                        }
-                    }else {
-                        Toast.makeText(getApplicationContext(), "Dublicate Email", Toast.LENGTH_SHORT).show();
-                    }
-
-
-
-                } else
-                    Toast.makeText(getApplicationContext(), "password is not matching", Toast.LENGTH_SHORT).show();
-            }
-
-        }
-        else
-            Toast.makeText(getApplicationContext(),"Invalid email address", Toast.LENGTH_SHORT).show();
-
-
-
-    }
-//
-    @Override
-    public void onBackPressed() {
-        //super.onBackPressed();
-        Intent intent = new Intent(getApplicationContext(), Login.class);
-        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        startActivity(intent);
-        finish();
-        System.exit(1);
-
-    }
-
-
-}
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(date 1501671703000)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1501671703000)
@@ -1,6 +0,0 @@
-#Mon Jul 10 16:55:36 SGT 2017
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
Index: app/src/main/res/drawable-v21/curved_btn.xml
===================================================================
--- app/src/main/res/drawable-v21/curved_btn.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/curved_btn.xml	(date 1501671703000)
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="#5c5cff"/>
-
-    <stroke android:width="0.2dp"
-        android:color="#000000" />
-
-    <padding android:left="1dp"
-        android:top="1dp"
-        android:right="1dp"
-        android:bottom="1dp" />
-
-    <corners android:bottomRightRadius="50dip" android:bottomLeftRadius="50dip"
-        android:topLeftRadius="50dip" android:topRightRadius="50dip"/>
-
-</shape>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/util/Constants.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/util/Constants.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/util/Constants.java	(date 1501671703000)
@@ -1,58 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.util;
-
-/**
- * Created by vitas on 25/10/15.
- */
-public final class Constants {
-
-    public static final String TAG = "BeaconLocator";
-    public static final String DEFAULT_PROJECT_NAME = "default";
-    public static final int SORT_DISTANCE_FAR_FIRST = 1;
-    public static final int SORT_DISTANCE_NEAREST_FIRST = 0;
-    public static final int SORT_UUID_MAJOR_MINOR = 2;
-    public static final String TAG_FRAGMENT_SCAN_LIST = "SCAN_LIST";
-    public static final String TAG_FRAGMENT_SCAN_RADAR = "SCAN_RADAR";
-    public static final String TAG_FRAGMENT_TRACKED_BEACON_LIST = "TRACKED_BEACON_LIST";
-
-    public static final String ARG_PAGE = "ARG_PAGE";
-    public static final String ARG_BEACON = "ARG_BEACON";
-    public static final String ARG_ACTION_BEACON = "ARG_ACTION_BEACON";
-
-    public static final int REQ_GLOBAL_SETTING = 10078;
-    public static final int REQ_UPDATED_ACTION_BEACON = 10079;
-    public static final int REQ_UPDATED_TRACKED_BEACON = 10080;
-    public static final int REQ_TASKER_ACTION_NAME_REQUEST = 10081;
-    public static final int REQ_CODE_ALERT_RINGTONE = 10082;
-
-    public static final String REGION_NAME_PREFIX = "com.ellipsonic.www.student_tracking";
-    //actions
-    public static final String NOTIFY_BEACON_ENTERS_REGION = "com.ellipsonic.www.student_tracking.NOTIFY_BEACON_ENTERS_REGION";
-    public static final String NOTIFY_BEACON_LEAVES_REGION = "com.ellipsonic.www.student_tracking.NOTIFY_BEACON_LEAVES_REGION";
-    public static final String NOTIFY_BEACON_NEAR_YOU_REGION = "com.ellipsonic.www.student_tracking.NOTIFY_BEACON_NEAR_YOU_REGION";
-
-    public static final String ALARM_NOTIFICATION_SHOW = "com.ellipsonic.www.student_tracking.ALARM_NOTIFICATION_SHOW";
-    public static final String GET_CURRENT_LOCATION = "com.ellipsonic.www.student_tracking.GET_CURRENT_LOCATION";
-
-    private Constants() {
-    }
-
-
-}
Index: app/src/main/res/layout/nav_header_map_navigation_activty.xml
===================================================================
--- app/src/main/res/layout/nav_header_map_navigation_activty.xml	(date 1501671703000)
+++ app/src/main/res/layout/nav_header_map_navigation_activty.xml	(date 1501671703000)
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/nav_header_height"
-    android:background="@drawable/side_nav_bar"
-    android:gravity="bottom"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    android:theme="@style/ThemeOverlay.AppCompat.Dark">
-
-    <ImageView
-        android:id="@+id/imageView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/nav_header_vertical_spacing"
-        app:srcCompat="@android:drawable/sym_def_app_icon" />
-
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/nav_header_vertical_spacing"
-        android:text="Android Studio"
-        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
-
-    <TextView
-        android:id="@+id/textView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="android.studio@android.com" />
-
-</LinearLayout>
Index: app/src/main/res/menu/home_beacon_navigation.xml
===================================================================
--- app/src/main/res/menu/home_beacon_navigation.xml	(date 1501671703000)
+++ app/src/main/res/menu/home_beacon_navigation.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item
-        android:id="@+id/action_settings"
-        android:orderInCategory="100"
-        android:title="@string/action_settings"
-        app:showAsAction="never" />
-</menu>
Index: app/src/main/res/xml/preferences_beacon_event.xml
===================================================================
--- app/src/main/res/xml/preferences_beacon_event.xml	(date 1501671703000)
+++ app/src/main/res/xml/preferences_beacon_event.xml	(date 1501671703000)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:key="key_event">
-
-    <PreferenceCategory
-        android:title="@string/pref_be_event_category">
-
-        <CheckBoxPreference
-            android:title="@string/pref_be_event_enter_region"
-            android:key="be_event_enter_region"
-            android:summary="@string/pref_be_summary_event_enter_region"
-            android:checked="true"/>
-
-        <CheckBoxPreference
-            android:title="@string/pref_be_event_leave_region"
-            android:key="be_event_leaves_region"
-            android:summary="@string/pref_be_summary_event_leave_region" />
-
-        <CheckBoxPreference
-            android:title="@string/pref_be_event_near"
-            android:key="be_event_near_you"
-            android:summary="@string/pref_be_summary_event_near" />
-
-    </PreferenceCategory>
-
-</PreferenceScreen>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/GoogleMainActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/GoogleMainActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/GoogleMainActivity.java	(date 1501671703000)
@@ -1,247 +0,0 @@
-
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-//import android.support.v7.app.AppCompatActivity;
-//import android.os.Bundle;
-//
-//import com.ellipsonic.www.student_tracking.R;
-//
-//public class GoogleMainActivity extends AppCompatActivity {
-//
-//    @Override
-//    protected void onCreate(Bundle savedInstanceState) {
-//        super.onCreate(savedInstanceState);
-//        setContentView(R.layout.activity_google_main);
-//    }
-//}
-
-
-import android.app.ProgressDialog;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.v7.app.AppCompatActivity;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-
-
-import com.google.android.gms.auth.api.Auth;
-import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
-import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
-import com.google.android.gms.auth.api.signin.GoogleSignInResult;
-import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.SignInButton;
-import com.google.android.gms.common.api.GoogleApiClient;
-import com.google.android.gms.common.api.OptionalPendingResult;
-import com.google.android.gms.common.api.ResultCallback;
-import com.google.android.gms.common.api.Status;
-import com.ellipsonic.www.student_tracking.R;
-
-//package info.androidhive.gpluslogin;
-
-
-public class GoogleMainActivity extends AppCompatActivity implements
-        View.OnClickListener,
-        GoogleApiClient.OnConnectionFailedListener {
-
-    private static final String TAG = MainActivity.class.getSimpleName();
-    private static final int RC_SIGN_IN = 007;
-
-    private GoogleApiClient mGoogleApiClient;
-    private ProgressDialog mProgressDialog;
-
-    private SignInButton btnSignIn;
-    private Button btnSignOut, btnRevokeAccess;
-    private LinearLayout llProfileLayout;
-    private ImageView imgProfilePic;
-    private TextView txtName, txtEmail;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_google_main);
-
-        btnSignIn = (SignInButton) findViewById(R.id.btn_sign_in);
-        btnSignOut = (Button) findViewById(R.id.btn_sign_out);
-        btnRevokeAccess = (Button) findViewById(R.id.btn_revoke_access);
-        llProfileLayout = (LinearLayout) findViewById(R.id.llProfile);
-        imgProfilePic = (ImageView) findViewById(R.id.imgProfilePic);
-        txtName = (TextView) findViewById(R.id.txtName);
-        txtEmail = (TextView) findViewById(R.id.txtEmail);
-
-        btnSignIn.setOnClickListener(this);
-        btnSignOut.setOnClickListener(this);
-        btnRevokeAccess.setOnClickListener(this);
-
-        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
-                .requestEmail()
-                .build();
-
-        mGoogleApiClient = new GoogleApiClient.Builder(this)
-                .enableAutoManage(this, this)
-                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
-                .build();
-
-        // Customizing G+ button
-        btnSignIn.setSize(SignInButton.SIZE_STANDARD);
-        btnSignIn.setScopes(gso.getScopeArray());
-    }
-
-
-    private void signIn() {
-        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
-        startActivityForResult(signInIntent, RC_SIGN_IN);
-    }
-
-
-    private void signOut() {
-        Auth.GoogleSignInApi.signOut(mGoogleApiClient).setResultCallback(
-                new ResultCallback<Status>() {
-                    @Override
-                    public void onResult(Status status) {
-                        updateUI(false);
-                    }
-                });
-    }
-
-    private void revokeAccess() {
-        Auth.GoogleSignInApi.revokeAccess(mGoogleApiClient).setResultCallback(
-                new ResultCallback<Status>() {
-                    @Override
-                    public void onResult(Status status) {
-                        updateUI(false);
-                    }
-                });
-    }
-
-    private void handleSignInResult(GoogleSignInResult result) {
-        Log.d(TAG, "handleSignInResult:" + result.isSuccess());
-        if (result.isSuccess()) {
-            // Signed in successfully, show authenticated UI.
-            GoogleSignInAccount acct = result.getSignInAccount();
-
-            Log.e(TAG, "display name: " + acct.getDisplayName());
-
-            String personName = acct.getDisplayName();
-            String personPhotoUrl = acct.getPhotoUrl().toString();
-            String email = acct.getEmail();
-
-            Log.e(TAG, "Name: " + personName + ", email: " + email
-                    + ", Image: " + personPhotoUrl);
-
-            txtName.setText(personName);
-            txtEmail.setText(email);
-            Glide.with(getApplicationContext()).load(personPhotoUrl)
-                    .thumbnail(0.5f)
-                    .crossFade()
-                    .diskCacheStrategy(DiskCacheStrategy.ALL)
-                    .into(imgProfilePic);
-
-            updateUI(true);
-        } else {
-            // Signed out, show unauthenticated UI.
-            updateUI(false);
-        }
-    }
-
-    @Override
-    public void onClick(View v) {
-        int id = v.getId();
-
-        switch (id) {
-            case R.id.btn_sign_in:
-                signIn();
-                break;
-
-            case R.id.btn_sign_out:
-                signOut();
-                break;
-
-            case R.id.btn_revoke_access:
-                revokeAccess();
-                break;
-        }
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);
-        if (requestCode == RC_SIGN_IN) {
-            GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
-            handleSignInResult(result);
-        }
-    }
-
-    @Override
-    public void onStart() {
-        super.onStart();
-
-        OptionalPendingResult<GoogleSignInResult> opr = Auth.GoogleSignInApi.silentSignIn(mGoogleApiClient);
-        if (opr.isDone()) {
-            // If the user's cached credentials are valid, the OptionalPendingResult will be "done"
-            // and the GoogleSignInResult will be available instantly.
-            Log.d(TAG, "Got cached sign-in");
-            GoogleSignInResult result = opr.get();
-            handleSignInResult(result);
-        } else {
-            // If the user has not previously signed in on this device or the sign-in has expired,
-            // this asynchronous branch will attempt to sign in the user silently.  Cross-device
-            // single sign-on will occur in this branch.
-            showProgressDialog();
-            opr.setResultCallback(new ResultCallback<GoogleSignInResult>() {
-                @Override
-                public void onResult(GoogleSignInResult googleSignInResult) {
-                    hideProgressDialog();
-                    handleSignInResult(googleSignInResult);
-                }
-            });
-        }
-    }
-
-    @Override
-    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
-        // An unresolvable error has occurred and Google APIs (including Sign-In) will not
-        // be available.
-        Log.d(TAG, "onConnectionFailed:" + connectionResult);
-    }
-
-    private void showProgressDialog() {
-        if (mProgressDialog == null) {
-            mProgressDialog = new ProgressDialog(this);
-            mProgressDialog.setMessage(getString(R.string.loading));
-            mProgressDialog.setIndeterminate(true);
-        }
-
-        mProgressDialog.show();
-    }
-
-    private void hideProgressDialog() {
-        if (mProgressDialog != null && mProgressDialog.isShowing()) {
-            mProgressDialog.hide();
-        }
-    }
-
-    private void updateUI(boolean isSignedIn) {
-        if (isSignedIn) {
-            btnSignIn.setVisibility(View.GONE);
-            btnSignOut.setVisibility(View.VISIBLE);
-            btnRevokeAccess.setVisibility(View.VISIBLE);
-            llProfileLayout.setVisibility(View.VISIBLE);
-        } else {
-            btnSignIn.setVisibility(View.VISIBLE);
-            btnSignOut.setVisibility(View.GONE);
-            btnRevokeAccess.setVisibility(View.GONE);
-            llProfileLayout.setVisibility(View.GONE);
-        }
-    }
-}
Index: app/src/main/res/values/strings.xml
===================================================================
--- app/src/main/res/values/strings.xml	(date 1501671703000)
+++ app/src/main/res/values/strings.xml	(date 1501671703000)
@@ -1,287 +0,0 @@
-<resources>
-    <string name="app_name" translatable="false">Beacon Locator</string>
-    <string name="nav_drawer_open">open drawer</string>
-    <string name="nav_drawer_close">close drawer</string>
-
-    <string name="btn_getstarted">GET STARTED</string>
-
-
-    <!-- Button text -->
-    <string name="btn_logout_from_google">Logout from Google</string>
-    <string name="btn_revoke_access">Revoke Access</string>
-    <string name="loading">Loading...</string>
-
-
-    <!-- Dialogs -->
-    <string name="dialog_action_ok">OK</string>
-    <string name="dialog_action_delete">Delete</string>
-    <string name="dialog_action_cancel">Cancel</string>
-    <string name="dialog_action_exit">Exit</string>
-    <string name="student_class">Standard of Student</string>
-
-    <string name="dialog_error_title">Error</string>
-
-    <string name="dialog_error_functionality_limited">Functionality limited</string>
-    <string name="error_message_location_access_not_granted">\"Since location access has not been
-        granted, this app will not be able to discover beacons when in the background.
-    </string>
-    <string name="dialog_error_need_location_access">This app needs location access</string>
-    <string name="error_message_location_access_need_tobe_granted">Please grant location access so
-        this app can detect beacons in the background.
-    </string>
-    <string name="dialog_error_ble_not_enabled">Bluetooth not enabled</string>
-    <string name="error_message_please_enable_bluetooth">Please enable bluetooth in settings and
-        restart this application.
-    </string>
-    <string name="dialog_error_ble_not_supported">Bluetooth LE not available</string>
-    <string name="error_message_bluetooth_le_not_supported">Sorry, this device does not support
-        Bluetooth LE.
-    </string>
-
-    <!-- Strings related to Settings -->
-
-    <!-- Scan settings -->
-    <string name="pref_title_background_scan">Enable background scan</string>
-    <string name="pref_description_background_scan">Enables to run scanning in background and
-        trigger actions.
-    </string>
-    <string name="pref_title_background_scan_timeout">Background scan interval (only Android 4.X)
-    </string>
-    <string name="pref_title_region_name">Region name</string>
-    <string name="pref_default_region_name">Default</string>
-    <string name="pref_title_manual_scan_timeout">Manual scan interval</string>
-    <string name="pref_title_scan_sorting">Sorting mode</string>
-    <string name="pref_title_scan_layout_category" translatable="false">Scan Layouts</string>
-    <string name="pref_scan_parser_layout_eddystone_uid">Eddystone UID</string>
-    <string name="pref_scan_parser_layout_eddystone_url">Eddystone URL</string>
-    <string name="pref_scan_parser_layout_eddystone_tlm">Eddystone TLM</string>
-
-
-    <!-- settings for actions -->
-    <string name="pref_header_notifications">Notifications</string>
-    <string name="pref_title_use_notifications">Use notifications</string>
-    <string name="pref_title_ringtone">Ringtone</string>
-    <string name="pref_ringtone_silent">Silent</string>
-    <string name="pref_title_vibrate">Vibrate</string>
-
-    <!-- drawer navigation -->
-    <string name="pref_header_scanner">Scan</string>
-    <string name="pref_header_actions">Action</string>
-
-    <!-- titles activities-->
-    <string name="title_activity_main_navigation">Beacon Locator</string>
-    <string name="title_activity_settings">Settings</string>
-    <string name="title_activity_beacon">Beacon Action</string>
-
-    <!-- settings menu actions -->
-    <string name="action_settings">Settings</string>
-    <string name="action_view_on_github">GitHub</string>
-    <string name="action_donate">Donate</string>
-    <string name="action_help">Help</string>
-
-
-    <!-- Popup menu long click -->
-    <string name="action_detected_beacon_add">Manage</string>
-    <string name="action_detected_beacon_add_filter">Add To Filter</string>
-
-    <string name="action_tracked_list_delete">Delete</string>
-    <string name="action_tracked_action_add">Add Event Action</string>
-
-    <!-- left drawer menu actions -->
-    <string name="title_action_group_beacon_manage">Beacons</string>
-    <string name="action_scan_around">Scan</string>
-    <string name="action_scan_managed">Radar</string>
-    <string name="action_tracked_list">Manage</string>
-
-    <!-- detected beacon properties -->
-    <string name="mv_text_rssi" translatable="false">RSSI</string>
-    <string name="mv_text_rssi_unit">dBm</string>
-    <string name="mv_text_txpower" translatable="false">TX</string>
-    <string name="mv_text_distance_unit">m</string>
-    <string name="mv_text_uuid" translatable="false">UUID</string>
-    <string name="mv_text_major" translatable="false">Major</string>
-    <string name="mv_text_minor" translatable="false">Minor</string>
-    <string name="mv_text_distance">Distance</string>
-    <string name="mv_text_vendor">Vendor</string>
-    <string name="mv_text_name">Bluetooth Name</string>
-    <string name="mv_text_url" translatable="false">URL</string>
-    <string name="mv_text_instance" translatable="false">Instance</string>
-    <string name="mv_text_namespace" translatable="false">Namespace</string>
-
-    <!-- Radar fragment -->
-    <string name="title_fragment_radar_beacons">Beacon Radar</string>
-    <string name="text_scanning">Scanning...</string>
-    <string name="text_scanner_found_beacons_size">%1$d found</string>
-
-    <!-- Scan fragment -->
-    <string name="title_fragment_detected_beacons">Beacon Scanner</string>
-    <string name="text_empty_list">No Data</string>
-    <string name="text_scan_not_found">No beacon found in your neighborhood</string>
-    <string name="text_please_start_scan">Press scan button for detecting beacons</string>
-
-    <!-- tracked list fragment -->
-    <string name="title_fragment_tracked_beacons">Beacon List</string>
-    <string name="text_empty_list_tracked_beacons">No tracked beacons. Go to scan</string>
-    <string name="tab_title_beacon_info">Info</string>
-    <string name="tab_title_beacon_event">Event</string>
-    <string name="tab_title_beacon_action">Action</string>
-    <string name="tab_title_beacon_notification">Notification</string>
-
-    <!-- Beacon details info dialog tab -->
-
-    <string name="pref_bd_name_category">Name and Enable watched beacon</string>
-    <string name="pref_bd_switch_active">Enable it</string>
-    <string name="pref_bd_summary_switch_active">Enables action for the beacon</string>
-    <string name="pref_bd_name">Region Name</string>
-    <string name="pref_bd_default_name">Default action name</string>
-
-    <string name="pref_bd_uuid" translatable="false">UUID</string>
-    <string name="pref_bd_type">Type</string>
-    <string name="pref_bd_rssi" translatable="false">RSSI</string>
-    <string name="pref_bd_txpower">Tx Power</string>
-    <string name="pref_bd_bluetooth_name">Bluetooth Name</string>
-    <string name="pref_bd_bluetooth_address">Bluetooth Address</string>
-    <string name="pref_bd_distance">Distance</string>
-    <string name="pref_bd_major" translatable="false">Major</string>
-    <string name="pref_bd_minor" translatable="false">Minor</string>
-
-    <!-- Beacon events dialog tab -->
-    <string name="pref_be_event_category">Select type of event</string>
-    <string name="pref_be_event_range">Event range</string>
-    <string name="pref_be_summary_event_range">Defined event for triggering actions</string>
-    <string name="pref_be_event_enter_region">Enter region (in range)</string>
-    <string name="pref_be_summary_event_enter_region">Occurs when beacon is entering region</string>
-    <string name="pref_be_event_leave_region">Leave region (out of range)</string>
-    <string name="pref_be_summary_event_leave_region">Occurs when beacon is going out of range
-    </string>
-    <string name="pref_be_event_near">Beacon near you</string>
-    <string name="pref_be_summary_event_near">Occurs when beacon is close to you</string>
-
-    <!-- Beacon actions dialog tab -->
-    <string name="pref_ba_action_category">Select action and set param</string>
-    <string name="pref_ba_action_param1">Action parameter</string>
-    <string name="pref_ba_action_selection">Action Type</string>
-    <string name="pref_ba_action_test_category">Test your action</string>
-    <string name="pref_ba_action_test_button">Execute</string>
-
-
-    <!-- Beacon notifications dialog tab -->
-    <string name="pref_bn_notification_category">Enable alarm notification</string>
-    <string name="pref_bn_notification_action">Notification</string>
-    <string name="pref_bn_notification_action_message">Message</string>
-    <string name="pref_bn_default_notification_action_message">Default Message (Replace with
-        yours)
-    </string>
-    <string name="pref_bn_notification_action_ringtone">Ring tone</string>
-    <string name="pref_bn_none_notification_action_ringtone">None (Silent)</string>
-    <string name="pref_bn_notification_action_vibrate">Vibrate</string>
-
-    <!-- item action mvv -->
-    <string name="action_add_action">ACTION</string>
-    <string name="mv_action_text_name">Name</string>
-    <string name="mv_action_text_event">Event</string>
-    <string name="mv_event_type_leaves_region">Leaves region</string>
-    <string name="mv_event_type_enters_region">Enters region</string>
-    <string name="mv_event_type_near_you">Near you</string>
-    <string name="mv_action_status_enable">Enabled</string>
-    <string name="mv_action_status_disabled">Disabled</string>
-
-    <!-- action types  -->
-    <string name="mv_action_type_none">None</string>
-    <string name="mv_action_type_tasker">Tasker</string>
-    <string name="mv_action_type_set_silent_on">Silent sound profile</string>
-    <string name="mv_action_type_set_silent_off">Normal sound profile</string>
-    <string name="mv_action_type_start_app">Start application</string>
-    <string name="mv_action_type_get_location">Get Location</string>
-    <string name="mv_action_type_broadcast_intent">Broadcast intent</string>
-    <string name="mv_action_type_open_url">Open Url</string>
-    <string name="mv_action_type_open_web">Open WebUrl</string>
-
-    <!-- tasker -->
-    <string name="action_tasker_default">Select task</string>
-    <string name="action_tasker_download">Buy/try Tasker</string>
-    <string name="action_tasker_message">Tasker is an application for Android which performs tasks
-        (sets of actions) based on contexts (application, time, date, location, event, gesture) in
-        user-defined profiles or in clickable or timer home screen widgets.
-        \n\nnBeacon Locator may use Beacons to trigger the task you specify.
-    </string>
-    <string name="tasker_download">Google Play</string>
-    <string name="tasker_website">Download trial</string>
-    <string name="tasker_not_installed">Tasker application is not installed.</string>
-    <string name="tasker_error">An error occurred when launching the task.</string>
-    <string name="tasker_success">The task has been executed.</string>
-    <string name="tasker_disabled">Tasker is disabled.</string>
-    <string name="tasker_external_access_denided">External access to Tasker is disabled. See
-        Preferences -> MISC -> Allow External Access in the Tasker.
-    </string>
-
-    <!-- actions -->
-    <string name="action_alarm_text_title">Beacon Event"</string>
-    <string name="action_location_no_location">Current GPS Location is unknown</string>
-    <string name="action_urlaction_error">Cannot open url, url is invalid or malformed</string>
-    <string name="action_start_application_error">Can not start application, not exists</string>
-    <string name="action_action_param_is_required">You have to provide a parameter for the action
-    </string>
-    <string name="notification_display_last_position">your location on map</string>
-
-    <!-- enums -->
-    <string name="proximity_immediate">Immediate</string>
-    <string name="proximity_near">Near</string>
-    <string name="proximity_far">Far</string>
-
-    <string name="sort_type_nearest_first">Nearest first</string>
-    <string name="sort_type_furthest_first">Furthest first</string>
-    <string name="sort_type_uuid_major_minor">UUID, Major and Minor</string>
-
-    <string name="title_activity_welcome_page">WelcomePage</string>
-    <string name="title_activity_maps">Map</string>
-    <string name="navigation_drawer_open">Open navigation drawer</string>
-    <string name="navigation_drawer_close">Close navigation drawer</string>
-
-
-    <string name="appName">Smart Student</string>
-    <string name="btn_signUp">Sign Up</string>
-    <string name="hint_fname">Father Name</string>
-    <string name="hint_mname">Mother Name</string>
-    <string name="hint_sname">Student Name</string>
-    <string name="hint_address">Address</string>
-    <string name="hint_email">Email ID</string>
-    <string name="hint_phone">Phone Number</string>
-    <string name="track_student">Student Tracking</string>
-    <string name="smart_hw">Smart HW</string>
-    <string name="online_vid">Online video tut</string>
-    <string name="student_anlys">Student Analysis</string>
-
-    <string name="school_name">Name Of the School</string>
-    <string name="student_mac_id">MAC ID of Student</string>
-    <string name="student_age">Student Age</string>
-    <string name="studentName">Name Of the Student</string>
-    <string name="btn_register">Register</string>
-    <string name="dailogtxt">Enter Here</string>
-    <string name="submit_button">Submit</string>
-    <string name="student_data_not_recieved">Student is Out Of Range</string>
-    <string name="student_captured">Student Captured here At :</string>
-    <string name="title_activity_login">Sign in</string>
-
-    <!-- Strings related to login -->
-    <string name="prompt_email">Email</string>
-    <string name="prompt_password">Password (optional)</string>
-    <string name="action_sign_in">Sign in or register</string>
-    <string name="action_sign_in_short">Sign in</string>
-    <string name="error_invalid_email">This email address is invalid</string>
-    <string name="error_invalid_password">This password is too short</string>
-    <string name="error_incorrect_password">This password is incorrect</string>
-    <string name="error_field_required">This field is required</string>
-    <string name="permission_rationale">"Contacts permissions are needed for providing email
-        completions."
-    </string>
-    <string name="title_activity_home__beacon">Home_Beacon</string>
-    <string name="title_activity_map_page">MapPage</string>
-
-
-    <string name="drawer_open">Drawer open</string>
-    <string name="drawer_close">Drawer close</string>
-    <string name="title_activity_map_navigation_activty">MapNavigationActivty</string>
-    <string name="title_activity_home_beacon_navigation">HomeBeaconNavigationActivity</string>
-
-</resources>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconEventPageFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconEventPageFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconEventPageFragment.java	(date 1501671703000)
@@ -1,81 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.os.Bundle;
-import android.support.v7.preference.CheckBoxPreference;
-import android.support.v7.preference.Preference;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-
-/**
- * Created by vitas on 20/12/15.
- */
-public class BeaconEventPageFragment extends PageBeaconFragment {
-
-
-    public static BeaconEventPageFragment newInstance(int page) {
-        BeaconEventPageFragment detailFragment = new BeaconEventPageFragment();
-        return detailFragment;
-    }
-
-    @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        this.addPreferencesFromResource(R.xml.preferences_beacon_event);
-    }
-
-    @Override
-    public boolean onPreferenceTreeClick(Preference preference) {
-
-        String key = preference.getKey();
-        if (key.equals("be_event_enter_region")) {
-            mActionBeacon.setEventType(ActionBeacon.EventType.EVENT_ENTERS_REGION);
-        } else if (key.equals("be_event_leaves_region")) {
-            mActionBeacon.setEventType(ActionBeacon.EventType.EVENT_LEAVES_REGION);
-        } else {
-            mActionBeacon.setEventType(ActionBeacon.EventType.EVENT_NEAR_YOU);
-        }
-
-        setData();
-
-        return super.onPreferenceTreeClick(preference);
-    }
-
-    @Override
-    protected void setData() {
-        switch (mActionBeacon.getEventType()) {
-            case EVENT_ENTERS_REGION:
-                ((CheckBoxPreference) findPreference("be_event_enter_region")).setChecked(true);
-                ((CheckBoxPreference) findPreference("be_event_leaves_region")).setChecked(false);
-                ((CheckBoxPreference) findPreference("be_event_near_you")).setChecked(false);
-                break;
-            case EVENT_LEAVES_REGION:
-                ((CheckBoxPreference) findPreference("be_event_leaves_region")).setChecked(true);
-                ((CheckBoxPreference) findPreference("be_event_enter_region")).setChecked(false);
-                ((CheckBoxPreference) findPreference("be_event_near_you")).setChecked(false);
-                break;
-            default:
-                ((CheckBoxPreference) findPreference("be_event_near_you")).setChecked(true);
-                ((CheckBoxPreference) findPreference("be_event_leaves_region")).setChecked(false);
-                ((CheckBoxPreference) findPreference("be_event_enter_region")).setChecked(false);
-        }
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/util/DialogBuilder.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/util/DialogBuilder.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/util/DialogBuilder.java	(date 1501671703000)
@@ -1,44 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.util;
-
-import android.app.Dialog;
-import android.content.Context;
-import android.support.v7.app.AlertDialog;
-
-import com.ellipsonic.www.student_tracking.R;
-
-
-/**
- * Created by vitas on 18/10/15.
- */
-public final class DialogBuilder {
-
-    private DialogBuilder() {
-    }
-
-    public static Dialog createSimpleOkErrorDialog(Context context, String title, String message) {
-        AlertDialog.Builder alertDialog = new AlertDialog.Builder(context)
-                .setTitle(title)
-                .setMessage(message)
-                .setNeutralButton(R.string.dialog_action_ok, null);
-        return alertDialog.create();
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/LocationAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/LocationAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/LocationAction.java	(date 1501671703000)
@@ -1,53 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-
-
-import android.content.Context;
-import android.content.Intent;
-
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class LocationAction extends NoneAction {
-
-    public LocationAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        Intent newIntent = new Intent(Constants.GET_CURRENT_LOCATION);
-        context.sendBroadcast(newIntent);
-        return super.execute(context);
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return false;
-    }
-
-    @Override
-    public String toString() {
-        return "LocationAction, param: " + param;
-    }
-}
Index: app/src/main/res/layout/toolbar.xml
===================================================================
--- app/src/main/res/layout/toolbar.xml	(date 1501671703000)
+++ app/src/main/res/layout/toolbar.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v7.widget.Toolbar xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/toolbar"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    app:theme="@style/AppTheme.ActionBar">
-
-</android.support.v7.widget.Toolbar>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/Login.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/Login.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/Login.java	(date 1501671703000)
@@ -1,100 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.Intent;
-import android.support.annotation.Nullable;
-import android.support.v4.app.ActivityCompat;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-import android.view.ActionMode;
-import android.view.View;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import butterknife.OnClick;
-
-import static com.ellipsonic.www.student_tracking.ui.activity.RegisterUser.Email1;
-
-public class Login extends AppCompatActivity implements View.OnClickListener {
-
-    EditText email, password;
-    DatabaseHelper databaseHelper;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_login2);
-        email = (EditText) findViewById(R.id.login_email);
-        password = (EditText) findViewById(R.id.login_password);
-        findViewById(R.id.login).setOnClickListener(this);
-        findViewById(R.id.signup).setOnClickListener(this);
-
-        databaseHelper = new DatabaseHelper(getApplicationContext());
-    }
-
-    @Nullable
-    @Override
-    public ActionMode onWindowStartingActionMode(ActionMode.Callback callback) {
-        return super.onWindowStartingActionMode(callback);
-    }
-
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-            case R.id.login:
-                login_server();
-                break;
-            case R.id.signup:
-                    Intent intent1 = new Intent(getApplicationContext(), RegisterUser.class);
-                    intent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                    startActivity(intent1);
-
-                    break;
-               // }
-        }
-    }
-
-    public void login_server() {
-
-        final String Loign_Email = email.getText().toString().trim();
-        final String Login_Password = password.getText().toString().trim();
-
-        if (Loign_Email.equals(null) || Login_Password.equals(null) ||
-                Loign_Email.equals("") || Login_Password.equals("")) {
-
-            Toast.makeText(getApplicationContext(), "Please Enter Valid Email and password",
-                    Toast.LENGTH_SHORT).show();
-        } else {
-            int isLogedIn = databaseHelper.Login(Loign_Email, Login_Password);
-            if(isLogedIn == 1){
-                Intent intent = new Intent(getApplicationContext(),HomeBeaconNavigationActivity.class);
-                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                startActivity(intent);
-            }else
-                Toast.makeText(getApplicationContext(), "Please Enter Valid Email and password",
-                        Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    @Override
-    public void onBackPressed() {
-
-        moveTaskToBack(true);
-        android.os.Process.killProcess(android.os.Process.myPid());
-        System.exit(1);
-    }
-
-//        super.onBackPressed();
-      //  startActivity(new Intent(getApplicationContext(), MainActivity.class));
-        //finish();
-       // System.exit(0);
-//
-//
-//    public void clickexit(View v)
-//    {
-//        moveTaskToBack(true); android.os.Process.killProcess(android.os.Process.myPid()); System.exit(1);
-//    }
-
-}
Index: app/src/main/res/layout/app_bar.xml
===================================================================
--- app/src/main/res/layout/app_bar.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar.xml	(date 1501671703000)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.AppBarLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/appbar"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:fitsSystemWindows="true">
-
-    <include android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-</android.support.design.widget.AppBarLayout>
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_menu_camera.xml
===================================================================
--- app/src/main/res/drawable-hdpi/ic_menu_camera.xml	(date 1501671703000)
+++ app/src/main/res/drawable-hdpi/ic_menu_camera.xml	(date 1501671703000)
@@ -1,12 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0" />
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M9,2L7.17,4H4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2H9zm3,15c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z" />
-</vector>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/BeaconAdapter.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/BeaconAdapter.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/BeaconAdapter.java	(date 1501671703000)
@@ -1,107 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.adapter;
-
-import android.support.v7.widget.RecyclerView;
-
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.BaseFragment;
-import com.ellipsonic.www.student_tracking.util.BeaconUtil;
-
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-/**
- * Created by vitas on 09/12/2015.
- */
-
-public abstract class BeaconAdapter<VH extends RecyclerView.ViewHolder> extends RecyclerView.Adapter<VH> {
-
-    protected Map<String, IManagedBeacon> mBeacons = new LinkedHashMap();
-    protected BaseFragment mFragment;
-    protected OnBeaconLongClickListener onBeaconLongClickListener;
-
-
-    public void insertBeacon(IManagedBeacon beacon) {
-        this.mBeacons.put(beacon.getId(), beacon);
-        notifyDataSetChanged();
-    }
-
-    public void insertBeacons(List<? extends IManagedBeacon> beacons) {
-        for (IManagedBeacon beacon :
-                beacons) {
-            this.mBeacons.put(beacon.getId(), beacon);
-        }
-        notifyDataSetChanged();
-    }
-
-    public void sort(final int sortMode) {
-        this.mBeacons = BeaconUtil.sortBecons(mBeacons, sortMode);
-
-
-
-    }
-
-    public void removeBeacon(int position) {
-        IManagedBeacon beacon = (IManagedBeacon) getItem(position);
-        if (beacon != null) {
-            this.mBeacons.remove(beacon.getId());
-            notifyDataSetChanged();
-        }
-    }
-
-    @Override
-    public int getItemCount() {
-        return mBeacons.size();
-    }
-
-    public Object getItem(int idx) {
-        int i = 0;
-        for (Map.Entry<String, IManagedBeacon> entry : this.mBeacons.entrySet()) {
-            if (i == idx) {
-                return entry.getValue();
-            }
-            i += 1;
-        }
-        return null;
-    }
-
-    public void removeAll() {
-        this.mBeacons.clear();
-        notifyDataSetChanged();
-    }
-
-    public boolean isItemExists(String id) {
-        return this.mBeacons.containsKey(id);
-    }
-
-    public void removeBeaconById(String beaconId) {
-        this.mBeacons.remove(beaconId);
-        notifyDataSetChanged();
-    }
-
-    public void setOnBeaconLongClickListener(OnBeaconLongClickListener onBeaconLongClickListener) {
-        this.onBeaconLongClickListener = onBeaconLongClickListener;
-    }
-
-    public interface OnBeaconLongClickListener {
-        void onBeaconLongClick(int position);
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/UrlAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/UrlAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/UrlAction.java	(date 1501671703000)
@@ -1,99 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-import android.content.Context;
-import android.net.Uri;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-
-import java.io.BufferedInputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.HttpURLConnection;
-import java.net.URL;
-
-import javax.net.ssl.HttpsURLConnection;
-
-/**
- * Created by vitas on 04/03/16.
- */
-public class UrlAction extends NoneAction {
-
-    public UrlAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        try {
-            Uri.parse(param);
-
-            if (param.startsWith("http://")) {
-                new CallUrl<>(param).start();
-            }
-
-            if (param.startsWith("https://")) {
-                new CallUrl<HttpsURLConnection>(param).start();
-            }
-        } catch (Exception e) {
-            return context.getString(R.string.action_urlaction_error);
-        }
-        return super.execute(context);
-    }
-
-    private class CallUrl<T extends HttpURLConnection> extends Thread {
-
-        final String url;
-
-        public CallUrl(String url) {
-            this.url = url;
-        }
-
-        @Override
-        public void run() {
-            try {
-                T urlConnection = (T) new URL(url).openConnection();
-                try {
-                    InputStream in = new BufferedInputStream(urlConnection.getInputStream());
-                    readStream(in);
-                } finally {
-                    urlConnection.disconnect();
-                }
-            } catch (IOException e) {
-                // nothing to do.
-            }
-        }
-    }
-
-    private void readStream(InputStream in) throws IOException  {
-        // nothing to do.
-        in.close();
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return true;
-    }
-
-    @Override
-    public String toString() {
-        return "UrlAction, url: " + param;
-    }
-}
Index: app/src/main/res/layout/app_bar_main_navigation.xml
===================================================================
--- app/src/main/res/layout/app_bar_main_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_main_navigation.xml	(date 1501671703000)
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-
-    android:fitsSystemWindows="true"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity">
-
-
-    <include android:id="@+id/toolbar" layout="@layout/toolbar"/>
-
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:background="@color/purple_light"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        android:src="@drawable/ic_add_white_24dp"
-        />
-
-
-    <include
-        android:id="@+id/include"
-        layout="@layout/content_main_navigation"></include>
-
-
-    <Button
-        android:id="@+id/button"
-        style="@style/Widget.AppCompat.Button"
-        android:layout_width="230sp"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentStart="true"
-        android:layout_gravity="top|right"
-        android:layout_marginBottom="0sp"
-        android:elevation="24dp"
-        android:text="select"
-
-        app:layout_anchor="@+id/include"
-        app:layout_anchorGravity="bottom|left" />
-
-
-</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/res/layout/fragment_scan_radar.xml
===================================================================
--- app/src/main/res/layout/fragment_scan_radar.xml	(date 1501671703000)
+++ app/src/main/res/layout/fragment_scan_radar.xml	(date 1501671703000)
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    style="@style/AppTheme"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include android:id="@+id/appbar" layout="@layout/app_bar"/>
-
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:gravity="center_horizontal"
-        app:layout_behavior="@string/appbar_scrolling_view_behavior">
-
-        <com.ellipsonic.www.student_tracking.ui.view.RadarScanView
-            android:id="@+id/radar"
-            android:layout_width="340dip"
-            android:layout_height="340dip"
-            android:layout_marginTop="6dip" />
-
-        <TextView
-            android:id="@+id/distance"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:layout_marginTop="6dip"
-            android:textSize="@dimen/text_body"
-            android:typeface="monospace" />
-
-    </RelativeLayout>
-
-
-</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/anim/pop_down.xml
===================================================================
--- app/src/main/res/anim/pop_down.xml	(date 1501671703000)
+++ app/src/main/res/anim/pop_down.xml	(date 1501671703000)
@@ -1,10 +0,0 @@
-<scale xmlns:android="http://schemas.android.com/apk/res/android"
-    android:duration="100"
-    android:fillAfter="true"
-    android:fromXScale="1.0"
-    android:fromYScale="1.0"
-    android:pivotX="50%"
-    android:pivotY="50%"
-    android:shareInterpolator="true"
-    android:toXScale="0.0"
-    android:toYScale="0.0"/>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_tracked_beacons.xml
===================================================================
--- app/src/main/res/layout/fragment_tracked_beacons.xml	(date 1501671703000)
+++ app/src/main/res/layout/fragment_tracked_beacons.xml	(date 1501671703000)
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/tracked_coordinator"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/purple_light"
-   >
-
-    <include android:id="@+id/appbar" layout="@layout/app_bar"/>
-
-
-        <com.ellipsonic.www.student_tracking.ui.view.ContextMenuRecyclerView
-            android:id="@+id/recycler_beacons"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:clipToPadding="false"
-            android:paddingBottom="@dimen/activity_vertical_margin"
-            android:paddingLeft="@dimen/activity_horizontal_margin"
-            android:paddingRight="@dimen/activity_horizontal_margin"
-            android:paddingTop="@dimen/activity_vertical_margin"
-            app:layout_behavior="@string/appbar_scrolling_view_behavior"
-            />
-
-
-        <ProgressBar
-            android:id="@+id/progress_indicator"
-            style="?android:attr/progressBarStyleLarge"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"
-            app:layout_anchor="@id/recycler_beacons"
-            app:layout_anchorGravity="center"
-        />
-
-        <ViewStub
-            android:id="@+id/empty_view"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_centerInParent="true"
-            android:layout="@layout/layout_empty_list" />
-
-</android.support.design.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/PageBeaconFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/PageBeaconFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/PageBeaconFragment.java	(date 1501671703000)
@@ -1,73 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.os.Bundle;
-import android.support.v7.preference.PreferenceFragmentCompat;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.data.DataManager;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 20/12/15.
- */
-public abstract class PageBeaconFragment extends PreferenceFragmentCompat {
-
-    protected DataManager mDataManager;
-    protected ActionBeacon mActionBeacon;
-    protected int mPage;
-
-    abstract public void onCreatePreferences(Bundle savedInstanceState, String rootKey);
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mDataManager = Student_Tracking.from(getActivity()).getComponent().dataManager();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View fragmentView = super.onCreateView(inflater, container, savedInstanceState);
-
-        readArguments();
-        setData();
-
-        return fragmentView;
-    }
-
-    protected abstract void setData();
-
-    protected void readArguments() {
-        if (getArguments() != null) {
-            mPage = getArguments().getInt(Constants.ARG_PAGE);
-            mActionBeacon = getArguments().getParcelable(Constants.ARG_ACTION_BEACON);
-        }
-    }
-
-    protected boolean updateActionBeacon() {
-        return mDataManager.updateBeaconAction(mActionBeacon);
-    }
-
-
-}
Index: app/src/main/res/layout/nav_header_main_navigation.xml
===================================================================
--- app/src/main/res/layout/nav_header_main_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/nav_header_main_navigation.xml	(date 1501671703000)
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/nav_header_height"
-    android:gravity="bottom"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin">
-
-    <ImageView
-        android:id="@+id/imageView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/nav_header_vertical_spacing"
-        android:src="@android:drawable/sym_action_email" />
-
-    <TextView
-        android:id="@+id/textView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="vr@samebits.com" />
-
-</LinearLayout>
Index: app/src/main/res/menu/home__beacon.xml
===================================================================
--- app/src/main/res/menu/home__beacon.xml	(date 1501671703000)
+++ app/src/main/res/menu/home__beacon.xml	(date 1501671703000)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-
-</menu>
Index: app/src/main/res/xml/preferences_beacon_action.xml
===================================================================
--- app/src/main/res/xml/preferences_beacon_action.xml	(date 1501671703000)
+++ app/src/main/res/xml/preferences_beacon_action.xml	(date 1501671703000)
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:key="key_actions">
-
-    <PreferenceCategory android:title="@string/pref_ba_action_category">
-        <ListPreference
-            android:defaultValue="0"
-            android:entries="@array/pref_ba_action_range_array"
-            android:entryValues="@array/pref_ba_action_range_values"
-            android:key="ba_action_list"
-            android:negativeButtonText="@null"
-            android:positiveButtonText="@null"
-            android:title="@string/pref_ba_action_selection" />
-
-        <EditTextPreference
-            android:dependency="ba_action_list"
-            android:key="ba_action_param1"
-            android:title="@string/pref_ba_action_param1" />
-
-    </PreferenceCategory>
-
-    <PreferenceCategory android:title="@string/pref_ba_action_test_category">
-        <Preference
-            android:dependency="ba_action_list"
-            android:key="ba_action_test"
-            android:title="@string/pref_ba_action_test_button" />
-    </PreferenceCategory>
-
-
-</PreferenceScreen>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/StartAppAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/StartAppAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/StartAppAction.java	(date 1501671703000)
@@ -1,95 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-
-import java.util.List;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class StartAppAction extends NoneAction {
-
-
-    public StartAppAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        try {
-            if (!launchApp(context, param)) {
-                openApp(context, param);
-            }
-        } catch (Exception e) {
-            return context.getString(R.string.action_start_application_error);
-        }
-        return super.execute(context);
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return true;
-    }
-
-    @Override
-    public String toString() {
-        return "StartAppAction, app_package: " + param;
-    }
-
-    private boolean launchApp(Context context, String packageName) {
-
-        final PackageManager manager = context.getPackageManager();
-        final Intent appLauncherIntent = new Intent(Intent.ACTION_MAIN);
-        appLauncherIntent.addCategory(Intent.CATEGORY_LAUNCHER);
-
-        List<ResolveInfo> resolveInfos = manager.queryIntentActivities(appLauncherIntent, 0);
-        if ((null != resolveInfos) && (!resolveInfos.isEmpty())) {
-            for (ResolveInfo rInfo : resolveInfos) {
-                String className = rInfo.activityInfo.name.trim();
-                String targetPackageName = rInfo.activityInfo.packageName.trim();
-                if (packageName.trim().equals(targetPackageName)) {
-                    Intent intent = new Intent();
-                    intent.setClassName(targetPackageName, className);
-                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                    context.startActivity(intent);
-                    return true;
-                }
-            }
-        }
-        return false;
-    }
-
-    private boolean openApp(Context context, String packageName) {
-        PackageManager manager = context.getPackageManager();
-        Intent i = manager.getLaunchIntentForPackage(packageName);
-        if (i == null) {
-            return false;
-        }
-        i.addCategory(Intent.CATEGORY_LAUNCHER);
-        context.startActivity(i);
-        return true;
-    }
-}
Index: app/src/main/res/drawable-v21/ic_menu_send.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_send.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_menu_send.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z" />
-</vector>
Index: app/src/main/res/menu/map_menu.xml
===================================================================
--- app/src/main/res/menu/map_menu.xml	(date 1501671703000)
+++ app/src/main/res/menu/map_menu.xml	(date 1501671703000)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_map"
-            android:title="Map" />
-        <item
-            android:id="@+id/nav_register"
-            android:title="Beacon_Register" />
-
-        <item
-            android:id="@+id/nav_signout"
-            android:title="SignOut" />
-
-    </group>
-
-</menu>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/HomeBeaconNavigationActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/HomeBeaconNavigationActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/HomeBeaconNavigationActivity.java	(date 1501671703000)
@@ -1,216 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.widget.CardView;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.support.design.widget.NavigationView;
-import android.support.v4.view.GravityCompat;
-import android.support.v4.widget.DrawerLayout;
-import android.support.v7.app.ActionBarDrawerToggle;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Major;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Minor;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.UUID;
-import static com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity.StudentName;
-
-public class HomeBeaconNavigationActivity extends AppCompatActivity
-        implements NavigationView.OnNavigationItemSelectedListener {
-
-
-    DatabaseHelper databaseHelper;
-    String MacID = "";
-    CardView card_view;
-    private LayoutInflater inflater;
-    String MACID;
-    TextView mac;
-    String macIdFromDb = "";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_home_beacon_navigation);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-        mac = (TextView) findViewById(R.id.mac);
-        card_view = (CardView) findViewById(R.id.card_view);
-        databaseHelper = new DatabaseHelper(getApplicationContext());
-
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
-                        .setAction("Action", null).show();
-            }
-        });
-
-        try {
-            String[] macid =  databaseHelper.getAllBeaconData();
-            MacID = macid[0];
-        }catch (NullPointerException e){
-            e.printStackTrace();
-            MacID = "";
-        }
-        card_view.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-
-                if (!MacID.equals("")) {
-                    Toast.makeText(getApplicationContext(), "Already Registerd", Toast.LENGTH_SHORT).show();
-                } else {
-                    Toast.makeText(getApplicationContext(), "Please Register Your Beacon", Toast.LENGTH_SHORT).show();
-                    Intent intent = new Intent(getApplicationContext(), RegisterActivity.class);
-                    startActivity(intent);
-                }
-            }
-        });
-
-        try {
-            String[] beaconData =  databaseHelper.getAllBeaconData();
-
-            String cardData = "MACID                      :"+beaconData[0]+"\n"+
-                              "Student Name        :"+beaconData[1]+"\n"+
-                              "School Name          :"+beaconData[2]+"\n"+
-                              "Student Age            :"+beaconData[3]+"\n"+
-                              "Student Standard  :"+beaconData[4]+"\n";
-            mac.setText(cardData);
-
-        } catch (NullPointerException e) {
-            e.printStackTrace();
-        }
-
-
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
-                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
-        drawer.setDrawerListener(toggle);
-        toggle.syncState();
-
-        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
-        navigationView.setNavigationItemSelectedListener(this);
-
-        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
-
-        if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)){
-            //Toast.makeText(this, "GPS is Enabled in your devide", Toast.LENGTH_SHORT).show();
-        }else{
-            showGPSDisabledAlertToUser();
-        }
-
-    }
-
-    private void showGPSDisabledAlertToUser(){
-        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);
-        alertDialogBuilder.setMessage("GPS is disabled in your device. Would you like to enable it?")
-                .setCancelable(false)
-                .setPositiveButton("Goto Settings Page To Enable GPS",
-                        new DialogInterface.OnClickListener(){
-                            public void onClick(DialogInterface dialog, int id){
-                                Intent callGPSSettingIntent = new Intent(
-                                        android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-                                startActivity(callGPSSettingIntent);
-                            }
-                        });
-        alertDialogBuilder.setNegativeButton("Cancel",
-                new DialogInterface.OnClickListener(){
-                    public void onClick(DialogInterface dialog, int id){
-                        dialog.cancel();
-                    }
-                });
-        AlertDialog alert = alertDialogBuilder.create();
-        alert.show();
-    }
-
-    @Override
-    public void onBackPressed() {
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        if (drawer.isDrawerOpen(GravityCompat.START)) {
-            drawer.closeDrawer(GravityCompat.START);
-        } else {
-
-            moveTaskToBack(true);
-            android.os.Process.killProcess(android.os.Process.myPid());
-            System.exit(1);
-        }
-    }
-
-
-
-    @SuppressWarnings("StatementWithEmptyBody")
-    @Override
-    public boolean onNavigationItemSelected(MenuItem item) {
-        // Handle navigation view item clicks here.
-        int id = item.getItemId();
-
-        if (id == R.id.nav_map) {
-            String[] cursor = databaseHelper.getAllBeaconData();
-
-            try {
-                if (!cursor[0].equals(null)) {
-                    macIdFromDb = cursor[0];
-                }
-            } catch (NullPointerException e) {
-                e.printStackTrace();
-            }
-
-            Log.d("Mac-Id", macIdFromDb);
-
-            if (!macIdFromDb.equals("")) {
-
-                String student_name = StudentName;
-                Intent myIntent = new Intent(this, MapNavigationActivty.class);
-                myIntent.putExtra("studentname", student_name);
-                startActivity(myIntent);
-            } else {
-
-                Toast.makeText(getApplicationContext(), "Please Register Your Beacon", Toast.LENGTH_SHORT).show();
-
-            }
-
-        } else if (id == R.id.nav_edit) {
-
-            String[] cursor = databaseHelper.getAllBeaconData();
-            try {
-                if (!cursor[0].equals(null)) {
-                    macIdFromDb = cursor[0];
-                }
-            } catch (NullPointerException e) {
-                e.printStackTrace();
-            }
-
-            if (!macIdFromDb.equals("")) {
-                Intent intent = new Intent(getApplicationContext(), RegisterActivity.class);
-                intent.putExtra("Edit-Registaration","TRUE");
-                startActivity(intent);
-
-            } else {
-                Toast.makeText(getApplicationContext(), "Please Register your beacon", Toast.LENGTH_SHORT).show();
-            }
-
-        } else if (id == R.id.nav_signout) {
-            Intent intent = new Intent(getApplicationContext(), com.ellipsonic.www.student_tracking.ui.activity.Login.class);
-            startActivity(intent);
-        }
-
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        drawer.closeDrawer(GravityCompat.START);
-        return true;
-    }
-}
Index: app/src/main/res/layout/item_detected_beacon.xml
===================================================================
--- app/src/main/res/layout/item_detected_beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/item_detected_beacon.xml	(date 1501671703000)
@@ -1,262 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-   >
-
-    <data>
-        <variable
-            name="viewModel"
-            type="com.ellipsonic.www.student_tracking.viewModel.DetectedBeaconViewModel" />
-    </data>
-
-    <FrameLayout
-        android:id="@+id/content_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:longClickable="true"
-        android:onClick="@{viewModel.onClickBeacon}"
-        >
-
-        <LinearLayout
-            android:id="@+id/container_view"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="0.8"
-            android:orientation="vertical">
-
-            <LinearLayout
-                android:id="@+id/beacon_item_view_header"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="12dp"
-                android:layout_marginRight="12dp"
-                android:layout_centerVertical="true"
-                android:orientation="horizontal">
-
-                <TextView
-                    android:id="@+id/beacon_item_uuid_label"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="4dp"
-                    android:text="@{viewModel.nameUuid}"
-                    android:textSize="@dimen/text_extra_small_body" />
-
-                <TextView
-                    android:id="@+id/beacon_item_uuid_value"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@{viewModel.uuid}"
-                    android:textSize="@dimen/text_small_body" />
-            </LinearLayout>
-
-            <LinearLayout
-                android:id="@+id/beacon_item_view"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:baselineAligned="false"
-                android:orientation="horizontal"
-                android:paddingBottom="6dp"
-                android:paddingLeft="12dp"
-                android:paddingRight="12dp"
-                android:paddingTop="1dp">
-
-                <LinearLayout
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="0.8"
-                    android:orientation="vertical">
-
-                    <LinearLayout
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:orientation="horizontal">
-
-                        <TextView
-                            android:id="@+id/beacon_item_rssi_label"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:text="@string/mv_text_rssi"
-                            android:textSize="@dimen/text_extra_small_body" />
-
-                        <TextView
-                            android:id="@+id/beacon_item_proximity"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:layout_marginStart="12dp"
-                            android:text="@{viewModel.proximity}"
-                            android:textColor="@{viewModel.proximityColor}"
-                            android:textSize="@dimen/text_extra_small_body" />
-                    </LinearLayout>
-
-                    <LinearLayout
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:orientation="horizontal">
-
-                        <TextView
-                            android:id="@+id/beacon_item_rssi_value"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:layout_marginEnd="6dp"
-                            android:text="@{viewModel.rssi}"
-                            android:textColor="@{viewModel.proximityColor}"
-                            android:textSize="@dimen/text_headline_large" />
-
-                        <TextView
-                            android:id="@+id/beacon_item_rssi_unit"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:text="@string/mv_text_rssi_unit"
-                            android:textSize="@dimen/text_body" />
-                    </LinearLayout>
-
-                    <TextView
-                        android:id="@+id/beacon_item_type"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginTop="2dp"
-                        android:text="@{viewModel.beaconType}"
-                        android:textSize="@dimen/text_small_body" />
-                </LinearLayout>
-
-                <LinearLayout
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1.0"
-                    android:orientation="vertical">
-
-                    <TextView
-                        android:id="@+id/beacon_item_tx_label"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/mv_text_txpower"
-                        android:textSize="@dimen/text_extra_small_body" />
-
-                    <LinearLayout
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:orientation="horizontal">
-
-                        <TextView
-                            android:id="@+id/beacon_item_tx_value"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:layout_marginEnd="3dp"
-                            android:text="@{viewModel.txPower}"
-                            android:textSize="@dimen/text_extra_small_body" />
-
-                        <TextView
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:text="@string/mv_text_rssi_unit"
-                            android:textSize="@dimen/text_small_body" />
-                    </LinearLayout>
-
-                    <TextView
-                        android:id="@+id/beacon_item_distance_label"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/mv_text_distance"
-                        android:textSize="@dimen/text_extra_small_body" />
-
-                    <LinearLayout
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:orientation="horizontal">
-
-                        <TextView
-                            android:id="@+id/beacon_item_distance_value"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:layout_marginEnd="3dp"
-                            android:text="@{viewModel.distance}"
-                            android:textSize="@dimen/text_extra_small_body" />
-
-                        <TextView
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:text="@string/mv_text_distance_unit"
-                            android:textSize="@dimen/text_small_body" />
-                    </LinearLayout>
-                </LinearLayout>
-
-                <LinearLayout
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="0.8"
-                    android:orientation="vertical">
-
-                    <TextView
-                        android:id="@+id/beacon_item_id_label"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/mv_text_name"
-                        android:textSize="@dimen/text_small_body" />
-
-                    <TextView
-                        android:id="@+id/beacon_item_id1_value"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@{viewModel.name}"
-                        android:textSize="@dimen/text_small_body" />
-
-                    <LinearLayout
-                        android:id="@+id/beacon_major_minor_container"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:baselineAligned="false"
-                        android:orientation="horizontal">
-
-                        <LinearLayout
-                            android:layout_width="fill_parent"
-                            android:layout_height="wrap_content"
-                            android:layout_weight="1.0"
-                            android:orientation="vertical"
-                            android:visibility="@{viewModel.visibilityMajor}">
-
-                            <TextView
-                                android:id="@+id/beacon_item_major_label"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:text="@{viewModel.nameMajor}"
-                                android:textSize="@dimen/text_extra_small_body" />
-
-                            <TextView
-                                android:id="@+id/beacon_item_id2_value"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:layout_marginEnd="12dp"
-                                android:text="@{viewModel.major}"
-                                android:textSize="@dimen/text_small_body" />
-                        </LinearLayout>
-
-                        <LinearLayout
-                            android:id="@+id/beacon_minor_container"
-                            android:layout_width="fill_parent"
-                            android:layout_height="wrap_content"
-                            android:layout_weight="1.0"
-                            android:orientation="vertical"
-                            android:visibility="@{viewModel.visibilityMinor}">
-
-                            <TextView
-                                android:id="@+id/beacon_item_minor_label"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:text="@{viewModel.nameMinor}"
-                                android:textSize="@dimen/text_extra_small_body" />
-
-                            <TextView
-                                android:id="@+id/beacon_item_id3_value"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:layout_marginEnd="12dp"
-                                android:text="@{viewModel.minor}"
-                                android:textSize="@dimen/text_small_body" />
-                        </LinearLayout>
-                    </LinearLayout>
-                </LinearLayout>
-            </LinearLayout>
-        </LinearLayout>
-
-    </FrameLayout>
-
-</layout>
\ No newline at end of file
Index: app/src/main/res/layout/content_map_activity.xml
===================================================================
--- app/src/main/res/layout/content_map_activity.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_map_activity.xml	(date 1501671703000)
@@ -1,57 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:context=".ui.activity.MapNavigationActivty"
-    tools:showIn="@layout/app_bar_map__beacon">
-
-
-
-
-    <android.support.v7.widget.CardView
-        android:id="@+id/card_view1"
-        android:layout_width="0dp"
-        android:layout_height="100dp"
-        android:layout_gravity="center"
-        android:layout_margin="5sp"
-        android:layout_marginBottom="8dp"
-        android:layout_marginLeft="8dp"
-        android:layout_marginTop="8dp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintHorizontal_bias="0.0"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.0"
-        app:cardCornerRadius="2dp"
-        app:contentPadding="10dp"
-        android:layout_marginStart="8dp">
-
-        <ImageView
-            android:id="@+id/student_tracking_btn"
-            android:layout_width="match_parent"
-            android:layout_height="100sp"
-            android:layout_alignParentStart="true"
-            android:layout_alignParentTop="true"
-            android:scaleType="fitXY"
-            app:srcCompat="@drawable/background"
-            android:contentDescription=""
-            tools:ignore="ContentDescription" />
-
-        <TextView
-            android:id="@+id/user"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-
-            android:textAlignment="center"
-            android:textAllCaps="false"
-            android:textColor="@color/white"
-            android:textSize="20sp"
-            tools:ignore="HardcodedText" />
-
-    </android.support.v7.widget.CardView>
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/RegisterActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/RegisterActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/RegisterActivity.java	(date 1501671703000)
@@ -1,487 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.Manifest;
-import android.app.ActionBar;
-import android.bluetooth.BluetoothAdapter;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.os.RemoteException;
-import android.support.annotation.NonNull;
-import android.support.design.widget.TextInputEditText;
-import android.support.v4.app.ActivityCompat;
-import android.support.v4.content.ContextCompat;
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.ListView;
-import android.widget.TextView;
-import android.widget.Toast;
-
-
-import com.android.volley.Request;
-import com.android.volley.RequestQueue;
-import com.android.volley.Response;
-import com.android.volley.VolleyError;
-import com.android.volley.toolbox.StringRequest;
-import com.android.volley.toolbox.Volley;
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.data.NewDbStoreService;
-import com.ellipsonic.www.student_tracking.database.SharedPreference;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Major;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.Minor;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.UUID;
-import static com.ellipsonic.www.student_tracking.model.DetectedBeacon.detectedMacId;
-
-public class RegisterActivity extends AppCompatActivity implements View.OnClickListener {
-
-    static String uuid_beacon = null;
-
-    TextInputEditText MacID;
-
-    private static final String url = "http://wisdomkraft.com/wisdomkraft.com/prudence/IoT/StudentTracking/Data_in_json.php";
-    private SharedPreference sharedPreference = new SharedPreference();
-
-
-    protected static final String TAG = "RegisterActivity";
-    public static String StudentName;
-    public static String SchooltName;
-    public static String mac1;
-    public static String StudentAge;
-    public static String StudentStandard;
-    private ActionBar actionBar;
-    DatabaseHelper databaseHelper;
-    Button register_User;
-   public static  TextInputEditText student_name, student_school,
-            student_age, student_standard;
-
-    EditText student_beaconMac;
-
-    //Permision code that will be checked in the method onRequestPermissionsResult
-    private int STORAGE_PERMISSION_CODE = 23;
-
-    String studentMacIdFromIntent;
-    Button registerButton;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_register);
-
-        BluetoothAdapter mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
-        if (mBluetoothAdapter == null) {
-            // Device does not support Bluetooth
-        } else {
-            if (!mBluetoothAdapter.isEnabled()) {
-                // Bluetooth is not enable :)
-                BluetoothAdapter.getDefaultAdapter().enable();
-            }
-        }
-
-        //First checking if the app is already having the permission
-//        if (isReadStorageAllowed()) {
-//            //If permission is already having then showing the toast
-//            Toast.makeText(RegisterActivity.this, "You already have the permission", Toast.LENGTH_LONG).show();
-//            //Existing the method with return
-//            return;
-//        }
-
-        //If the app has not the permission then asking for the permission
-//        requestStoragePermission();
-
-        student_name = (TextInputEditText) findViewById(R.id.student_name);
-        student_school = (TextInputEditText) findViewById(R.id.student_school);
-        student_beaconMac = (EditText) findViewById(R.id.student_mac);
-        student_age = (TextInputEditText) findViewById(R.id.student_age);
-        student_standard = (TextInputEditText) findViewById(R.id.student_standard);
-        findViewById(R.id.register_btn).setOnClickListener(this);
-
-        student_beaconMac.setOnClickListener(this);
-
-        databaseHelper = new DatabaseHelper(getApplicationContext());
-        Intent intent1 = getIntent();
-        try {
-            if (!intent1.equals(null)) {
-                studentMacIdFromIntent = intent1.getStringExtra("MacID");
-
-                String sName = intent1.getStringExtra("S_NAME");
-                String sSchol = intent1.getStringExtra("S_SCHOOL");
-                String sAge = intent1.getStringExtra("S_AGE");
-                String sStd = intent1.getStringExtra("S_STD");
-
-                student_name.setText(sName);
-                student_school.setText(sSchol);
-                student_age.setText(sAge);
-                student_standard.setText(sStd);
-                student_beaconMac.setText(studentMacIdFromIntent);
-
-            }
-        } catch (NullPointerException e) {
-            e.printStackTrace();
-        }
-
-        try{
-            String intentReg = intent1.getStringExtra("Edit-Registaration");
-            if(intentReg.equals("TRUE")){
-                String[] cursor = databaseHelper.getAllBeaconData();
-                student_beaconMac.setText(cursor[0]);
-                student_name.setText(cursor[1]);
-                student_school.setText(cursor[2]);
-                student_age.setText(cursor[3]);
-                student_standard.setText(cursor[4]);
-            }
-
-        }catch (NullPointerException e){
-            e.printStackTrace();
-        }
-    }
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-            case R.id.register_btn:
-                Server();
-                break;
-            case R.id.student_mac:
-
-                String editIntent = "NIL";
-                try {
-                    if (getIntent().getStringExtra("Edit-Registaration").equals("TRUE")) {
-                        Intent intent = new Intent(RegisterActivity.this, NewMainNavigationActivity.class);
-                        intent.putExtra("S_NAME", student_name.getText().toString().trim());
-                        intent.putExtra("S_NAME", student_name.getText().toString().trim());
-                        intent.putExtra("S_SCHOOL", student_school.getText().toString().trim());
-                        intent.putExtra("S_AGE", student_age.getText().toString().trim());
-                        intent.putExtra("S_STD", student_standard.getText().toString().trim());
-                        intent.putExtra("Edit-Registaration", "TRUE");
-                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                        startActivity(intent);
-                    }
-                } catch (NullPointerException e) {
-                    e.printStackTrace();
-                    Intent intent = new Intent(RegisterActivity.this, NewMainNavigationActivity.class);
-                    intent.putExtra("S_NAME", student_name.getText().toString().trim());
-                    intent.putExtra("S_NAME", student_name.getText().toString().trim());
-                    intent.putExtra("S_SCHOOL", student_school.getText().toString().trim());
-                    intent.putExtra("S_AGE", student_age.getText().toString().trim());
-                    intent.putExtra("S_STD", student_standard.getText().toString().trim());
-                    intent.putExtra("Edit-Registaration", "TRUE");
-                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                    startActivity(intent);
-                }
-
-                break;
-        }
-    }
-
-
-
-//        StringRequest stringRequest = new StringRequest(Request.Method.POST,url,
-//                new Response.Listener<String>() {
-//                    @Override
-//                    public void onResponse(String response) {
-//                        Toast.makeText(RegisterActivity.this,response, Toast.LENGTH_LONG).show();
-//                    }
-//                },
-//                new Response.ErrorListener() {
-//                    @Override
-//                    public void onErrorResponse(VolleyError error) {
-//                        Toast.makeText(RegisterActivity.this,error.toString(),Toast.LENGTH_LONG).show();
-//                    }
-//                }){
-//            @Override
-
-//            protected Map<String,String> getParams(){
-//
-//                NewDbStoreService newDbStoreService=new NewDbStoreService(getApplicationContext());
-//                List<TrackedBeacon> obj=newDbStoreService.getBeacons();
-//                String str="";
-//            for(TrackedBeacon object: obj) {
-//                str = object.getBluetoothAddress().trim();
-//            }
-//
-//               String s = str.replace(":", "");
-//               // String s="0CF3EE09392B";
-//              //  s="0CF3EE09392B";
-//                Map<String,String> params = new HashMap<String, String>();
-//             //   params.put("mac","NAME"+studentName+" SCHOOL"+schoolName+" MAC="+s+" AGE="+studentAge);
-//                params.put("mac","0CF3EE09392B");
-////                params.put("mac",s);
-////                params.put("mac",s);
-////                params.put("mac",s);
-////                params.put("mac",s);
-//                return params;
-//            }
-//
-//        };
-
-//        RequestQueue requestQueue = Volley.newRequestQueue(this);
-//        requestQueue.add(stringRequest);
-
-
-
-    //We are calling this method to check the permission status
-    private boolean isReadStorageAllowed() {
-        //Getting the permission status
-        int result = ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION);
-        int result1 = ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION);
-        int result2 = ContextCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH);
-        int result3 = ContextCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_ADMIN);
-
-        //If permission is granted returning true
-        if (result == PackageManager.PERMISSION_GRANTED && result1 == PackageManager.PERMISSION_GRANTED && result2 == PackageManager.PERMISSION_GRANTED && result3 == PackageManager.PERMISSION_GRANTED)
-            return true;
-
-        //If permission is not granted returning false
-        return false;
-    }
-
-    //Requesting permission
-    private void requestStoragePermission() {
-
-        if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.ACCESS_COARSE_LOCATION)) {
-            //If the user has denied the permission previously your code will come to this block
-            //Here you can explain why you need this permission
-            //Explain here why you need this permission
-        }
-
-        //And finally ask for the permission
-        ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.BLUETOOTH, Manifest.permission.BLUETOOTH}, STORAGE_PERMISSION_CODE);
-    }
-
-    //This method will be called when the user will tap on allow or deny
-    @Override
-    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
-
-        //Checking the request code of our request
-        if (requestCode == STORAGE_PERMISSION_CODE) {
-
-            //If permission is granted
-            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED && grantResults[1] == PackageManager.PERMISSION_GRANTED && grantResults[2] == PackageManager.PERMISSION_GRANTED && grantResults[3] == PackageManager.PERMISSION_GRANTED) {
-
-                //Displaying a toast
-                Toast.makeText(this, "Permission granted now you can read the storage", Toast.LENGTH_LONG).show();
-            } else {
-                //Displaying another toast if permission is not granted
-                Toast.makeText(this, "Oops you just denied the permission", Toast.LENGTH_LONG).show();
-            }
-        }
-    }
-
-
-
-//    private void startBeaconService() {
-//
-//
-//    }
-
-//    private void register_student() {
-//
-//        String studentName = student_name.getText().toString().trim();
-//        String schoolName = student_school.getText().toString().trim();
-//        String studentAge = student_age.getText().toString().trim();
-//        String studentStandard = student_standard.getText().toString().trim();
-//        String studentMacAdd = student_beaconMac.getText().toString().trim();
-//        Intent intent1 = getIntent();
-//        studentMacIdFromIntent = intent1.getStringExtra("MacID");
-//
-//        if (studentName.equals(null) || schoolName.equals(null) || studentMacIdFromIntent.equals(null) || studentAge.equals(null) || studentStandard.equals(null) ||
-//                studentName.equals("") || schoolName.equals("") || studentAge.equals("") || studentMacIdFromIntent.equals("") || studentStandard.equals("")) {
-//
-//            Toast.makeText(getApplicationContext(), "Fill All the fields", Toast.LENGTH_SHORT).show();
-//
-//        } else if(getIntent().getStringExtra("Edit-Registaration").equals("TRUE")) {
-//
-//           boolean updateBeacon =  databaseHelper.updateBeaconData(studentName,schoolName
-//                   ,studentMacAdd,studentAge,studentStandard);
-//
-//            if(updateBeacon){
-//                startActivity(new Intent(getApplicationContext(),Home_Beacon.class));
-//            }
-//
-//
-//        }else  {
-//
-//            Toast.makeText(getApplicationContext(), "Succefully Registered", Toast.LENGTH_SHORT).show();
-//
-//            Intent intent = new Intent(this, MapsActivity.class);
-//            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-//            startActivity(intent);
-//        }
-//    }
-
-    public void Server() {
-
-        final String studentName = student_name.getText().toString().trim();
-        final String schoolName = student_school.getText().toString().trim();
-        final String studentAge = student_age.getText().toString().trim();
-        final String studentStandard = student_standard.getText().toString().trim();
-        final String student_beaconValue = student_beaconMac.getText().toString().trim();
-
-        String editIntent = "NIL";
-        try {
-            if (getIntent().getStringExtra("Edit-Registaration").equals("TRUE"))
-                editIntent = "true";
-        } catch (NullPointerException e) {
-            e.printStackTrace();
-        }
-
-        StudentName = studentName;
-        SchooltName = schoolName;
-        mac1 = student_beaconValue;
-        StudentAge = studentAge;
-        StudentStandard = studentStandard;
-
-        if (studentName.equals("") || schoolName.equals("") || studentAge.equals("")
-                || student_beaconValue.equals("") || studentStandard.equals("")) {
-
-            Toast.makeText(getApplicationContext(), "Fill All the fields", Toast.LENGTH_SHORT).show();
-
-        } else {
-            if (editIntent.equals("true")) {
-
-                String macFromDb = "NIL";
-                try{
-                    String arr[] = databaseHelper.getAllBeaconData();
-                    macFromDb = arr[0];
-                }catch (NullPointerException e){
-                    e.printStackTrace();
-                    macFromDb = "NIL";
-                }
-
-                try {
-
-                    if(macFromDb.equals("NIL")){
-                        boolean isInserted = databaseHelper.insertBeaconData(
-                                studentName,
-                                schoolName,
-                                student_beaconValue,
-                                studentAge,
-                                studentStandard);
-                        if (isInserted) {
-                            Toast.makeText(getApplicationContext(), "Succefully Registered", Toast.LENGTH_SHORT).show();
-                            Intent myIntent = new Intent(this, HomeBeaconNavigationActivity.class);
-                            myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                            myIntent.putExtra("BeaconMACID",
-                                    "MACID=" + detectedMacId + "\n" +
-                                            "UUID=" + UUID + "\n" +
-                                            "Major=" + Major + "\n" +
-                                            "Minior=" + Minor);
-                            startActivity(myIntent);
-                        }
-
-                    }else if(macFromDb.equals(student_beaconValue)){
-                        boolean updateBeacon = databaseHelper.updateBeaconData(studentName, schoolName
-                                , student_beaconValue, studentAge, studentStandard);
-
-                        if (updateBeacon) {
-                            startActivity(new Intent(getApplicationContext(), HomeBeaconNavigationActivity.class));
-                        }
-                    }else {
-                        databaseHelper.deleteBeaconData();
-                        boolean isInserted = databaseHelper.insertBeaconData(
-                                studentName,
-                                schoolName,
-                                student_beaconValue,
-                                studentAge,
-                                studentStandard);
-                        if (isInserted) {
-                            Toast.makeText(getApplicationContext(), "Succefully Registered", Toast.LENGTH_SHORT).show();
-                            Intent myIntent = new Intent(this, HomeBeaconNavigationActivity.class);
-                           // myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                            finish();
-                            myIntent.putExtra("BeaconMACID",
-                                    "MACID=" + detectedMacId + "\n" +
-                                            "UUID=" + UUID + "\n" +
-                                            "Major=" + Major + "\n" +
-                                            "Minior=" + Minor);
-                            startActivity(myIntent);
-
-                        }
-                    }
-
-                }catch (NullPointerException e){
-                    e.printStackTrace();
-                }
-
-            } else {
-                boolean isInserted = databaseHelper.insertBeaconData(
-                        studentName,
-                        schoolName,
-                        student_beaconValue,
-                        studentAge,
-                        studentStandard);
-
-                if (isInserted) {
-                    Toast.makeText(getApplicationContext(), "Succefully Registered", Toast.LENGTH_SHORT).show();
-                    String bmac = detectedMacId;
-                    String buid = UUID;
-                    String bmajor = Major;
-                    String bminior = Minor;
-
-                    Intent myIntent = new Intent(this, HomeBeaconNavigationActivity.class);
-                    myIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                    myIntent.putExtra("BeaconMACID",
-                            "MACID=" + bmac + "\n" +
-                                    "UUID=" + buid + "\n" +
-                                    "Major=" + bmajor + "\n" +
-                                    "Minior=" + bminior);
-                    startActivity(myIntent);
-
-                } else {
-                    Toast.makeText(getApplicationContext(), "Something went wrong", Toast.LENGTH_SHORT).show();
-                }
-            }
-        }
-
-
-
-    }
-
-
-
-
-
-
-//
-//    @Override
-//    public void onBackPressed() {
-//        //super.onBackPressed();
-//        Intent intent = new Intent(getApplicationContext(), HomeBeaconNavigationActivity.class);
-//        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
-//        startActivity(intent);
-//
-//        finish();
-//        System.exit(1);
-//
-//    }
-
-
-    @Override
-    public void onBackPressed(){
-
-        startActivity(new Intent(getApplicationContext(), HomeBeaconNavigationActivity.class));
-        finish();
-        System.exit(1);
-
-    }
-
-
-
-
-}
-
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BaseFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BaseFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BaseFragment.java	(date 1501671703000)
@@ -1,86 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.view.View;
-import android.widget.TextView;
-
-import com.ellipsonic.www.student_tracking.BuildConfig;
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-
-
-/**
- * Created by vitas on 8/12/15.
- */
-public class BaseFragment extends Fragment {
-
-    protected boolean mNeedFab;
-
-    protected boolean isDebug() {
-        return BuildConfig.DEBUG;
-    }
-
-    @Override
-    public void onActivityCreated(Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        if (getActivity() instanceof NewMainNavigationActivity) {
-          //  ((NewMainNavigationActivity) getActivity()).swappingFloatingIcon();
-        }
-    }
-
-    @Override
-    public void onStart() {
-        super.onStart();
-        if (getActivity() instanceof NewMainNavigationActivity) {
-            if (mNeedFab) {
-                //((NewMainNavigationActivity) getActivity()).swappingFabUp();
-            } else {
-                //((NewMainNavigationActivity) getActivity()).hideFab();
-            }
-        }
-    }
-
-    @Override
-    public void onStop() {
-        super.onStop();
-        if (getActivity() instanceof NewMainNavigationActivity && mNeedFab) {
-           // ((NewMainNavigationActivity) getActivity()).swappingFabAway();
-        }
-    }
-
-    public void setNeedFab(boolean mNeedFab) {
-        this.mNeedFab = mNeedFab;
-    }
-
-    public class EmptyView {
-
-        @Bind(R.id.empty_text)
-        TextView text;
-
-        public EmptyView(View view) {
-            ButterKnife.bind(this, view);
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_welcome_page.xml
===================================================================
--- app/src/main/res/layout/activity_welcome_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_welcome_page.xml	(date 1501671703000)
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/drawer_layout"
-    android:background="@drawable/appblue"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:openDrawer="start">
-
-    <include
-        layout="@layout/app_bar_welcome_page"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_welcome_page"
-        app:menu="@menu/activity_welcome_page_drawer" />
-
-</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/layout/mainactivity.xml
===================================================================
--- app/src/main/res/layout/mainactivity.xml	(date 1501671703000)
+++ app/src/main/res/layout/mainactivity.xml	(date 1501671703000)
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/activity_get_started"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MainActivity"
-    android:background="@drawable/background">
-
-    <Button
-        android:text="@string/btn_getstarted"
-        android:layout_width="match_parent"
-        android:layout_height="50dp"
-        android:layout_alignParentBottom="true"
-        android:layout_centerHorizontal="true"
-        android:id="@+id/get_started"
-        android:background="@android:color/white" />
-</RelativeLayout>
Index: app/src/main/res/xml/preferences_beacon_info.xml
===================================================================
--- app/src/main/res/xml/preferences_beacon_info.xml	(date 1501671703000)
+++ app/src/main/res/xml/preferences_beacon_info.xml	(date 1501671703000)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:key="key_details">
-
-    <Preference
-        android:title="@string/pref_bd_type"
-        android:key="bd_type_info"/>
-    <Preference
-        android:title="@string/pref_bd_uuid"
-        android:key="bd_uuid_info"/>
-    <Preference
-        android:title="@string/pref_bd_bluetooth_name"
-        android:key="bd_bluetooth_name_info"/>
-    <Preference
-        android:title="@string/pref_bd_txpower"
-        android:key="bd_txpower_info"/>
-    <Preference
-        android:title="@string/pref_bd_rssi"
-        android:key="bd_rssi_info"/>
-    <Preference
-        android:title="@string/pref_bd_distance"
-        android:key="bd_distance_info"/>
-    <Preference
-        android:title="@string/pref_bd_major"
-        android:key="bd_major_info"/>
-    <Preference
-        android:title="@string/pref_bd_minor"
-        android:key="bd_minor_info"/>
-</PreferenceScreen>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/Student_Tracking.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/Student_Tracking.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/Student_Tracking.java	(date 1501671703000)
@@ -1,273 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking;
-
-import android.app.Application;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Parcelable;
-import android.os.RemoteException;
-import android.support.annotation.NonNull;
-import android.util.Log;
-
-import com.ellipsonic.www.student_tracking.data.DataManager;
-import com.ellipsonic.www.student_tracking.injection.component.ApplicationComponent;
-import com.ellipsonic.www.student_tracking.injection.component.DaggerApplicationComponent;
-import com.ellipsonic.www.student_tracking.injection.module.ApplicationModule;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.ActionRegion;
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.model.RegionName;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-import com.ellipsonic.www.student_tracking.util.BeaconUtil;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import com.ellipsonic.www.student_tracking.util.PreferencesUtil;
-
-import org.altbeacon.beacon.Beacon;
-import org.altbeacon.beacon.BeaconManager;
-import org.altbeacon.beacon.BeaconParser;
-import org.altbeacon.beacon.RangeNotifier;
-import org.altbeacon.beacon.Region;
-import org.altbeacon.beacon.powersave.BackgroundPowerSaver;
-import org.altbeacon.beacon.startup.BootstrapNotifier;
-import org.altbeacon.beacon.startup.RegionBootstrap;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-
-
-/**
- * Created by vitas on 18/10/15.
- */
-public class Student_Tracking extends Application implements BootstrapNotifier, RangeNotifier {
-
-    ApplicationComponent applicationComponent;
-    List<Region> mRegions = new ArrayList<>();
-    List<TrackedBeacon> mBeacons = new ArrayList<>();
-    private BackgroundPowerSaver mBackgroundPowerSaver;
-    private BeaconManager mBeaconManager;
-    private DataManager mDataManager;
-    private RegionBootstrap mRegionBootstrap;
-
-    public static Student_Tracking from(@NonNull Context context) {
-        return (Student_Tracking) context.getApplicationContext();
-    }
-
-    public ApplicationComponent getComponent() {
-        return applicationComponent;
-    }
-
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-
-        applicationComponent = DaggerApplicationComponent.builder()
-                .applicationModule(new ApplicationModule(this))
-                .build();
-
-        mBeaconManager = Student_Tracking.from(this).getComponent().beaconManager();
-        mDataManager = Student_Tracking.from(this).getComponent().dataManager();
-
-        initBeaconManager();
-        enableBackgroundScan(PreferencesUtil.isBackgroundScan(this));
-
-    }
-
-    private void initBeaconManager() {
-        mBeaconManager.setBackgroundMode(PreferencesUtil.isBackgroundScan(this));
-
-        if (PreferencesUtil.isEddystoneLayoutUID(this)) {
-            mBeaconManager.getBeaconParsers().add(new BeaconParser().setBeaconLayout(BeaconParser.EDDYSTONE_UID_LAYOUT));
-        }
-        if (PreferencesUtil.isEddystoneLayoutURL(this)) {
-            mBeaconManager.getBeaconParsers().add(new BeaconParser().setBeaconLayout(BeaconParser.EDDYSTONE_URL_LAYOUT));
-        }
-        mBeaconManager.getBeaconParsers().add(new BeaconParser().setBeaconLayout(BeaconParser.ALTBEACON_LAYOUT));
-
-        //konkakt?
-        mBeaconManager.getBeaconParsers().add(new BeaconParser().setBeaconLayout("m:2-3=0215,i:4-19,i:20-21,i:22-23,p:24-24,d:25-25"));
-        mBeaconManager.getBeaconParsers().add(new BeaconParser().setBeaconLayout("m:2-3=0215,i:4-19,i:20-21,i:22-23,p:24-24"));
-        mBeaconManager.getBeaconParsers().add(new BeaconParser().setBeaconLayout("m:0-3=4c000215,i:4-19,i:20-21,i:22-23,p:24-24"));
-
-        mBeaconManager.setBackgroundBetweenScanPeriod(PreferencesUtil.getBackgroundScanInterval(this));
-
-        mBeaconManager.setBackgroundScanPeriod(10000L);          // default is 10000L
-        mBeaconManager.setForegroundBetweenScanPeriod(0L);      // default is 0L
-        mBeaconManager.setForegroundScanPeriod(1100L);          // Default is 1100L
-
-        //mBeaconManager.setMaxTrackingAge(10000);
-        //mBeaconManager.setRegionExitPeriod(12000L);
-
-        /*
-        RangedBeacon.setMaxTrackingAge() only controls the period of time ranged beacons will continue to be
-        returned after the scanning service stops detecting them.
-        It has no affect on when monitored regions trigger exits. It is set to 5 seconds by default.
-
-        Monitored regions are exited whenever a scan period finishes and the BeaconManager.setRegionExitPeriod()
-        has passed since the last detection.
-        By default, this is 10 seconds, but you can customize it.
-
-        Using the defaults, the library will stop sending ranging updates five seconds after a beacon was last seen,
-         and then send a region exit 10 seconds after it was last seen.
-        You are welcome to change these two settings to meet your needs, but the BeaconManager.setRegionExitPeriod()
-        should generally be the same or longer than the RangedBeacon.setMaxTrackingAge().
-         */
-
-        mBackgroundPowerSaver = new BackgroundPowerSaver(this);
-        mBeaconManager.addRangeNotifier(this);
-
-        try {
-            if (mBeaconManager.isAnyConsumerBound()) {
-                mBeaconManager.updateScanPeriods();
-            }
-        } catch (RemoteException e) {
-            Log.e(Constants.TAG, "update scan periods error", e);
-        }
-    }
-
-    public void enableBackgroundScan(boolean enable) {
-        if (enable) {
-            Log.d(Constants.TAG, "Enable Background Scan");
-            enableRegions();
-            loadTrackedBeacons();
-        } else {
-            Log.d(Constants.TAG, "Disable Background Scan");
-            disableRegions();
-        }
-    }
-
-    private void disableRegions() {
-        if (mRegionBootstrap != null) {
-            mRegionBootstrap.disable();
-        }
-    }
-
-    /**
-     * consider to use as a cache of beacons
-     */
-    private void loadTrackedBeacons() {
-        mBeacons = mDataManager.getAllBeacons();
-    }
-
-    private void enableRegions() {
-        mRegions = getAllEnabledRegions();
-        if (mRegions.size() > 0) {
-            mRegionBootstrap = new RegionBootstrap(this, mRegions);
-        } else {
-            Log.d(Constants.TAG, "Ignore Background scan, no regions");
-        }
-    }
-
-    public List<Region> getAllEnabledRegions() {
-        List<Region> regions = new ArrayList<>();
-        List<ActionBeacon> actions = mDataManager.getAllEnabledBeaconActions();
-        for (ActionBeacon action : actions) {
-            regions.add(ActionRegion.parseRegion(action));
-        }
-        return regions;
-    }
-
-    @Override
-    public void didEnterRegion(Region region) {
-        RegionName regName = RegionName.parseString(region.getUniqueId());
-
-        if (regName.isApplicationRegion()) {
-            if (regName.getEventType() == ActionBeacon.EventType.EVENT_NEAR_YOU) {
-                try {
-                    mBeaconManager.startRangingBeaconsInRegion(region);
-                } catch (RemoteException e) {
-                    Log.e(Constants.TAG, "Error start ranging region: " + regName, e);
-                }
-            }
-            if (regName.getEventType() == ActionBeacon.EventType.EVENT_ENTERS_REGION) {
-                Intent intent = new Intent();
-                intent.setAction(Constants.NOTIFY_BEACON_ENTERS_REGION);
-                intent.putExtra("REGION", (Parcelable)region);
-                getApplicationContext().sendOrderedBroadcast(intent, null);
-            }
-        }
-    }
-
-    @Override
-    public void didExitRegion(Region region) {
-
-        RegionName regName = RegionName.parseString(region.getUniqueId());
-
-        if (regName.isApplicationRegion()) {
-            if (regName.getEventType() == ActionBeacon.EventType.EVENT_NEAR_YOU) {
-                try {
-                    mBeaconManager.stopRangingBeaconsInRegion(region);
-                    // set "far" proximity
-                    mDataManager.updateBeaconDistance(regName.getBeaconId(), 99);
-                } catch (RemoteException e) {
-                    Log.e(Constants.TAG, "Error stop ranging region: " + regName, e);
-                }
-            }
-            if (regName.getEventType() == ActionBeacon.EventType.EVENT_LEAVES_REGION) {
-                Intent intent = new Intent();
-                intent.setAction(Constants.NOTIFY_BEACON_LEAVES_REGION);
-                intent.putExtra("REGION", (Parcelable) region);
-                getApplicationContext().sendOrderedBroadcast(intent, null);
-            }
-        }
-    }
-
-    @Override
-    public void didDetermineStateForRegion(int i, Region region) {
-        Log.d(Constants.TAG, "Region State  " + i + " region " + region);
-    }
-
-    @Override
-    public void didRangeBeaconsInRegion(Collection<Beacon> beacons, Region region) {
-        if (beacons != null && beacons.size() > 0 && region != null) {
-            RegionName regName = RegionName.parseString(region.getUniqueId());
-            if (regName.isApplicationRegion()) {
-                if (regName.getEventType() == ActionBeacon.EventType.EVENT_NEAR_YOU) {
-                    Iterator<Beacon> iterator = beacons.iterator();
-                    while (iterator.hasNext()) {
-                        Beacon beacon = iterator.next();
-                        TrackedBeacon tracked = mDataManager.getBeacon(regName.getBeaconId());
-                        mDataManager.updateBeaconDistance(regName.getBeaconId(), beacon.getDistance());
-                        if (tracked != null && BeaconUtil.isInProximity(IManagedBeacon.ProximityType.FAR, tracked.getDistance())) {
-                            if (BeaconUtil.isInProximity(IManagedBeacon.ProximityType.NEAR, beacon.getDistance())
-                                    || BeaconUtil.isInProximity(IManagedBeacon.ProximityType.IMMEDIATE, beacon.getDistance())) {
-
-                                Intent intent = new Intent();
-                                intent.setAction(Constants.NOTIFY_BEACON_NEAR_YOU_REGION);
-                                intent.putExtra("REGION", (Parcelable)region);
-                                getApplicationContext().sendOrderedBroadcast(intent, null);
-                            }
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    @Override
-    public void onLowMemory() {
-        super.onLowMemory();
-        enableBackgroundScan(false);
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/SilentOnAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/SilentOnAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/SilentOnAction.java	(date 1501671703000)
@@ -1,56 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-import android.content.Context;
-import android.media.AudioManager;
-
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.util.PreferencesUtil;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class SilentOnAction extends NoneAction {
-
-    protected int mRingerMode;
-
-    public SilentOnAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        final AudioManager audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
-        if (audioManager.getRingerMode() == AudioManager.RINGER_MODE_NORMAL) {
-            audioManager.setRingerMode(AudioManager.RINGER_MODE_SILENT);
-            mRingerMode = AudioManager.RINGER_MODE_NORMAL;
-        } else if (audioManager.getRingerMode() == AudioManager.RINGER_MODE_VIBRATE) {
-            audioManager.setMode(AudioManager.RINGER_MODE_SILENT);
-            mRingerMode = AudioManager.RINGER_MODE_VIBRATE;
-        }
-        PreferencesUtil.setSilentModeProfile(context, mRingerMode);
-        audioManager.setRingerMode(AudioManager.RINGER_MODE_SILENT);
-        return super.execute(context);
-    }
-
-    @Override
-    public String toString() {
-        return "SilentOnAction, param: " + param;
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MainActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MainActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/MainActivity.java	(date 1501671703000)
@@ -1,60 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.support.v4.view.GravityCompat;
-import android.support.v7.app.AlertDialog;
-import android.support.v7.app.AppCompatActivity;
-import android.view.View;
-import android.widget.Button;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.R;
-
-public class MainActivity extends AppCompatActivity implements View.OnClickListener {
-
-    //https://developers.google.com/identity/sign-in/android/start-integrating
-
-
-    Button getStarted;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.mainactivity);
-
-        getStarted = (Button)findViewById(R.id.get_started);
-        getStarted.setOnClickListener(this);
-    }
-
-
-
-
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()){
-            case R.id.get_started:
-                Intent intent = new Intent(getApplicationContext(), Login.class);
-                startActivity(intent);
-                break;
-        }
-
-    }
-
-
-
-
-    @Override
-    public void onBackPressed() {
-
-
-        moveTaskToBack(true);
-        android.os.Process.killProcess(android.os.Process.myPid());
-        System.exit(1);
-    }
-
-
-}
Index: app/src/main/res/drawable-v21/touchable_background_white.xml
===================================================================
--- app/src/main/res/drawable-v21/touchable_background_white.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/touchable_background_white.xml	(date 1501671703000)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ripple xmlns:android="http://schemas.android.com/apk/res/android"
-    android:color="@color/line_grey">
-    <item android:drawable="@color/white" />
-</ripple>
\ No newline at end of file
Index: app/src/main/res/values/drawables.xml
===================================================================
--- app/src/main/res/values/drawables.xml	(date 1501671703000)
+++ app/src/main/res/values/drawables.xml	(date 1501671703000)
@@ -1,8 +0,0 @@
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-    <item name="ic_menu_camera" type="drawable">@android:drawable/ic_menu_camera</item>
-    <item name="ic_menu_gallery" type="drawable">@android:drawable/ic_menu_gallery</item>
-    <item name="ic_menu_slideshow" type="drawable">@android:drawable/ic_menu_slideshow</item>
-    <item name="ic_menu_manage" type="drawable">@android:drawable/ic_menu_manage</item>
-    <item name="ic_menu_share" type="drawable">@android:drawable/ic_menu_share</item>
-    <item name="ic_menu_send" type="drawable">@android:drawable/ic_menu_send</item>
-</resources>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/DataMainActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/DataMainActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/DataMainActivity.java	(date 1501671703000)
@@ -1,15 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.support.v7.app.AppCompatActivity;
-import android.os.Bundle;
-
-import com.ellipsonic.www.student_tracking.R;
-
-public class DataMainActivity extends AppCompatActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_data_main);
-    }
-}
Index: app/src/main/res/menu/activity_main_navigation_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_main_navigation_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_main_navigation_drawer.xml	(date 1501671703000)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group
-        android:id="@+id/menu_top"
-        android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_scan_around"
-            android:icon="@drawable/ic_tap_and_play_black_24dp"
-            android:title="@string/action_scan_around" />
-
-    </group>
-
-</menu>
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_menu_share.xml
===================================================================
--- app/src/main/res/drawable-hdpi/ic_menu_share.xml	(date 1501671703000)
+++ app/src/main/res/drawable-hdpi/ic_menu_share.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92 1.61,0 2.92,-1.31 2.92,-2.92s-1.31,-2.92 -2.92,-2.92z" />
-</vector>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/DetectedBeacon.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/DetectedBeacon.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/DetectedBeacon.java	(date 1501671703000)
@@ -1,220 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import android.content.Intent;
-import android.os.Parcel;
-import android.os.Parcelable;
-
-import com.ellipsonic.www.student_tracking.data.NewDbStoreService;
-import com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity;
-import com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity;
-import com.ellipsonic.www.student_tracking.util.BeaconUtil;
-
-import org.altbeacon.beacon.Beacon;
-import org.altbeacon.beacon.Identifier;
-import org.altbeacon.beacon.utils.UrlBeaconUrlCompressor;
-
-/**
- * Created by vitas on 09/12/2015.
- */
-public class DetectedBeacon extends Beacon implements IManagedBeacon {
-
-    public static final int TYPE_EDDYSTONE_TLM = 32;
-    public static final int TYPE_EDDYSTONE_UID = 0;
-    public static final int TYPE_EDDYSTONE_URL = 16;
-    public static final int TYPE_IBEACON_ALTBEACON = 1;
-    NewMainNavigationActivity newMainNavigationActivity = new NewMainNavigationActivity();
-
-    public static String detectedMacId;
-    public static String Major;
-    public static String Minor;
-    public static String UUID;
-    //NewDbStoreService newDbStoreService;
-
-
-    protected long mLastSeen;
-
-    public static final Parcelable.Creator<DetectedBeacon> CREATOR =
-            new Parcelable.Creator<DetectedBeacon>() {
-                @Override
-                public DetectedBeacon createFromParcel(Parcel in) {
-                    Beacon b = Beacon.CREATOR.createFromParcel(in);
-                    DetectedBeacon dbeacon = new DetectedBeacon(b);
-                    dbeacon.mLastSeen = in.readLong();
-                    return dbeacon;
-                }
-
-                @Override
-                public DetectedBeacon[] newArray(int size) {
-
-                    return new DetectedBeacon[size];
-                }
-            };
-
-    public DetectedBeacon(Beacon paramBeacon) {
-        super(paramBeacon);
-    }
-
-    @Override
-    public void writeToParcel(Parcel parcel, int flags) {
-        super.writeToParcel(parcel, flags);
-        parcel.writeLong(mLastSeen);
-    }
-
-
-    @Override
-    public long getTimeLastSeen() {
-
-        return this.mLastSeen;
-    }
-
-    public void setTimeLastSeen(long lastSeen) {
-        this.mLastSeen = lastSeen;
-    }
-
-    @Override
-    public boolean equalTo(IManagedBeacon target) {
-        return getId().equals(target);
-    }
-
-    @Override
-    public boolean isEddyStoneTLM() {
-        return getBeaconTypeCode() == TYPE_EDDYSTONE_TLM;
-    }
-
-    @Override
-    public boolean isEddyStoneUID() {
-        return getBeaconTypeCode() == TYPE_EDDYSTONE_UID;
-    }
-
-    @Override
-    public boolean isEddyStoneURL() {
-        return getBeaconTypeCode() == TYPE_EDDYSTONE_URL;
-    }
-
-    @Override
-    public boolean isEddystone() {
-        return (getBeaconTypeCode() == TYPE_EDDYSTONE_UID)
-                || (getBeaconTypeCode() == TYPE_EDDYSTONE_URL) || (getBeaconTypeCode() == TYPE_EDDYSTONE_TLM);
-    }
-
-    @Override
-    public BeaconType getBeaconType() {
-        if (isEddystone()) {
-            switch (getBeaconTypeCode()) {
-                case TYPE_IBEACON_ALTBEACON:
-                    return BeaconType.ALTBEACON;
-                case TYPE_EDDYSTONE_TLM:
-                    return BeaconType.EDDYSTONE_TLM;
-                case TYPE_EDDYSTONE_UID:
-                    return BeaconType.EDDYSTONE_UID;
-                case TYPE_EDDYSTONE_URL:
-                    return BeaconType.EDDYSTONE_URL;
-                default:
-                    return BeaconType.EDDYSTONE;
-            }
-        }
-        return BeaconType.IBEACON;
-    }
-
-    public Identifier getId2() {
-        if (isEddyStoneURL()) {
-            return Identifier.parse("");
-        }
-        return super.getId2();
-    }
-
-    public Identifier getId3() {
-        if (isEddystone()) {
-            return Identifier.parse("");
-        }
-        return super.getId3();
-    }
-
-    @Override
-    public String getId() {
-       String a=getBluetoothAddress();
-        detectedMacId = a.replace(":", "");
-        String b=getUUID();
-        UUID=b.replace("-", "");
-        Major=getMajor();
-        Minor=getMinor();
-
-
- //      newMainNavigationActivity.call(s);
-//        Intent myIntent = new Intent(this, RegisterActivity.class);
-//        myIntent.putExtra("MacID", s);
-//        startActivity(myIntent);
-
-        return getUUID() + ";" + getMajor() + ";" + getMinor() + ";" + getBluetoothAddress();
-    }
-
-    @Override
-    public int getType()
-    {
-
-        int az=getBeaconTypeCode();
-        return getBeaconTypeCode();
-    }
-
-    @Override
-    public String getUUID() {
-        return getId1().toString();
-    }
-
-
-    @Override
-    public String getMajor() {
-        if (isEddystone()) {
-            return getId2().toHexString();
-        }
-        return getId2().toString();
-    }
-
-    @Override
-    public String getMinor() {
-String all=getId3().toString();
-
-        String aaaa=all;
-        return getId3().toString();
-    }
-
-    @Override
-    public String getEddystoneURL() {
-        String url=UrlBeaconUrlCompressor.uncompress(getId1().toByteArray());
-        return UrlBeaconUrlCompressor.uncompress(getId1().toByteArray());
-    }
-
-    @Override
-    public String toString() {
-        if (isEddystone()) {
-            if (isEddyStoneUID()) {
-                return "Namespace: " + getUUID() + ", Instance: " + getMajor() + "\n" + "RSSI: " + getRssi() + " dBm, TX: " + getTxPower() + " dBm\n" + "Distance: " + BeaconUtil.getRoundedDistance(getDistance()) + "m";
-            }
-            if (isEddyStoneURL()) {
-                return "URL: " + getEddystoneURL() + "\n" + "RSSI: " + getRssi() + " dBm, TX: " + getTxPower() + " dBm\n" + "Distance: " + BeaconUtil.getRoundedDistance(getDistance()) + "m";
-            }
-            return "UUID: " + getUUID() + ", Major: " + getMajor() + ", Minor: " + getMinor() + "\n" + "RSSI: " + getRssi() + " dBm, TX: " + getTxPower() + " dBm\n" + "Distance: " + BeaconUtil.getRoundedDistance(getDistance()) + "m";
-        }
-
-
-        return "UUID: " + getUUID() + ", Major: " + getMajor() + ", Minor: " + getMinor() + "\n" + "RSSI: " + getRssi() + " dBm, TX: " + getTxPower() + " dBm\n" + "Distance: " + BeaconUtil.getRoundedDistance(getDistance()) + "m";
-    }
-}
Index: app/src/main/res/drawable/touchable_background_white.xml
===================================================================
--- app/src/main/res/drawable/touchable_background_white.xml	(date 1501671703000)
+++ app/src/main/res/drawable/touchable_background_white.xml	(date 1501671703000)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@color/super_light_grey" android:state_pressed="true" />
-    <item android:drawable="@color/super_light_grey" android:state_focused="true" />
-    <item android:drawable="@color/white" />
-</selector>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/injection/component/DataComponent.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/injection/component/DataComponent.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/injection/component/DataComponent.java	(date 1501671703000)
@@ -1,33 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.injection.component;
-
-import com.ellipsonic.www.student_tracking.data.DataManager;
-import com.ellipsonic.www.student_tracking.injection.UserScope;
-import com.ellipsonic.www.student_tracking.injection.module.DataModule;
-
-import dagger.Component;
-
-@UserScope
-@Component(dependencies = ApplicationComponent.class, modules = {DataModule.class})
-public interface DataComponent {
-
-    void inject(DataManager dataManager);
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/ContextMenuRecyclerView.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/ContextMenuRecyclerView.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/ContextMenuRecyclerView.java	(date 1501671703000)
@@ -1,94 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.view;
-
-import android.content.Context;
-import android.support.v7.widget.RecyclerView;
-import android.util.AttributeSet;
-import android.view.ContextMenu;
-
-/**
- * A RecycleView which binds Extra context menu information and overrides {@link
- * ContextMenuRecyclerView#getContextMenuInfo()} to provide the ContextMenuInfo object instead of
- * default null ContextMenuInfo in {@link android.view.View#getContextMenuInfo()}
- */
-public class ContextMenuRecyclerView extends RecyclerView {
-
-    private ContextMenu.ContextMenuInfo mContextMenuInfo;
-
-    public ContextMenuRecyclerView(Context context) {
-        super(context);
-    }
-
-    public ContextMenuRecyclerView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public ContextMenuRecyclerView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-    }
-
-    @Override
-    protected ContextMenu.ContextMenuInfo getContextMenuInfo() {
-        return mContextMenuInfo;
-    }
-
-    /**
-     * Used to initialize before creating context menu and Bring up the context menu for this view.
-     *
-     * @param position for ContextMenuInfo
-     */
-    public void openContextMenu(int position) {
-        if (position >= 0) {
-            final long childId = getAdapter().getItemId(position);
-            mContextMenuInfo = createContextMenuInfo(position, childId);
-        }
-        showContextMenu();
-    }
-
-
-    ContextMenu.ContextMenuInfo createContextMenuInfo(int position, long id) {
-        return new RecyclerContextMenuInfo(position, id);
-    }
-
-
-    /**
-     * Extra menu information provided to the {@link android.view.View
-     * .OnCreateContextMenuListener#onCreateContextMenu(android.view.ContextMenu, View,
-     * ContextMenuInfo) } callback when a context menu is brought up for this RecycleView.
-     */
-    public static class RecyclerContextMenuInfo implements ContextMenu.ContextMenuInfo {
-
-        /**
-         * The position in the adapter for which the context menu is being displayed.
-         */
-        public int position;
-
-        /**
-         * The row id of the item for which the context menu is being displayed.
-         */
-        public long id;
-
-        public RecyclerContextMenuInfo(int position, long id) {
-            this.position = position;
-            this.id = id;
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/util/NotificationBuilder.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/util/NotificationBuilder.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/util/NotificationBuilder.java	(date 1501671703000)
@@ -1,169 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.util;
-
-import android.app.Notification;
-import android.app.NotificationManager;
-import android.app.PendingIntent;
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.Color;
-import android.net.Uri;
-import android.os.Build;
-import android.support.v4.app.NotificationCompat;
-import android.support.v4.app.NotificationCompat.Builder;
-import android.support.v4.content.ContextCompat;
-
-import com.ellipsonic.www.student_tracking.R;
-
-
-/**
- * Created by vitas on 24/10/15.
- */
-public class NotificationBuilder {
-
-    private Context mContext;
-    private Builder mBuilder;
-    private NotificationManager mNotificationManager;
-
-
-    public NotificationBuilder(Context mContext) {
-        this.mContext = mContext.getApplicationContext();
-    }
-
-    /**
-     * Creation of notification on operations completed
-     */
-    public NotificationBuilder createNotification(int smallIcon, String title, PendingIntent notifyIntent) {
-        mBuilder = new NotificationCompat.Builder(mContext).setSmallIcon(smallIcon).setContentTitle(title)
-                .setAutoCancel(true).setColor(ContextCompat.getColor(mContext, R.color.hn_orange));
-        if (notifyIntent != null) {
-            mBuilder.setContentIntent(notifyIntent);
-        }
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-            // setLargeIcon(R.drawable.logo_notification_lollipop);
-            //FIXME
-            setLargeIcon(R.mipmap.ic_launcher);
-        } else {
-            setLargeIcon(R.mipmap.ic_launcher);
-        }
-
-        return this;
-    }
-
-
-    public Builder getBuilder() {
-        return mBuilder;
-    }
-
-
-    public NotificationBuilder setLargeIcon(Bitmap largeIconBitmap) {
-        mBuilder.setLargeIcon(largeIconBitmap);
-        return this;
-    }
-
-
-    public NotificationBuilder setLargeIcon(int largeIconResource) {
-        Bitmap largeIconBitmap = BitmapFactory.decodeResource(mContext.getResources(), largeIconResource);
-        return setLargeIcon(largeIconBitmap);
-    }
-
-
-    public NotificationBuilder setRingtone(String ringtone) {
-        // Ringtone options
-        if (ringtone != null) {
-            mBuilder.setSound(Uri.parse(ringtone));
-        }
-        return this;
-    }
-
-
-    public NotificationBuilder setVibration() {
-        return setVibration(null);
-    }
-
-
-    public NotificationBuilder setVibration(long[] pattern) {
-        if (pattern == null || pattern.length == 0) {
-            pattern = new long[]{500, 500};
-        }
-        mBuilder.setVibrate(pattern);
-        return this;
-    }
-
-
-    public NotificationBuilder setLedActive() {
-        mBuilder.setLights(Color.BLUE, 1000, 1000);
-        return this;
-    }
-
-
-    public NotificationBuilder setIcon(int icon) {
-        mBuilder.setSmallIcon(icon);
-        return this;
-    }
-
-
-    public NotificationBuilder setMessage(String message) {
-        mBuilder.setContentText(message);
-        return this;
-    }
-
-    public NotificationBuilder setTicker(String ticker) {
-        this.mBuilder.setTicker(ticker);
-        return this;
-    }
-
-    public NotificationBuilder setIndeterminate() {
-        mBuilder.setProgress(0, 0, true);
-        return this;
-    }
-
-
-    public NotificationBuilder setOngoing() {
-        mBuilder.setOngoing(true);
-        return this;
-    }
-
-
-    public NotificationBuilder show() {
-        show(0);
-        return this;
-    }
-
-
-    public NotificationBuilder show(long id) {
-        if (mNotificationManager == null) {
-            mNotificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);
-        }
-        Notification mNotification = mBuilder.build();
-        if (mNotification.contentIntent == null) {
-            // Creates a dummy PendingIntent
-            mBuilder.setContentIntent(PendingIntent.getActivity(mContext, 0, new Intent(),
-                    PendingIntent.FLAG_UPDATE_CURRENT));
-        }
-        // Builds an anonymous Notification object from the builder, and passes it to the NotificationManager
-        mNotificationManager.notify((int) id, mBuilder.build());
-        return this;
-    }
-
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/IntentAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/IntentAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/IntentAction.java	(date 1501671703000)
@@ -1,52 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-
-import android.content.Context;
-import android.content.Intent;
-
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class IntentAction extends NoneAction {
-
-
-    public IntentAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        Intent newIntent = new Intent(param);
-        context.sendBroadcast(newIntent);
-        return super.execute(context);
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return true;
-    }
-
-    @Override
-    public String toString() {
-        return "IntentAction, action: " + param;
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_new_main_navigation.xml
===================================================================
--- app/src/main/res/layout/activity_new_main_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_new_main_navigation.xml	(date 1501671703000)
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/drawer_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    tools:openDrawer="start">
-
-    <FrameLayout
-        android:id="@+id/content_frame"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <include
-        layout="@layout/app_bar_main_navigation"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"/>
-
-    <!--app:menu="@menu/activity_main_navigation_drawer" />-->
-
-</android.support.v4.widget.DrawerLayout>
Index: app/src/main/res/layout/content_welcome_page.xml
===================================================================
--- app/src/main/res/layout/content_welcome_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_welcome_page.xml	(date 1501671703000)
@@ -1,92 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/content_welcome_page"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:showIn="@layout/app_bar_welcome_page">
-
-    <ImageView
-        android:layout_width="match_parent"
-        android:layout_height="100dp"
-        app:srcCompat="@drawable/background"
-        android:layout_alignParentTop="true"
-        android:layout_centerHorizontal="true"
-        android:layout_marginTop="11dp"
-        android:id="@+id/student_tracking_btn"
-        android:scaleType="fitXY" />
-    <TextView
-        android:id="@+id/textview"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentTop="true"
-        android:text="@string/track_student"
-        android:layout_alignTop="@+id/student_tracking_btn"
-        android:layout_marginTop="50dp"
-        android:layout_centerHorizontal="true"
-        android:textColor="@android:color/white" />
-
-    <ImageView
-        android:layout_width="match_parent"
-        app:srcCompat="@drawable/background"
-        android:layout_centerHorizontal="true"
-        android:layout_below="@id/student_tracking_btn"
-        android:layout_marginTop="14dp"
-        android:id="@+id/imageView7"
-        android:scaleType="fitXY"
-        android:layout_height="100dp" />
-    <TextView
-        android:id="@+id/textview2"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/smart_hw"
-        android:layout_alignTop="@+id/imageView7"
-        android:layout_marginTop="50dp"
-        android:layout_centerHorizontal="true"
-        android:textColor="@android:color/white" />
-    <ImageView
-        android:layout_width="match_parent"
-        app:srcCompat="@drawable/background"
-        android:layout_below="@+id/imageView7"
-        android:layout_centerHorizontal="true"
-        android:layout_marginTop="18dp"
-        android:id="@+id/imageView5"
-        android:scaleType="fitXY"
-        android:layout_height="100dp" />
-    <TextView
-        android:id="@+id/textview3"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/online_vid"
-        android:layout_alignTop="@+id/imageView5"
-        android:layout_marginTop="50dp"
-        android:layout_centerHorizontal="true"
-        android:textColor="@android:color/white" />
-    <ImageView
-        android:layout_width="match_parent"
-        app:srcCompat="@drawable/background"
-        android:layout_marginTop="13dp"
-        android:id="@+id/imageView4"
-        android:scaleType="fitXY"
-        android:layout_below="@+id/imageView5"
-        android:layout_alignParentLeft="true"
-        android:layout_alignParentStart="true"
-        android:layout_height="100dp" />
-
-    <TextView
-        android:id="@+id/textview4"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/student_anlys"
-        android:textColor="@android:color/white"
-        android:layout_alignBottom="@+id/imageView4"
-        android:layout_alignLeft="@+id/textview"
-        android:layout_alignStart="@+id/textview"
-        android:layout_marginBottom="32dp" />
-</RelativeLayout>
Index: app/src/main/res/menu/welcome_page.xml
===================================================================
--- app/src/main/res/menu/welcome_page.xml	(date 1501671703000)
+++ app/src/main/res/menu/welcome_page.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <item
-        android:id="@+id/action_settings"
-        android:orderInCategory="100"
-        android:title="@string/action_settings"
-        app:showAsAction="never" />
-</menu>
Index: app/src/main/res/layout/content_home__beacon.xml
===================================================================
--- app/src/main/res/layout/content_home__beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_home__beacon.xml	(date 1501671703000)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.Home_Beacon"
-    tools:showIn="@layout/app_bar_home__beacon">
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/res/layout/content_main_navigation.xml
===================================================================
--- app/src/main/res/layout/content_main_navigation.xml	(date 1501671703000)
+++ app/src/main/res/layout/content_main_navigation.xml	(date 1501671703000)
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    app:layout_behavior="@string/appbar_scrolling_view_behavior"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity"
-    tools:showIn="@layout/app_bar_main_navigation">
-
-</RelativeLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/NotificationAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/NotificationAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/NotificationAction.java	(date 1501671703000)
@@ -1,98 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import android.os.Parcel;
-import android.os.Parcelable;
-
-/**
- * Created by vitas on 31/12/15.
- */
-public class NotificationAction implements Parcelable {
-    public static final Creator<NotificationAction> CREATOR = new Creator<NotificationAction>() {
-        @Override
-        public NotificationAction createFromParcel(Parcel in) {
-            return new NotificationAction(in);
-        }
-
-        @Override
-        public NotificationAction[] newArray(int size) {
-            return new NotificationAction[size];
-        }
-    };
-    private boolean isEnabled;
-    private String message = "";
-    private String ringtone = "";
-    private boolean isVibrate;
-
-    public NotificationAction() {
-    }
-
-    protected NotificationAction(Parcel in) {
-        isEnabled = in.readByte() != 0;
-        message = in.readString();
-        ringtone = in.readString();
-        isVibrate = in.readByte() != 0;
-    }
-
-    public boolean isEnabled() {
-        return isEnabled;
-    }
-
-    public void setIsEnabled(boolean isEnabled) {
-        this.isEnabled = isEnabled;
-    }
-
-    public String getMessage() {
-        return message;
-    }
-
-    public void setMessage(String message) {
-        this.message = message;
-    }
-
-    public String getRingtone() {
-        return ringtone;
-    }
-
-    public void setRingtone(String ringtone) {
-        this.ringtone = ringtone;
-    }
-
-    public boolean isVibrate() {
-        return isVibrate;
-    }
-
-    public void setIsVibrate(boolean isVibrate) {
-        this.isVibrate = isVibrate;
-    }
-
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
-    @Override
-    public void writeToParcel(Parcel dest, int flags) {
-        dest.writeByte((byte) (isEnabled ? 1 : 0));
-        dest.writeString(message);
-        dest.writeString(ringtone);
-        dest.writeByte((byte) (isVibrate ? 1 : 0));
-    }
-}
Index: app/src/main/res/layout/activity_database_helper.xml
===================================================================
--- app/src/main/res/layout/activity_database_helper.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_database_helper.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.DatabaseHelper">
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/DetectedBeaconsFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/DetectedBeaconsFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/DetectedBeaconsFragment.java	(date 1501671703000)
@@ -1,249 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.os.CountDownTimer;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.Toolbar;
-import android.util.Log;
-import android.view.ContextMenu;
-import android.view.LayoutInflater;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.ViewStub;
-import android.widget.ProgressBar;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-import com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity;
-import com.ellipsonic.www.student_tracking.ui.adapter.BeaconAdapter;
-import com.ellipsonic.www.student_tracking.ui.adapter.DetectedBeaconAdapter;
-import com.ellipsonic.www.student_tracking.ui.view.ContextMenuRecyclerView;
-import com.ellipsonic.www.student_tracking.ui.view.DividerItemDecoration;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import com.ellipsonic.www.student_tracking.util.PreferencesUtil;
-
-import org.altbeacon.beacon.Beacon;
-
-import java.util.Collection;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-
-
-/**
- * Created by vitas on 9/11/15.
- */
-public class DetectedBeaconsFragment extends ScanFragment implements BeaconAdapter.OnBeaconLongClickListener {
-
-    //40 sec timeout for scanning
-    static final int SCAN_TIMEOUT = 10000;
-    protected CountDownTimer mTimer;
-    @Bind(R.id.recycler_detected_beacons)
-    ContextMenuRecyclerView mListBeacons;
-    @Bind(R.id.progress_indicator)
-    ProgressBar mProgressBar;
-    @Bind(R.id.empty_scan_view)
-    ViewStub mEmpty;
-    EmptyView mEmptyView;
-    @Bind(R.id.toolbar)
-    Toolbar mToolbar;
-    private DetectedBeaconAdapter mBeaconsAdapter;
-
-    public static DetectedBeaconsFragment newInstance() {
-        DetectedBeaconsFragment beaconsFragment = new DetectedBeaconsFragment();
-        return beaconsFragment;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mBeaconsAdapter = new DetectedBeaconAdapter(this);
-        mBeaconsAdapter.setOnBeaconLongClickListener(this);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View fragmentView = inflater.inflate(R.layout.fragment_scan_beacons, container, false);
-        ButterKnife.bind(this, fragmentView);
-
-        setupToolbar();
-        setupRecyclerView();
-        setupTimer();
-
-        return fragmentView;
-    }
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-        mTimer.cancel();
-        ButterKnife.unbind(this);
-    }
-
-    private void setupToolbar() {
-        ((AppCompatActivity) getActivity()).setSupportActionBar(mToolbar);
-        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setDisplayShowTitleEnabled(true);
-            actionBar.setTitle(R.string.title_fragment_detected_beacons);
-        }
-    }
-
-    private void setupRecyclerView() {
-        View viewFromEmpty = mEmpty.inflate();
-        mEmptyView = new EmptyView(viewFromEmpty);
-        mEmptyView.text.setText(getString(R.string.text_please_start_scan));
-
-        mListBeacons.setLayoutManager(new LinearLayoutManager(getActivity()));
-        mListBeacons.setHasFixedSize(true);
-        mListBeacons.addItemDecoration(new DividerItemDecoration(getActivity()));
-        mListBeacons.setAdapter(mBeaconsAdapter);
-
-        registerForContextMenu(mListBeacons);
-
-        mProgressBar.setVisibility(View.GONE);
-
-    }
-
-    private void setupTimer() {
-        mTimer = new CountDownTimer(SCAN_TIMEOUT, PreferencesUtil.getManualScanTimeout(getApplicationContext())) {
-            public void onFinish() {
-                stopScanTimeout();
-            }
-
-            public void onTick(long tick) {
-            }
-        };
-    }
-
-    private void stopScanTimeout() {
-        stopScan();
-        mEmptyView.text.setText(getString(R.string.text_scan_not_found));
-    }
-
-    private void emptyListSetup() {
-        if (mBeaconsAdapter.getItemCount() == 0) {
-            mEmpty.setVisibility(View.VISIBLE);
-            mEmptyView.text.setText(getString(R.string.text_please_start_scan));
-        } else {
-            mEmpty.setVisibility(View.GONE);
-        }
-    }
-
-    @Override
-    public void startScan() {
-        mProgressBar.setVisibility(View.VISIBLE);
-        mEmpty.setVisibility(View.GONE);
-        mBeaconsAdapter.removeAll();
-        mTimer.start();
-        super.startScan();
-    }
-
-    @Override
-    public void stopScan() {
-        mProgressBar.setVisibility(View.GONE);
-        super.stopScan();
-        emptyListSetup();
-    }
-
-    @Override
-    public void onCanScan() {
-        emptyListSetup();
-    }
-
-    @Override
-    public void updateBeaconList(final Collection<Beacon> beacons, final org.altbeacon.beacon.Region region) {
-        if (getActivity() != null) {
-            //update list, even nothing, we want update last seen time on detected beacons
-            getActivity().runOnUiThread(new Runnable() {
-                public void run() {
-                    if(getActivity() == null)
-                        return;
-
-                    mBeaconsAdapter.notifyDataSetChanged();
-                    Log.d(Constants.TAG, "called on region " + region.toString());
-                }
-            });
-        }
-    }
-
-    @Override
-    public void updateBeaconList(final Collection<Beacon> beacons) {
-        if (getActivity() != null) {
-            getActivity().runOnUiThread(new Runnable() {
-                public void run() {
-                    if(getActivity() == null)
-                        return;
-
-                    mBeaconsAdapter.insertBeacons(beacons);
-                    mBeaconsAdapter.sort(PreferencesUtil.getScanBeaconSort(getApplicationContext()));
-                    mTimer.cancel();
-                }
-            });
-        }
-    }
-
-
-    @Override
-    public void onBeaconLongClick(int position) {
-        mListBeacons.openContextMenu(position);
-    }
-
-    @Override
-    public void onCreateContextMenu(ContextMenu menu, View view, ContextMenu.ContextMenuInfo
-            menuInfo) {
-
-        super.onCreateContextMenu(menu, view, menuInfo);
-
-        MenuInflater inflater = getActivity().getMenuInflater();
-        inflater.inflate(R.menu.menu_detected_list, menu);
-    }
-
-    @Override
-    public boolean onContextItemSelected(MenuItem item) {
-        ContextMenuRecyclerView.RecyclerContextMenuInfo info = (ContextMenuRecyclerView
-                .RecyclerContextMenuInfo) item
-                .getMenuInfo();
-
-        switch (item.getItemId()) {
-            case R.id.action_manage_add:
-               // find better way to change fragment from scan to tracked
-                Intent intent = NewMainNavigationActivity.getStartIntent(getActivity());
-                intent.putExtra(Constants.ARG_BEACON, new TrackedBeacon((IManagedBeacon) mBeaconsAdapter.getItem(info.position)));
-                startActivity(intent);
-                return true;
-            case R.id.action_filter_add:
-                //TODO
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/DetectedBeaconAdapter.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/DetectedBeaconAdapter.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/DetectedBeaconAdapter.java	(date 1501671703000)
@@ -1,96 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.adapter;
-
-import android.databinding.DataBindingUtil;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.databinding.ItemDetectedBeaconBinding;
-import com.ellipsonic.www.student_tracking.model.DetectedBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.BaseFragment;
-import com.ellipsonic.www.student_tracking.viewModel.DetectedBeaconViewModel;
-
-import org.altbeacon.beacon.Beacon;
-
-import java.util.Collection;
-import java.util.Iterator;
-
-/**
- * Created by vitas on 09/12/2015.
- */
-public class DetectedBeaconAdapter extends BeaconAdapter<DetectedBeaconAdapter.BindingHolder> {
-
-    public DetectedBeaconAdapter(BaseFragment fragment) {
-        mFragment = fragment;
-    }
-
-    @Override
-    public BindingHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        ItemDetectedBeaconBinding beaconBinding = DataBindingUtil.inflate(
-                LayoutInflater.from(parent.getContext()),
-                R.layout.item_detected_beacon,
-                parent,
-                false);
-        return new BindingHolder(beaconBinding);
-    }
-
-    @Override
-    public void onBindViewHolder(BindingHolder holder, final int position) {
-        ItemDetectedBeaconBinding beaconBinding = holder.binding;
-        holder.setOnLongClickListener(new View.OnLongClickListener() {
-            @Override
-            public boolean onLongClick(View v) {
-                if (onBeaconLongClickListener != null) {
-                    onBeaconLongClickListener.onBeaconLongClick(position);
-                }
-                return false;
-            }
-        });
-        beaconBinding.setViewModel(new DetectedBeaconViewModel(mFragment, (DetectedBeacon) getItem(position)));
-    }
-
-
-    public void insertBeacons(Collection<Beacon> beacons) {
-        Iterator<Beacon> iterator = beacons.iterator();
-        while (iterator.hasNext()) {
-            DetectedBeacon dBeacon = new DetectedBeacon(iterator.next());
-            dBeacon.setTimeLastSeen(System.currentTimeMillis());
-            this.mBeacons.put(dBeacon.getId(), dBeacon);
-        }
-        notifyDataSetChanged();
-    }
-
-    public static class BindingHolder extends RecyclerView.ViewHolder {
-        private ItemDetectedBeaconBinding binding;
-
-        public BindingHolder(ItemDetectedBeaconBinding binding) {
-            super(binding.contentView);
-            this.binding = binding;
-        }
-
-        public void setOnLongClickListener(View.OnLongClickListener listener) {
-            binding.contentView.setOnLongClickListener(listener);
-        }
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/BeaconServiceUtility.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/BeaconServiceUtility.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/BeaconServiceUtility.java	(date 1501671703000)
@@ -1,56 +0,0 @@
-//package com.ellipsonic.www.student_tracking.ibeaconreference;
-//
-//import android.app.AlarmManager;
-//import android.app.PendingIntent;
-//import android.content.Context;
-//import android.content.Intent;
-//
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconConsumer;
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconManager;
-//
-//import java.util.Calendar;
-//
-//public class BeaconServiceUtility {
-//
-//	private Context context;
-//	private PendingIntent pintent;
-//	private AlarmManager alarm;
-//	private Intent iService;
-//
-//	public BeaconServiceUtility(Context context) {
-//		super();
-//		this.context = context;
-//		iService = new Intent(context, BeaconDetactorService.class);
-//		alarm = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
-//		pintent = PendingIntent.getService(context, 0, iService, 0);
-//	}
-//
-//	public void onStart(IBeaconManager iBeaconManager, IBeaconConsumer consumer) {
-//
-//		stopBackgroundScan();
-//		iBeaconManager.bind(consumer);
-//
-//	}
-//
-//	public void onStop(IBeaconManager iBeaconManager, IBeaconConsumer consumer) {
-//
-//		iBeaconManager.unBind(consumer);
-//		startBackgroundScan();
-//
-//	}
-//
-//	private void stopBackgroundScan() {
-//
-//		alarm.cancel(pintent);
-//		context.stopService(iService);
-//	}
-//
-//	private void startBackgroundScan() {
-//
-//		Calendar cal = Calendar.getInstance();
-//		cal.add(Calendar.SECOND, 2);
-//		alarm.setRepeating(AlarmManager.RTC_WAKEUP, cal.getTimeInMillis(), 360000, pintent); // 6*60 * 1000
-//		context.startService(iService);
-//	}
-//
-//}
Index: app/src/main/res/layout/activity_register.xml
===================================================================
--- app/src/main/res/layout/activity_register.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_register.xml	(date 1501671703000)
@@ -1,120 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/activity_register"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:background="@color/purple_light"
-
-    android:paddingTop="@dimen/activity_vertical_margin"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.RegisterActivity">
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/student_name"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:hint="Enter Student Name"
-        android:imeOptions="actionNext"
-        android:inputType="text"
-        android:textColor="@color/black"
-
-        android:layout_below="@+id/student_mac"
-        android:layout_alignParentStart="true" />
-
-
-
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/student_school"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:hint="Enter School Name"
-        android:imeOptions="actionNext"
-        android:textColor="@color/black"
-
-        android:inputType="text"
-        android:layout_below="@+id/student_name"
-        android:layout_alignParentStart="true" />
-
-
-
-
-
-
-
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/student_age"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:textColor="@color/black"
-
-        android:focusableInTouchMode="true"
-        android:gravity="center_horizontal"
-        android:hint="Enter Student Age"        android:imeOptions="actionNext"
-        android:inputType="number|numberSigned"
-
-        android:layout_below="@+id/student_school"
-        android:layout_alignParentStart="true" />
-
-
-
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/student_standard"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:hint="Enter Student Standard"
-        android:imeOptions="actionSend"
-        android:inputType="number"
-        android:textColor="@color/black"
-
-        android:layout_below="@+id/student_age"
-        android:layout_alignParentStart="true" />
-
-    <Button
-        android:text="Register"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/register_btn"
-        android:elevation="24dp"
-        style="@style/Widget.AppCompat.Button"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentStart="true"
-        android:layout_marginBottom="36dp" />
-
-
-
-    <android.support.design.widget.TextInputLayout
-        android:layout_height="wrap_content"
-        android:layout_width="match_parent"
-        android:id="@+id/student_macId_layout"
-        android:layout_below="@+id/student_school"
-
-
-
-        >
-
-
-    </android.support.design.widget.TextInputLayout>
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/student_mac"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:focusableInTouchMode="false"
-        android:gravity="center_horizontal"
-        android:hint="Enter MacID"
-        android:imeOptions="actionNext"
-        android:layout_marginTop="64dp"
-        android:layout_alignParentTop="true"
-        android:layout_alignParentStart="true" />
-
-
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_login.xml
===================================================================
--- app/src/main/res/layout/activity_login.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_login.xml	(date 1501671703000)
@@ -1,78 +0,0 @@
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:background="@drawable/appblue"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.Login">
-
-    <!-- Login progress -->
-    <ProgressBar
-        android:id="@+id/login_progress"
-        style="?android:attr/progressBarStyleLarge"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="8dp"
-        android:visibility="gone" />
-
-    <ScrollView
-        android:id="@+id/login_form"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-        <LinearLayout
-            android:id="@+id/email_login_form"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <android.support.design.widget.TextInputLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content">
-
-                <AutoCompleteTextView
-                    android:id="@+id/email"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:hint="@string/prompt_email"
-                    android:inputType="textEmailAddress"
-                    android:maxLines="1"
-                    android:singleLine="true" />
-
-            </android.support.design.widget.TextInputLayout>
-
-            <android.support.design.widget.TextInputLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content">
-
-                <EditText
-                    android:id="@+id/password"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:hint="@string/prompt_password"
-                    android:imeActionId="@+id/login"
-                    android:imeActionLabel="@string/action_sign_in_short"
-                    android:imeOptions="actionUnspecified"
-                    android:inputType="textPassword"
-                    android:maxLines="1"
-                    android:singleLine="true" />
-
-            </android.support.design.widget.TextInputLayout>
-
-            <Button
-                android:id="@+id/email_sign_in_button"
-                style="?android:textAppearanceSmall"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="16dp"
-                android:text="@string/action_sign_in"
-                android:textStyle="bold" />
-
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
Index: app/src/main/res/drawable/side_nav_bar.xml
===================================================================
--- app/src/main/res/drawable/side_nav_bar.xml	(date 1501671703000)
+++ app/src/main/res/drawable/side_nav_bar.xml	(date 1501671703000)
@@ -1,13 +0,0 @@
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-    <gradient
-        android:angle="180"
-        android:centerColor="#4CAF50"
-        android:endColor="#2E7D32"
-        android:startColor="#81C784"
-        android:type="linear" />
-</shape>
-
-    <!--android:centerColor="@color/hn_orange"-->
-    <!--android:endColor="@color/hn_orange_lighter"-->
-    <!--android:startColor="@color/hn_orange_dark"-->
\ No newline at end of file
Index: app/src/main/res/menu/activity_home__beacon_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_home__beacon_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_home__beacon_drawer.xml	(date 1501671703000)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_map"
-            android:title="Map" />
-        <item
-            android:id="@+id/nav_register"
-            android:title="Beacon_Register" />
-        <item
-            android:id="@+id/nav_edit"
-            android:title="Edit" />
-        <item
-            android:id="@+id/nav_signout"
-            android:title="SignOut" />
-
-    </group>
-
-
-</menu>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/injection/module/ApplicationModule.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/injection/module/ApplicationModule.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/injection/module/ApplicationModule.java	(date 1501671703000)
@@ -1,78 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.injection.module;
-
-import android.app.Application;
-import android.content.Context;
-
-import com.ellipsonic.www.student_tracking.action.ActionExecutor;
-import com.ellipsonic.www.student_tracking.data.DataManager;
-
-import org.altbeacon.beacon.BeaconManager;
-
-import javax.inject.Singleton;
-
-import dagger.Module;
-import dagger.Provides;
-
-
-@Module
-public class ApplicationModule {
-    protected final Application application;
-
-    public ApplicationModule(Application application) {
-        this.application = application;
-    }
-
-    @Provides
-    @Singleton
-    Application provideApplication() {
-        return this.application;
-    }
-
-
-    @Provides
-    @Singleton
-    public Context provideApplicationContext() {
-        return this.application;
-    }
-
-    @Provides
-    @Singleton
-    DataManager provideDataManager() {
-        return new DataManager(this.application);
-    }
-
-    @Provides
-    @Singleton
-    ActionExecutor provideActionExecutor() {
-        return new ActionExecutor(this.application);
-    }
-
-    @Provides
-    @Singleton
-    public BeaconManager provideBeaconManager() {
-        BeaconManager manager = BeaconManager.getInstanceForApplication(application);
-
-
-        manager.setDebug(true);
-        return manager;
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/model/TrackedBeacon.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/model/TrackedBeacon.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/model/TrackedBeacon.java	(date 1501671703000)
@@ -1,276 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.model;
-
-import android.os.Parcel;
-import android.os.Parcelable;
-
-import java.util.ArrayList;
-import java.util.List;
-
-
-/**
- * Created by vitas on 20/12/15.
- */
-public class TrackedBeacon implements IManagedBeacon, ITriggerable, Parcelable {
-
-    public static final Creator<TrackedBeacon> CREATOR = new Creator<TrackedBeacon>() {
-        @Override
-        public TrackedBeacon createFromParcel(Parcel in) {
-            return new TrackedBeacon(in);
-        }
-
-        @Override
-        public TrackedBeacon[] newArray(int size) {
-            return new TrackedBeacon[size];
-        }
-    };
-    private String id;
-    private String uuid = "";
-    private long lastSeenTime;
-    private String major = "";
-    private String minor = "";
-    private int txPower;
-    private int rssi;
-    private double distance;
-    private String bleName;
-    private String bleAddress;
-    private int type = -1;
-    private String urlEddystone;
-    private List<ActionBeacon> actions = new ArrayList<>();
-
-    public TrackedBeacon(IManagedBeacon detectedBeacon) {
-        setId(detectedBeacon.getId());
-        setTimeLastSeen(detectedBeacon.getTimeLastSeen());
-        setBluetoothName(detectedBeacon.getBluetoothName());
-        setBluetoothAddress(detectedBeacon.getBluetoothAddress());
-        setUUID(detectedBeacon.getUUID());
-        setRssi(detectedBeacon.getRssi());
-        setTxPower(detectedBeacon.getTxPower());
-        setType(detectedBeacon.getBeaconType().ordinal());
-        setUrl(detectedBeacon.getEddystoneURL());
-        setDistance(detectedBeacon.getDistance());
-        setMajor(detectedBeacon.getMajor());
-        setMinor(detectedBeacon.getMinor());
-    }
-
-    public TrackedBeacon() {
-
-    }
-
-    protected TrackedBeacon(Parcel in) {
-        id = in.readString();
-        uuid = in.readString();
-        lastSeenTime = in.readLong();
-        major = in.readString();
-        minor = in.readString();
-        txPower = in.readInt();
-        rssi = in.readInt();
-        distance = in.readDouble();
-        bleName = in.readString();
-        bleAddress = in.readString();
-        type = in.readInt();
-        urlEddystone = in.readString();
-        this.actions = new ArrayList<>();
-        in.readList(actions, getClass().getClassLoader());
-    }
-
-    @Override
-    public BeaconType getBeaconType() {
-        return getType() == -1 ? BeaconType.UNSPECIFIED : BeaconType.fromInt(getType());
-    }
-
-    @Override
-    public String getMajor() {
-        return major;
-    }
-
-    public void setMajor(String major) {
-        this.major = major;
-    }
-
-    @Override
-    public String getEddystoneURL() {
-        return urlEddystone;
-    }
-
-    @Override
-    public double getDistance() {
-        return distance;
-    }
-
-    public void setDistance(double distance) {
-        this.distance = distance;
-    }
-
-    @Override
-    public long getTimeLastSeen() {
-        return lastSeenTime;
-    }
-
-    public void setTimeLastSeen(long lastSeenTime) {
-        this.lastSeenTime = lastSeenTime;
-    }
-
-    @Override
-    public String getMinor() {
-        return minor;
-    }
-
-    public void setMinor(String minor) {
-        this.minor = minor;
-    }
-
-    @Override
-    public String getId() {
-        return id;
-    }
-
-    public void setId(String id) {
-        this.id = id;
-    }
-
-    @Override
-    public String getUUID() {
-        return uuid;
-    }
-
-    public void setUUID(String uuid) {
-        this.uuid = uuid;
-    }
-
-    @Override
-    public int getTxPower() {
-        return txPower;
-    }
-
-    public void setTxPower(int txPower) {
-        this.txPower = txPower;
-    }
-
-    @Override
-    public int getRssi() {
-        return rssi;
-    }
-
-    public void setRssi(int rssi) {
-        this.rssi = rssi;
-    }
-
-    @Override
-    public boolean equalTo(IManagedBeacon target) {
-        return getId().equals(target);
-    }
-
-    @Override
-    public String getBluetoothName() {
-        return bleName;
-    }
-
-    public void setBluetoothName(String bleName) {
-        this.bleName = bleName;
-    }
-
-    @Override
-    public String getBluetoothAddress() {
-        return bleAddress;
-    }
-
-    public void setBluetoothAddress(String bleAddress) {
-        this.bleAddress = bleAddress;
-    }
-
-    @Override
-    public int getType() {
-        return type;
-    }
-
-    public void setType(int type) {
-        this.type = type;
-    }
-
-    public void setUrl(String url) {
-        this.urlEddystone = url;
-    }
-
-    @Override
-    public void addAction(ActionBeacon action) {
-        if (!this.actions.contains(action)) {
-            action.setBeaconId(getId());
-            this.actions.add(action);
-        } else {
-            //throw
-        }
-    }
-
-    @Override
-    public List<ActionBeacon> getActions() {
-        return actions;
-    }
-
-    @Override
-    public void addActions(List<ActionBeacon> actions) {
-        this.actions.addAll(actions);
-        //return actions;
-    }
-
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
-    @Override
-    public void writeToParcel(Parcel dest, int flags) {
-        dest.writeString(id);
-        dest.writeString(uuid);
-        dest.writeLong(lastSeenTime);
-        dest.writeString(major);
-        dest.writeString(minor);
-        dest.writeInt(txPower);
-        dest.writeInt(rssi);
-        dest.writeDouble(distance);
-        dest.writeString(bleName);
-        dest.writeString(bleAddress);
-        dest.writeInt(type);
-        dest.writeString(urlEddystone);
-        dest.writeList(actions);
-    }
-
-    @Override
-    public boolean isEddyStoneTLM() {
-        return getBeaconType() == BeaconType.EDDYSTONE_TLM;
-    }
-
-    @Override
-    public boolean isEddyStoneUID() {
-        return getBeaconType() == BeaconType.EDDYSTONE_UID;
-    }
-
-    @Override
-    public boolean isEddyStoneURL() {
-        return getBeaconType() == BeaconType.EDDYSTONE_URL;
-    }
-
-    @Override
-    public boolean isEddystone() {
-        return (getBeaconType() == BeaconType.EDDYSTONE_UID)
-                || (getBeaconType() == BeaconType.EDDYSTONE_URL) || (getBeaconType() == BeaconType.EDDYSTONE_TLM);
-    }
-
-}
Index: app/src/main/res/layout/activity_home__beacon.xml
===================================================================
--- app/src/main/res/layout/activity_home__beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_home__beacon.xml	(date 1501671703000)
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:card_view="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/drawer_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:fitsSystemWindows="true"
-    android:background="@color/purple_light"
-
-    tools:openDrawer="start">
-    <include android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-
-    <include
-        layout="@layout/app_bar_home__beacon"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" />
-
-    <android.support.design.widget.NavigationView
-        android:id="@+id/nav_view"
-
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-
-        android:layout_gravity="start"
-        android:fitsSystemWindows="true"
-        app:headerLayout="@layout/nav_header_map_page"
-        app:menu="@menu/activity_home__beacon_drawer"
-        />
-
-</android.support.v4.widget.DrawerLayout>
-
-
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/WelcomePage.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/WelcomePage.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/WelcomePage.java	(date 1501671703000)
@@ -1,138 +0,0 @@
-package com.ellipsonic.www.student_tracking.ui.activity;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
-import android.view.View;
-import android.support.design.widget.NavigationView;
-import android.support.v4.view.GravityCompat;
-import android.support.v4.widget.DrawerLayout;
-import android.support.v7.app.ActionBarDrawerToggle;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.widget.Button;
-import android.widget.ImageView;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.R;
-
-import de.hdodenhof.circleimageview.CircleImageView;
-
-public class WelcomePage extends AppCompatActivity
-        implements NavigationView.OnNavigationItemSelectedListener, View.OnClickListener {
-
-    de.hdodenhof.circleimageview.CircleImageView profilepic;
-    TextView profile_name;
-    TextView profile_deiscrption;
-
-    ImageView student_tracking_btn;
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_welcome_page);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-
-        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
-        fab.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
-                        .setAction("Action", null).show();
-
-                startActivity(new Intent(getApplicationContext(),MapsActivity.class));
-            }
-        });
-
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
-                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
-        drawer.setDrawerListener(toggle);
-        toggle.syncState();
-
-        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
-        navigationView.setNavigationItemSelectedListener(this);
-
-        initialization();
-
-    }
-
-    private void initialization() {
-
-        profilepic = (CircleImageView) findViewById(R.id.profile_img);
-        profile_name = (TextView)findViewById(R.id.profile_name);
-        profile_deiscrption = (TextView) findViewById(R.id.profileDescripton);
-        student_tracking_btn = (ImageView)findViewById(R.id.student_tracking_btn);
-        student_tracking_btn.setOnClickListener(this);
-    }
-
-    @Override
-    public void onBackPressed() {
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        if (drawer.isDrawerOpen(GravityCompat.START)) {
-            drawer.closeDrawer(GravityCompat.START);
-        } else {
-            super.onBackPressed();
-        }
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        // Inflate the menu; this adds items to the action bar if it is present.
-        getMenuInflater().inflate(R.menu.welcome_page, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        // Handle action bar item clicks here. The action bar will
-        // automatically handle clicks on the Home/Up button, so long
-        // as you specify a parent activity in AndroidManifest.xml.
-        int id = item.getItemId();
-
-        //noinspection SimplifiableIfStatement
-        if (id == R.id.action_settings) {
-            return true;
-        }
-
-        return super.onOptionsItemSelected(item);
-    }
-
-    @SuppressWarnings("StatementWithEmptyBody")
-    @Override
-    public boolean onNavigationItemSelected(MenuItem item) {
-        // Handle navigation view item clicks here.
-        int id = item.getItemId();
-
-        if (id == R.id.nav_camera) {
-            // Handle the camera action
-        } else if (id == R.id.nav_gallery) {
-
-        } else if (id == R.id.nav_slideshow) {
-
-        } else if (id == R.id.nav_manage) {
-
-        } else if (id == R.id.nav_events) {
-
-        } else if (id == R.id.nav_settings) {
-
-        }
-
-        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
-        drawer.closeDrawer(GravityCompat.START);
-        return true;
-    }
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()){
-            case R.id.student_tracking_btn:
-                Toast.makeText(getApplicationContext(),"Map Activtiy need to start",Toast.LENGTH_SHORT).show();
-                break;
-        }
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/TrackedBeaconViewModel.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/TrackedBeaconViewModel.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/TrackedBeaconViewModel.java	(date 1501671703000)
@@ -1,56 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.viewModel;
-
-import android.support.annotation.NonNull;
-import android.view.View;
-
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.BaseFragment;
-import com.ellipsonic.www.student_tracking.ui.fragment.TrackedBeaconsFragment;
-
-/**
- * Created by vitas on 19/10/15.
- */
-public class TrackedBeaconViewModel extends BeaconViewModel {
-
-    public TrackedBeaconViewModel(@NonNull BaseFragment fragment, @NonNull IManagedBeacon managedBeacon) {
-        super(fragment, managedBeacon);
-    }
-
-    public View.OnClickListener onClickBeaconDelete() {
-        return new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                ((TrackedBeaconsFragment) mFragment).removeBeacon(mManagedBeacon.getId());
-            }
-        };
-    }
-
-    public View.OnClickListener onClickBeaconAdd() {
-        return new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                ((TrackedBeaconsFragment) mFragment).newBeaconAction(mManagedBeacon.getId());
-            }
-        };
-    }
-
-
-}
Index: app/src/main/res/menu/menu_tracked_list.xml
===================================================================
--- app/src/main/res/menu/menu_tracked_list.xml	(date 1501671703000)
+++ app/src/main/res/menu/menu_tracked_list.xml	(date 1501671703000)
@@ -1,16 +0,0 @@
-<menu xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MainNavigationActivity">
-
-    <item
-        android:id="@+id/action_add"
-        android:icon="@drawable/ic_add_circle_outline_black_24dp"
-        android:title="@string/action_tracked_action_add" />
-
-    <item
-        android:id="@+id/action_delete"
-        android:icon="@drawable/ic_delete_black_24dp"
-        android:title="@string/action_tracked_list_delete" />
-
-
-</menu>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/WrapLinearLayoutManager.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/WrapLinearLayoutManager.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/WrapLinearLayoutManager.java	(date 1501671703000)
@@ -1,315 +0,0 @@
-/*
- * Copyright 2015 serso aka se.solovyev
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *    http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- *
- * Contact details
- *
- * Email: se.solovyev@gmail.com
- * Site:  http://se.solovyev.org
- */
-
-package com.ellipsonic.www.student_tracking.ui.view;
-
-import android.content.Context;
-import android.graphics.Rect;
-import android.support.v4.view.ViewCompat;
-import android.support.v7.widget.RecyclerView;
-import android.util.Log;
-import android.view.View;
-
-import com.ellipsonic.www.student_tracking.BuildConfig;
-
-import java.lang.reflect.Field;
-
-/**
- * {@link android.support.v7.widget.LinearLayoutManager} which wraps its content. Note that this class will always
- * wrap the content regardless of {@link android.support.v7.widget.RecyclerView} layout parameters.
- * <p>
- * Now it's impossible to run add/remove animations with child views which have arbitrary dimensions (height for
- * VERTICAL orientation and width for HORIZONTAL). However if child views have fixed dimensions
- * {@link #setChildSize(int)} method might be used to let the layout manager know how big they are going to be.
- * If animations are not used at all then a normal measuring procedure will run and child views will be measured during
- * the measure pass.
- */
-public class WrapLinearLayoutManager extends android.support.v7.widget.LinearLayoutManager {
-
-    private static final int CHILD_WIDTH = 0;
-    private static final int CHILD_HEIGHT = 1;
-    private static final int DEFAULT_CHILD_SIZE = 100;
-    private static boolean canMakeInsetsDirty = true;
-    private static Field insetsDirtyField = null;
-    private final int[] childDimensions = new int[2];
-    private final RecyclerView view;
-    private final Rect tmpRect = new Rect();
-    private int childSize = DEFAULT_CHILD_SIZE;
-    private boolean hasChildSize;
-    private int overScrollMode = ViewCompat.OVER_SCROLL_ALWAYS;
-
-    @SuppressWarnings("UnusedDeclaration")
-    public WrapLinearLayoutManager(Context context) {
-        super(context);
-        this.view = null;
-    }
-
-    @SuppressWarnings("UnusedDeclaration")
-    public WrapLinearLayoutManager(Context context, int orientation, boolean reverseLayout) {
-        super(context, orientation, reverseLayout);
-        this.view = null;
-    }
-
-    @SuppressWarnings("UnusedDeclaration")
-    public WrapLinearLayoutManager(RecyclerView view) {
-        super(view.getContext());
-        this.view = view;
-        this.overScrollMode = ViewCompat.getOverScrollMode(view);
-    }
-
-    @SuppressWarnings("UnusedDeclaration")
-    public WrapLinearLayoutManager(RecyclerView view, int orientation, boolean reverseLayout) {
-        super(view.getContext(), orientation, reverseLayout);
-        this.view = view;
-        this.overScrollMode = ViewCompat.getOverScrollMode(view);
-    }
-
-    public static int makeUnspecifiedSpec() {
-        return View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.UNSPECIFIED);
-    }
-
-    private static void makeInsetsDirty(RecyclerView.LayoutParams p) {
-        if (!canMakeInsetsDirty) {
-            return;
-        }
-        try {
-            if (insetsDirtyField == null) {
-                insetsDirtyField = RecyclerView.LayoutParams.class.getDeclaredField("mInsetsDirty");
-                insetsDirtyField.setAccessible(true);
-            }
-            insetsDirtyField.set(p, true);
-        } catch (NoSuchFieldException e) {
-            onMakeInsertDirtyFailed();
-        } catch (IllegalAccessException e) {
-            onMakeInsertDirtyFailed();
-        }
-    }
-
-    private static void onMakeInsertDirtyFailed() {
-        canMakeInsetsDirty = false;
-        if (BuildConfig.DEBUG) {
-            Log.w("LinearLayoutManager", "Can't make LayoutParams insets dirty, decorations measurements might be incorrect");
-        }
-    }
-
-    public void setOverScrollMode(int overScrollMode) {
-        if (overScrollMode < ViewCompat.OVER_SCROLL_ALWAYS || overScrollMode > ViewCompat.OVER_SCROLL_NEVER)
-            throw new IllegalArgumentException("Unknown overscroll mode: " + overScrollMode);
-        if (this.view == null) throw new IllegalStateException("view == null");
-        this.overScrollMode = overScrollMode;
-        ViewCompat.setOverScrollMode(view, overScrollMode);
-    }
-
-    @Override
-    public void onMeasure(RecyclerView.Recycler recycler, RecyclerView.State state, int widthSpec, int heightSpec) {
-        final int widthMode = View.MeasureSpec.getMode(widthSpec);
-        final int heightMode = View.MeasureSpec.getMode(heightSpec);
-
-        final int widthSize = View.MeasureSpec.getSize(widthSpec);
-        final int heightSize = View.MeasureSpec.getSize(heightSpec);
-
-        final boolean hasWidthSize = widthMode != View.MeasureSpec.UNSPECIFIED;
-        final boolean hasHeightSize = heightMode != View.MeasureSpec.UNSPECIFIED;
-
-        final boolean exactWidth = widthMode == View.MeasureSpec.EXACTLY;
-        final boolean exactHeight = heightMode == View.MeasureSpec.EXACTLY;
-
-        final int unspecified = makeUnspecifiedSpec();
-
-        if (exactWidth && exactHeight) {
-            // in case of exact calculations for both dimensions let's use default "onMeasure" implementation
-            super.onMeasure(recycler, state, widthSpec, heightSpec);
-            return;
-        }
-
-        final boolean vertical = getOrientation() == VERTICAL;
-
-        initChildDimensions(widthSize, heightSize, vertical);
-
-        int width = 0;
-        int height = 0;
-
-        // it's possible to get scrap views in recycler which are bound to old (invalid) adapter entities. This
-        // happens because their invalidation happens after "onMeasure" method. As a workaround let's clear the
-        // recycler now (it should not cause any performance issues while scrolling as "onMeasure" is never
-        // called whiles scrolling)
-        recycler.clear();
-
-        final int stateItemCount = state.getItemCount();
-        final int adapterItemCount = getItemCount();
-        // adapter always contains actual data while state might contain old data (f.e. data before the animation is
-        // done). As we want to measure the view with actual data we must use data from the adapter and not from  the
-        // state
-        for (int i = 0; i < adapterItemCount; i++) {
-            if (vertical) {
-                if (!hasChildSize) {
-                    if (i < stateItemCount) {
-                        // we should not exceed state count, otherwise we'll get IndexOutOfBoundsException. For such items
-                        // we will use previously calculated dimensions
-                        measureChild(recycler, i, widthSize, unspecified, childDimensions);
-                    } else {
-                        logMeasureWarning(i);
-                    }
-                }
-                height += childDimensions[CHILD_HEIGHT];
-                if (i == 0) {
-                    width = childDimensions[CHILD_WIDTH];
-                }
-                if (hasHeightSize && height >= heightSize) {
-                    break;
-                }
-            } else {
-                if (!hasChildSize) {
-                    if (i < stateItemCount) {
-                        // we should not exceed state count, otherwise we'll get IndexOutOfBoundsException. For such items
-                        // we will use previously calculated dimensions
-                        measureChild(recycler, i, unspecified, heightSize, childDimensions);
-                    } else {
-                        logMeasureWarning(i);
-                    }
-                }
-                width += childDimensions[CHILD_WIDTH];
-                if (i == 0) {
-                    height = childDimensions[CHILD_HEIGHT];
-                }
-                if (hasWidthSize && width >= widthSize) {
-                    break;
-                }
-            }
-        }
-
-        if (exactWidth) {
-            width = widthSize;
-        } else {
-            width += getPaddingLeft() + getPaddingRight();
-            if (hasWidthSize) {
-                width = Math.min(width, widthSize);
-            }
-        }
-
-        if (exactHeight) {
-            height = heightSize;
-        } else {
-            height += getPaddingTop() + getPaddingBottom();
-            if (hasHeightSize) {
-                height = Math.min(height, heightSize);
-            }
-        }
-
-        setMeasuredDimension(width, height);
-
-        if (view != null && overScrollMode == ViewCompat.OVER_SCROLL_IF_CONTENT_SCROLLS) {
-            final boolean fit = (vertical && (!hasHeightSize || height < heightSize))
-                    || (!vertical && (!hasWidthSize || width < widthSize));
-
-            ViewCompat.setOverScrollMode(view, fit ? ViewCompat.OVER_SCROLL_NEVER : ViewCompat.OVER_SCROLL_ALWAYS);
-        }
-    }
-
-    private void logMeasureWarning(int child) {
-        if (BuildConfig.DEBUG) {
-            Log.w("LinearLayoutManager", "Can't measure child #" + child + ", previously used dimensions will be reused." +
-                    "To remove this message either use #setChildSize() method or don't run RecyclerView animations");
-        }
-    }
-
-    private void initChildDimensions(int width, int height, boolean vertical) {
-        if (childDimensions[CHILD_WIDTH] != 0 || childDimensions[CHILD_HEIGHT] != 0) {
-            // already initialized, skipping
-            return;
-        }
-        if (vertical) {
-            childDimensions[CHILD_WIDTH] = width;
-            childDimensions[CHILD_HEIGHT] = childSize;
-        } else {
-            childDimensions[CHILD_WIDTH] = childSize;
-            childDimensions[CHILD_HEIGHT] = height;
-        }
-    }
-
-    @Override
-    public void setOrientation(int orientation) {
-        // might be called before the constructor of this class is called
-        //noinspection ConstantConditions
-        if (childDimensions != null) {
-            if (getOrientation() != orientation) {
-                childDimensions[CHILD_WIDTH] = 0;
-                childDimensions[CHILD_HEIGHT] = 0;
-            }
-        }
-        super.setOrientation(orientation);
-    }
-
-    public void clearChildSize() {
-        hasChildSize = false;
-        setChildSize(DEFAULT_CHILD_SIZE);
-    }
-
-    public void setChildSize(int childSize) {
-        hasChildSize = true;
-        if (this.childSize != childSize) {
-            this.childSize = childSize;
-            requestLayout();
-        }
-    }
-
-    private void measureChild(RecyclerView.Recycler recycler, int position, int widthSize, int heightSize, int[] dimensions) {
-        final View child;
-        try {
-            child = recycler.getViewForPosition(position);
-        } catch (IndexOutOfBoundsException e) {
-            if (BuildConfig.DEBUG) {
-                Log.w("LinearLayoutManager", "LinearLayoutManager doesn't work well with animations. Consider switching them off", e);
-            }
-            return;
-        }
-
-        final RecyclerView.LayoutParams p = (RecyclerView.LayoutParams) child.getLayoutParams();
-
-        final int hPadding = getPaddingLeft() + getPaddingRight();
-        final int vPadding = getPaddingTop() + getPaddingBottom();
-
-        final int hMargin = p.leftMargin + p.rightMargin;
-        final int vMargin = p.topMargin + p.bottomMargin;
-
-        // we must make insets dirty in order calculateItemDecorationsForChild to work
-        makeInsetsDirty(p);
-        // this method should be called before any getXxxDecorationXxx() methods
-        calculateItemDecorationsForChild(child, tmpRect);
-
-        final int hDecoration = getRightDecorationWidth(child) + getLeftDecorationWidth(child);
-        final int vDecoration = getTopDecorationHeight(child) + getBottomDecorationHeight(child);
-
-        final int childWidthSpec = getChildMeasureSpec(widthSize, hPadding + hMargin + hDecoration, p.width, canScrollHorizontally());
-        final int childHeightSpec = getChildMeasureSpec(heightSize, vPadding + vMargin + vDecoration, p.height, canScrollVertically());
-
-        child.measure(childWidthSpec, childHeightSpec);
-
-        dimensions[CHILD_WIDTH] = getDecoratedMeasuredWidth(child) + p.leftMargin + p.rightMargin;
-        dimensions[CHILD_HEIGHT] = getDecoratedMeasuredHeight(child) + p.bottomMargin + p.topMargin;
-
-        // as view is recycled let's not keep old measured values
-        makeInsetsDirty(p);
-        recycler.recycleView(child);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/receiver/BeaconAlertReceiver.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/receiver/BeaconAlertReceiver.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/receiver/BeaconAlertReceiver.java	(date 1501671703000)
@@ -1,73 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.receiver;
-
-import android.app.PendingIntent;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import com.ellipsonic.www.student_tracking.util.NotificationBuilder;
-
-
-public class BeaconAlertReceiver extends BroadcastReceiver {
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-
-        if (intent.getAction().equalsIgnoreCase(Constants.ALARM_NOTIFICATION_SHOW)) {
-            NotificationAction notificationAction = intent.getParcelableExtra("NOTIFICATION");
-            createNotification(context, context.getString(R.string.action_alarm_text_title),
-                    notificationAction.getMessage(), notificationAction.getMessage(),
-                    notificationAction.getRingtone(), notificationAction.isVibrate());
-
-        }
-    }
-
-    private void createNotification(Context context, String title, String msgText, String msgAlert, String ringtone, boolean isVibrate) {
-
-        PendingIntent notificationIntent = PendingIntent.getActivity(context, 0, new Intent(context, NewMainNavigationActivity.class), 0);
-
-        NotificationBuilder notificationBuilder = new NotificationBuilder(context);
-        notificationBuilder.createNotification(R.mipmap.ic_launcher, title, notificationIntent);
-
-        notificationBuilder.setMessage(msgText);
-        notificationBuilder.setTicker(msgAlert);
-
-        if (isVibrate) {
-            notificationBuilder.setVibration();
-        }
-
-        if (ringtone != null && ringtone.length() > 0) {
-            notificationBuilder.setRingtone(ringtone);
-        }
-
-        notificationBuilder.show(1);
-
-    }
-}
-
-
-
-
-
Index: app/src/main/res/layout/fab.xml
===================================================================
--- app/src/main/res/layout/fab.xml	(date 1501671703000)
+++ app/src/main/res/layout/fab.xml	(date 1501671703000)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-
-<android.support.design.widget.FloatingActionButton xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/fab"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:background="@color/purple_light"
-    android:layout_gravity="bottom|end"
-    android:layout_margin="@dimen/fab_margin"
-    android:src="@drawable/ic_add_white_24dp"
-
-
-    />
\ No newline at end of file
Index: app/build.gradle
===================================================================
--- app/build.gradle	(date 1501671703000)
+++ app/build.gradle	(date 1501671703000)
@@ -1,94 +0,0 @@
-apply plugin: 'com.android.application'
-apply plugin: 'com.android.databinding'
-apply plugin: 'com.neenbedankt.android-apt'
-
-android {
-    compileSdkVersion 23
-    buildToolsVersion '25.0.0'
-    defaultConfig {
-        applicationId 'com.ellipsonic.www.student_tracking'
-        minSdkVersion 18
-        targetSdkVersion 22
-        versionCode 111
-        versionName '1.1.1'
-        testApplicationId 'com.ellipsonic.www.student_tracking.test'
-        multiDexEnabled true
-    }
-
-
-    dexOptions {
-        javaMaxHeapSize "4g"
-    }
-
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
-        }
-    }
-    lintOptions {
-        abortOnError false
-    }
-
-    if (new File("signing.properties").exists()) {
-        Properties signingProperties = new Properties()
-        signingProperties.load(new FileInputStream(new File('signing.properties')))
-
-        signingConfigs {
-            release {
-                storeFile new File(signingProperties['storeFile'])
-                storePassword signingProperties['storePassword']
-                keyAlias signingProperties['keyAlias']
-                keyPassword signingProperties['keyPassword']
-            }
-        }
-
-        buildTypes {
-            release {
-                signingConfig signingConfigs.release
-            }
-        }
-    }
-    productFlavors {
-    }
-}
-
-dependencies {
-    final SUPPORT_LIBRARY_VERSION = '23.3.0'
-    final DAGGER_VERSION = '2.0.1'
-    compile fileTree(include: ['*.jar'], dir: 'libs')
-    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:support-v13:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:preference-v7:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
-    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
-    compile "com.google.dagger:dagger:$DAGGER_VERSION"
-    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
-
-//    compile 'com.android.support:cardview-v7:21.0.+'
-//    compile 'com.android.support:recyclerview-v7:21.0.+'
-
-//    compile 'com.android.support:appcompat-v7:25.1.0'
-//    compile 'com.android.support:cardview-v7:25.1.0'
-//    compile 'com.android.support:recyclerview-v7:25.1.0'
-
-//    compile 'com.google.android.gms:play-services-auth:9.2.1'
-    //    // glide is added to load the g+ profile image. Ignore if you want
-    //
-
-    //    compile 'com.google.android.gms:play-services-auth:9.8.0'
-
-    compile 'org.altbeacon:android-beacon-library:2.9.2'
-    compile 'com.jakewharton:butterknife:7.0.1'
-    compile 'com.mcxiaoke.volley:library-aar:1.0.0'
-    compile 'de.hdodenhof:circleimageview:2.1.0'
-    compile 'com.google.android.gms:play-services:9.8.0'
-    compile 'com.android.support:multidex:1.0.1'
-    compile 'com.android.support.constraint:constraint-layout:1.0.2'
-    compile 'com.github.bumptech.glide:glide:3.7.0'
-    provided 'org.glassfish:javax.annotation:10.0-b28'
-}
-//apply plugin: 'com.google.gms.google-services'
Index: app/src/main/AndroidManifest.xml
===================================================================
--- app/src/main/AndroidManifest.xml	(date 1501671703000)
+++ app/src/main/AndroidManifest.xml	(date 1501671703000)
@@ -1,125 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"	
- package="com.ellipsonic.www.student_tracking">
- 
-    <uses-permission android:name="android.permission.BLUETOOTH" />
-    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-    <uses-permission android:name="net.dinglisch.android.tasker.PERMISSION_RUN_TASKS" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
-    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY" />
-    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
-
-    <uses-feature
-        android:name="android.hardware.bluetooth_le"
-        android:required="true" />
-
-    <!-- To auto-complete the email text field in the login form with the user's emails -->
-    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
-    <uses-permission android:name="android.permission.READ_PROFILE" />
-    <uses-permission android:name="android.permission.READ_CONTACTS" />
-
-    <application
-        android:name=".Student_Tracking"
-        android:hardwareAccelerated="true"
-        android:icon="@mipmap/ic_launcher"
-        android:label="SmartStudent"
-        android:theme="@style/AppTheme">
-        <activity
-            android:name=".ui.activity.NewMainNavigationActivity"
-            android:label="@string/title_activity_main_navigation"
-            android:theme="@style/AppTheme.NoActionBar">
-
-            <!-- <intent-filter> -->
-            <!-- <action android:name="android.intent.action.MAIN" /> -->
-
-
-            <!-- <category android:name="android.intent.category.LAUNCHER" /> -->
-            <!-- </intent-filter> -->
-        </activity>
-        <activity
-            android:name=".ui.activity.SettingsActivity"
-            android:label="@string/title_activity_settings" />
-        <activity
-            android:name=".ui.activity.BeaconActionActivity"
-            android:label="@string/title_activity_beacon" />
-
-        <receiver android:name=".receiver.BeaconRegionReceiver">
-            <intent-filter>
-                <action android:name="${applicationId}.action.NOTIFY_BEACON_ENTERS_REGION" />
-                <action android:name="${applicationId}.action.NOTIFY_BEACON_LEAVES_REGION" />
-                <action android:name="${applicationId}.action.NOTIFY_BEACON_NEAR_YOU_REGION" />
-            </intent-filter>
-        </receiver>
-        <receiver android:name=".receiver.BeaconAlertReceiver">
-            <intent-filter>
-                <action android:name="${applicationId}.action.ALARM_NOTIFICATION_SHOW" />
-            </intent-filter>
-        </receiver>
-        <receiver android:name=".receiver.LocationReceiver">
-            <intent-filter>
-                <action android:name="${applicationId}.action.GET_CURRENT_LOCATION" />
-            </intent-filter>
-        </receiver>
-
-        <meta-data
-            android:name="com.google.android.geo.API_KEY"
-            android:value="AIzaSyBrE6u8-tY7V0A-Li2vmLz6IX5aCabudiE" />
-
-        <activity
-            android:name=".ui.activity.MainActivity"
-            android:label="SmartStudent">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        <activity
-            android:name=".ui.activity.WelcomePage"
-            android:label="@string/title_activity_welcome_page" />
-        <activity
-            android:name=".ui.activity.MapsActivity"
-            android:label="Map_Page"
-            android:theme="@style/AppTheme"
-            />
-        <activity
-            android:name=".ui.activity.RegisterActivity"
-            android:label="Beacon_Register"
-            android:windowSoftInputMode="adjustPan" />
-        <activity
-            android:name=".ui.activity.Login"
-            android:label="Login"
-            android:windowSoftInputMode="adjustPan" />
-        <activity
-            android:name=".ui.activity.RegisterUser"
-            android:label="Register" />
-        <activity
-            android:name=".ui.activity.Home_Beacon"
-            android:theme="@style/AppTheme.NoActionBar" />
-        //android:label="Home_Beacon"
-        <activity
-            android:name=".ui.activity.MapPage"
-            android:label="@string/title_activity_map_page"
-            android:theme="@style/AppTheme.NoActionBar" />
-        <activity android:name=".ui.activity.Card_view" />
-        <activity android:name=".ui.activity.DatabaseHelper" />
-        <activity android:name=".ui.activity.DataMainActivity" />
-        <activity android:name=".ui.activity.jayLogin" />
-        <activity android:name=".ui.activity.GoogleMainActivity" />
-        <activity
-            android:name=".ui.activity.MapNavigationActivty"
-            android:label="@string/title_activity_map_navigation_activty"
-            android:theme="@style/AppTheme.NoActionBar" />
-        <activity
-            android:name=".ui.activity.HomeBeaconNavigationActivity"
-            android:label="@string/title_activity_home_beacon_navigation"
-            android:theme="@style/AppTheme.NoActionBar" />
-    </application>
-
-</manifest>
\ No newline at end of file
Index: app/src/main/res/layout/activity_dnt.xml
===================================================================
--- app/src/main/res/layout/activity_dnt.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_dnt.xml	(date 1501671703000)
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.dnt">
-
-    <Button
-        android:text="Register"
-        android:layout_width="250sp"
-        android:layout_height="wrap_content"
-        android:id="@+id/reg"
-        android:elevation="24dp"
-        style="@style/Widget.AppCompat.Button"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentStart="true"
-        android:layout_marginBottom="36dp" />
-
-
-
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/res/layout/activity_card_view.xml
===================================================================
--- app/src/main/res/layout/activity_card_view.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_card_view.xml	(date 1501671703000)
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    xmlns:card_view="http://schemas.android.com/apk/res-auto"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.Card_view">
-
-
-    <android.support.v7.widget.CardView
-        android:id="@+id/card_view"
-        android:layout_width="fill_parent"
-        android:layout_height="100dp"
-        android:layout_gravity="center"
-        android:layout_margin="5dp"
-        card_view:cardCornerRadius="2dp"
-        card_view:contentPadding="10dp"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        android:layout_marginBottom="8dp"
-        app:layout_constraintTop_toTopOf="parent"
-        android:layout_marginTop="8dp"
-        android:layout_marginRight="-187dp"
-        app:layout_constraintVertical_bias="0.0">
-
-
-    </android.support.v7.widget.CardView>
-
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/database/SharedPreference.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/database/SharedPreference.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/database/SharedPreference.java	(date 1501671703000)
@@ -1,86 +0,0 @@
-package com.ellipsonic.www.student_tracking.database;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.content.SharedPreferences.Editor;
-
-/**
- * Created by USER on 10/17/2016.
- */
-public class SharedPreference {
-
-    public static final String PREFS_FILE_NAME = "STUDENT_PREFS";
-    public static final String STUDENT_NAME = "STUDENT_NAME";
-    public static final String STUDENT_SCHOOL = "STUDENT_SCHOOL";
-    public static final String STUDENT_MAC = "STUDENT_MAC";
-    public static final String STUDENT_AGE = "STUDENT_AGE";
-    public static final String STUDENT_STANDARD = "STUDENT_STANDARD";
-
-
-    public SharedPreference() {
-        super();
-    }
-
-    public void saveStudentDetails(Context context, String s_name, String s_school , String s_mac,
-                                   String s_age , String s_standard) {
-        SharedPreferences settings;
-        Editor editor;
-
-        //settings = PreferenceManager.getDefaultSharedPreferences(context);
-        settings = context.getSharedPreferences(PREFS_FILE_NAME, Context.MODE_PRIVATE); //1
-        editor = settings.edit(); //2
-
-        editor.putString(STUDENT_NAME, s_name); //1
-        editor.putString(STUDENT_SCHOOL, s_school); //2
-        editor.putString(STUDENT_MAC, s_mac); //3
-        editor.putString(STUDENT_AGE, s_age); //3
-        editor.putString(STUDENT_STANDARD, s_standard); //3
-
-        editor.commit(); //4
-    }
-//    public void saveUserId(Context context, String user_id) {
-//        SharedPreferences settings;
-//        Editor editor;
-//
-//        //settings = PreferenceManager.getDefaultSharedPreferences(context);
-//        settings = context.getSharedPreferences(PREFS_FILE_NAME, Context.MODE_PRIVATE); //1
-//        editor = settings.edit(); //2
-//
-//        editor.putString(USER_ID, user_id); //3
-//
-//        editor.commit(); //4
-//    }
-
-    public String getValue(Context context, String key) {
-        SharedPreferences settings;
-        String text;
-
-        //settings = PreferenceManager.getDefaultSharedPreferences(context);
-        settings = context.getSharedPreferences(PREFS_FILE_NAME, Context.MODE_PRIVATE);
-        text = settings.getString(key, null);
-        return text;
-    }
-
-    public void clearSharedPreference(Context context) {
-        SharedPreferences settings;
-        Editor editor;
-
-        //settings = PreferenceManager.getDefaultSharedPreferences(context);
-        settings = context.getSharedPreferences(PREFS_FILE_NAME, Context.MODE_PRIVATE);
-        editor = settings.edit();
-
-        editor.clear();
-        editor.commit();
-    }
-
-    public void removeValue(Context context, String key) {
-        SharedPreferences settings;
-        Editor editor;
-
-        settings = context.getSharedPreferences(PREFS_FILE_NAME, Context.MODE_PRIVATE);
-        editor = settings.edit();
-
-        editor.remove(key);
-        editor.commit();
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconNotificationPageFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconNotificationPageFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconNotificationPageFragment.java	(date 1501671703000)
@@ -1,169 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-
-import android.content.Intent;
-import android.media.RingtoneManager;
-import android.net.Uri;
-import android.os.Bundle;
-import android.provider.Settings;
-import android.support.v7.preference.EditTextPreference;
-import android.support.v7.preference.Preference;
-import android.support.v7.preference.SwitchPreferenceCompat;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 20/12/15.
- */
-public class BeaconNotificationPageFragment extends PageBeaconFragment {
-
-    private String mNoneRintoneValue = "";
-
-    public static BeaconNotificationPageFragment newInstance(int page) {
-        BeaconNotificationPageFragment detailFragment = new BeaconNotificationPageFragment();
-        return detailFragment;
-    }
-
-    @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        this.addPreferencesFromResource(R.xml.preferences_beacon_notification);
-        //default text
-        mNoneRintoneValue = getResources().getString(R.string.pref_bn_none_notification_action_ringtone);
-    }
-
-    @Override
-    protected void setData() {
-
-        SwitchPreferenceCompat switch_enable = (SwitchPreferenceCompat) findPreference("bn_notification_action");
-        switch_enable.setChecked(mActionBeacon.getNotification().isEnabled());
-
-        switch_enable.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof Boolean) {
-                    mActionBeacon.getNotification().setIsEnabled(((Boolean) newValue).booleanValue());
-                }
-                return true;
-            }
-        });
-
-        setRingtonValue(mActionBeacon.getNotification().getRingtone());
-
-        setMessageText(mActionBeacon.getNotification().getMessage());
-
-        EditTextPreference msg_name = (EditTextPreference) findPreference("bn_notification_action_message");
-        msg_name.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof String) {
-                    setMessageText((String) newValue);
-                }
-                return true;
-            }
-        });
-
-        SwitchPreferenceCompat vibrate_enable = (SwitchPreferenceCompat) findPreference("bn_notification_action_vibrate");
-        vibrate_enable.setChecked(mActionBeacon.getNotification().isVibrate());
-
-        vibrate_enable.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof Boolean) {
-                    mActionBeacon.getNotification().setIsVibrate(((Boolean) newValue).booleanValue());
-                }
-                return true;
-            }
-        });
-    }
-
-    private void setMessageText(String newValue) {
-        EditTextPreference msg_name = (EditTextPreference) findPreference("bn_notification_action_message");
-        if (newValue != null && !newValue.isEmpty()) {
-            msg_name.setSummary(newValue);
-            mActionBeacon.getNotification().setMessage(newValue);
-        } else {
-            msg_name.setSummary(getString(R.string.pref_bn_default_notification_action_message));
-            mActionBeacon.getNotification().setMessage(getString(R.string.pref_bn_default_notification_action_message));
-        }
-    }
-
-    private String getRingtoneValue() {
-        return findPreference("bn_notification_action_ringtone").getSummary().toString();
-    }
-
-    private void setRingtonValue(String value) {
-        if (value != null && !value.isEmpty()) {
-            findPreference("bn_notification_action_ringtone").setSummary(value);
-        } else {
-            //none
-            findPreference("bn_notification_action_ringtone").setSummary(mNoneRintoneValue);
-        }
-    }
-
-    @Override
-    public boolean onPreferenceTreeClick(Preference preference) {
-        if (preference.getKey().equals("bn_notification_action_ringtone")) {
-            Intent intent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
-            intent.putExtra(RingtoneManager.EXTRA_RINGTONE_TYPE, RingtoneManager.TYPE_NOTIFICATION);
-            intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_DEFAULT, true);
-            intent.putExtra(RingtoneManager.EXTRA_RINGTONE_SHOW_SILENT, true);
-            intent.putExtra(RingtoneManager.EXTRA_RINGTONE_DEFAULT_URI, Settings.System.DEFAULT_NOTIFICATION_URI);
-
-            String existingValue = getRingtoneValue();
-            if (existingValue != null) {
-                if (existingValue.length() == 0 || existingValue.equalsIgnoreCase(mNoneRintoneValue)) {
-                    // Select "Silent"
-                    intent.putExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI, (Uri) null);
-                } else {
-                    intent.putExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI, Uri.parse(existingValue));
-                }
-            } else {
-                // No ringtone has been selected, set to the default
-                intent.putExtra(RingtoneManager.EXTRA_RINGTONE_EXISTING_URI, Settings.System.DEFAULT_NOTIFICATION_URI);
-            }
-
-            startActivityForResult(intent, Constants.REQ_CODE_ALERT_RINGTONE);
-            return true;
-        } else {
-            return super.onPreferenceTreeClick(preference);
-        }
-    }
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (requestCode == Constants.REQ_CODE_ALERT_RINGTONE && data != null) {
-            Uri ringtone = data.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI);
-            if (ringtone != null) {
-                setRingtonValue(ringtone.toString());
-                mActionBeacon.getNotification().setRingtone(ringtone.toString());
-
-            } else {
-                // "Silent" was selected
-                setRingtonValue(null);
-                mActionBeacon.getNotification().setRingtone(mNoneRintoneValue);
-            }
-        } else {
-            super.onActivityResult(requestCode, resultCode, data);
-        }
-    }
-
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/jayLogin.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/jayLogin.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/activity/jayLogin.java	(date 1501671703000)
@@ -1,99 +0,0 @@
-//
-//
-//package com.ellipsonic.www.student_tracking.ui.activity;
-//
-//        import android.content.Intent;
-//        import android.os.Bundle;
-//        import android.support.v7.app.AppCompatActivity;
-//        import android.util.Log;
-//        import android.view.View;
-//        import android.widget.Button;
-//
-//        import com.google.android.gms.auth.api.Auth;
-//        import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
-//        import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
-//        import com.google.android.gms.auth.api.signin.GoogleSignInResult;
-//        import com.google.android.gms.common.SignInButton;
-//        import com.google.android.gms.common.api.GoogleApiClient;
-//        import com.ellipsonic.www.student_tracking.R;
-//
-//public class jayLogin extends AppCompatActivity implements View.OnClickListener {
-//
-//    Button getStarted;
-//
-//
-//
-////https://developers.google.com/identity/sign-in/android/sign-in
-//
-//
-//
-//
-//    @Override
-//    protected void onCreate(Bundle savedInstanceState) {
-//        super.onCreate(savedInstanceState);
-//        setContentView(R.layout.activity_jay_login);
-//
-//        getStarted = (Button)findViewById(R.id.get_started);
-//        getStarted.setOnClickListener(this);
-//
-//        SignInButton signInButton = (SignInButton) findViewById(R.id.sign_in_button);
-//        signInButton.setSize(SignInButton.SIZE_STANDARD);
-//        findViewById(R.id.sign_in_button).setOnClickListener(this);
-//
-//
-//        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
-//                .requestEmail()
-//                .build();
-//        mGoogleApiClient = new GoogleApiClient.Builder(this)
-//                .enableAutoManage(this /* FragmentActivity */, this /* OnConnectionFailedListener */)
-//                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
-//                .build();
-//    }
-//
-//    @Override
-//    public void onClick(View v) {
-//        switch (v.getId()){
-//            case R.id.get_started:
-//                Intent intent = new Intent(getApplicationContext(), Login.class);
-//                startActivity(intent);
-//                break;
-//            case R.id.sign_in_button:
-//                signIn();
-//                break;
-//        }
-//
-//    }
-//
-//
-//    private void signIn() {
-//        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
-//        startActivityForResult(signInIntent, RC_SIGN_IN);
-//    }
-//
-//    @Override
-//    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-//        super.onActivityResult(requestCode, resultCode, data);
-//
-//        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);
-//        if (requestCode == RC_SIGN_IN) {
-//            GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
-//            handleSignInResult(result);
-//        }
-//    }
-//
-//    private void handleSignInResult(GoogleSignInResult result) {
-//        Log.d(TAG, "handleSignInResult:" + result.isSuccess());
-//        if (result.isSuccess()) {
-//            // Signed in successfully, show authenticated UI.
-//            GoogleSignInAccount acct = result.getSignInAccount();
-//            mStatusTextView.setText(getString(R.string.signe
-//
-//                    d_in_fmt, acct.getDisplayName()));
-//            updateUI(true);
-//        } else {
-//            // Signed out, show unauthenticated UI.
-//            updateUI(false);
-//        }
-//    }
-//}
-//
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/TrackedBeaconAdapter.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/TrackedBeaconAdapter.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/adapter/TrackedBeaconAdapter.java	(date 1501671703000)
@@ -1,168 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.adapter;
-
-import android.databinding.DataBindingUtil;
-import android.support.design.widget.SwipeDismissBehavior;
-import android.support.v7.widget.CardView;
-import android.support.v7.widget.RecyclerView;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.databinding.ItemTrackedBeaconBinding;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-import com.ellipsonic.www.student_tracking.ui.fragment.BaseFragment;
-import com.ellipsonic.www.student_tracking.ui.fragment.TrackedBeaconsFragment;
-import com.ellipsonic.www.student_tracking.ui.view.WrapLinearLayoutManager;
-import com.ellipsonic.www.student_tracking.util.Constants;
-import com.ellipsonic.www.student_tracking.viewModel.TrackedBeaconViewModel;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * Created by vitas on 09/12/2015.
- */
-public class TrackedBeaconAdapter extends BeaconAdapter<TrackedBeaconAdapter.BindingHolder> {
-
-    private Map<String, ActionBeaconAdapter> mActionAdapters = new HashMap<>();
-
-    public TrackedBeaconAdapter(BaseFragment fragment) {
-        mFragment = fragment;
-    }
-
-    @Override
-    public BindingHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        ItemTrackedBeaconBinding beaconBinding = DataBindingUtil.inflate(
-                LayoutInflater.from(parent.getContext()),
-                R.layout.item_tracked_beacon,
-                parent,
-                false);
-        setupSwipe(beaconBinding);
-        return new BindingHolder(beaconBinding);
-    }
-
-    @Override
-    public void onBindViewHolder(BindingHolder holder, final int position) {
-        ItemTrackedBeaconBinding beaconBinding = holder.binding;
-
-        ActionBeaconAdapter adapter = new ActionBeaconAdapter((TrackedBeaconsFragment) mFragment);
-        beaconBinding.recyclerActions.setLayoutManager(new WrapLinearLayoutManager(mFragment.getActivity()));
-        beaconBinding.recyclerActions.setAdapter(adapter);
-
-        TrackedBeacon beacon = (TrackedBeacon) getItem(position);
-        adapter.setItems(beacon.getActions());
-
-        mActionAdapters.put(beacon.getId(), adapter);
-
-        holder.setOnLongClickListener(new View.OnLongClickListener() {
-            @Override
-            public boolean onLongClick(View v) {
-                if (onBeaconLongClickListener != null) {
-                    onBeaconLongClickListener.onBeaconLongClick(position);
-                }
-                return false;
-            }
-        });
-
-        beaconBinding.setViewModel(new TrackedBeaconViewModel(mFragment, beacon));
-    }
-
-
-    private void setupSwipe(ItemTrackedBeaconBinding beaconBinding) {
-
-        final SwipeDismissBehavior<CardView> swipe = new SwipeDismissBehavior();
-        swipe.setSwipeDirection(SwipeDismissBehavior.SWIPE_DIRECTION_ANY);
-        swipe.setListener(new SwipeDismissBehavior.OnDismissListener() {
-            @Override
-            public void onDismiss(View view) {
-                Log.d(Constants.TAG, "Swipe +");
-            }
-
-            @Override
-            public void onDragStateChanged(int state) {
-            }
-        });
-
-    }
-
-    public int getActionCount(String beaconId) {
-        ActionBeaconAdapter adapter = mActionAdapters.get(beaconId);
-        if (adapter != null) {
-            return adapter.getItemCount();
-        }
-        return 0;
-    }
-
-    public void removeBeaconAction(String beaconId, int id) {
-        ActionBeaconAdapter adapter = mActionAdapters.get(beaconId);
-        if (adapter != null) {
-            adapter.removeItemById(id);
-        }
-    }
-
-    public void addBeaconAction(ActionBeacon newAction) {
-        ActionBeaconAdapter adapter = mActionAdapters.get(newAction.getBeaconId());
-        if (adapter != null) {
-            adapter.addItem(newAction);
-        }
-    }
-
-    public void updateBeaconAction(ActionBeacon action) {
-        ActionBeaconAdapter adapter = mActionAdapters.get(action.getBeaconId());
-        if (adapter != null) {
-            adapter.addItem(action);
-        }
-    }
-
-    public IManagedBeacon getBeacon(int position) {
-        return (IManagedBeacon) getItem(position);
-    }
-
-    public void enableAction(String beaconId, int id, boolean enable) {
-        ActionBeaconAdapter adapter = mActionAdapters.get(beaconId);
-        if (adapter != null) {
-            ActionBeacon action = adapter.getItemById(id);
-            if (action != null) {
-                action.setIsEnabled(enable);
-                adapter.addItem(action);
-            }
-        }
-    }
-
-
-    public static class BindingHolder extends RecyclerView.ViewHolder {
-        private ItemTrackedBeaconBinding binding;
-
-        public BindingHolder(ItemTrackedBeaconBinding binding) {
-            super(binding.cardView);
-            this.binding = binding;
-        }
-
-        public void setOnLongClickListener(View.OnLongClickListener listener) {
-            binding.cardView.setOnLongClickListener(listener);
-        }
-    }
-
-}
Index: app/src/main/res/menu/activity_map_navigation_activty_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_map_navigation_activty_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_map_navigation_activty_drawer.xml	(date 1501671703000)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-    <group android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_signout"
-            android:title="SignOut" />
-    </group>
-</menu>
Index: gradlew.bat
===================================================================
--- gradlew.bat	(date 1501671703000)
+++ gradlew.bat	(date 1501671703000)
@@ -1,90 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
Index: app/src/main/res/layout/activity_register_user.xml
===================================================================
--- app/src/main/res/layout/activity_register_user.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_register_user.xml	(date 1501671703000)
@@ -1,120 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:id="@+id/activity_register"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:background="@color/purple_light"
-
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.RegisterUser">
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/firstname"
-        android:layout_width="match_parent"
-        android:textColor="@color/black"
-
-        android:layout_height="wrap_content"
-        android:layout_alignParentStart="true"
-        android:layout_alignParentTop="true"
-        android:layout_marginTop="16dp"
-        android:gravity="center_horizontal"
-        android:hint="firstname"
-        android:imeOptions="actionNext"
-        android:inputType="text" />
-
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/lastname"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:hint="lastname"
-        android:textColor="@color/black"
-
-        android:imeOptions="actionNext"
-        android:inputType="text"
-        android:layout_below="@+id/firstname"
-        android:layout_alignParentStart="true" />
-
-
-
-
-
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/email"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:ems="10"
-
-        android:gravity="center_horizontal"
-        android:hint="email"
-        android:textColor="@color/black"
-
-
-        android:inputType="textEmailAddress"
-        android:layout_below="@+id/phone"
-        android:layout_alignParentStart="true" />
-
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/phone"
-
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:textColor="@color/black"
-
-
-        android:focusableInTouchMode="true"
-        android:gravity="center_horizontal"
-        android:hint="phone"
-        android:imeOptions="actionNext"
-        android:inputType="number|numberSigned"
-        android:layout_below="@+id/lastname"
-        android:layout_alignParentStart="true" />
-
-
-    <android.support.design.widget.TextInputEditText
-
-        android:id="@+id/password"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:hint="passowrd"
-        android:textColor="@color/black"
-        android:imeOptions="actionNext"
-        android:inputType="textPassword"
-        android:layout_below="@+id/email"
-        android:layout_alignParentStart="true" />
-
-    <android.support.design.widget.TextInputEditText
-        android:id="@+id/conform"
-        android:textColor="@color/black"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:hint="conform_password"
-        android:imeOptions="actionSend"
-
-        android:inputType="textPassword"
-        android:layout_below="@+id/password"
-        android:layout_alignParentStart="true" />
-
-    <Button
-        android:text="Register"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/reg"
-        android:elevation="24dp"
-        style="@style/Widget.AppCompat.Button"
-        android:layout_alignParentBottom="true"
-        android:layout_alignParentStart="true"
-        android:layout_marginBottom="36dp" />
-
-
-
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/WebAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/WebAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/WebAction.java	(date 1501671703000)
@@ -1,58 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class WebAction extends NoneAction {
-
-    public WebAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        try {
-            Uri uri = Uri.parse(param);
-            Intent newIntent = new Intent(android.content.Intent.ACTION_VIEW, uri);
-            newIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-            context.startActivity(newIntent);
-        } catch (Exception e) {
-            return context.getString(R.string.action_urlaction_error);
-        }
-        return super.execute(context);
-    }
-
-    @Override
-    public boolean isParamRequired() {
-        return true;
-    }
-
-    @Override
-    public String toString() {
-        return "WebAction, url: " + param;
-    }
-}
Index: app/src/main/res/anim/pop_up.xml
===================================================================
--- app/src/main/res/anim/pop_up.xml	(date 1501671703000)
+++ app/src/main/res/anim/pop_up.xml	(date 1501671703000)
@@ -1,12 +0,0 @@
-<scale xmlns:android="http://schemas.android.com/apk/res/android"
-    android:duration="500"
-    android:fillAfter="true"
-    android:fromXScale="0.0"
-    android:fromYScale="0.0"
-    android:interpolator="@android:anim/bounce_interpolator"
-    android:pivotX="50%"
-    android:pivotY="50%"
-    android:shareInterpolator="true"
-    android:startOffset="200"
-    android:toXScale="1.0"
-    android:toYScale="1.0"/>
Index: app/src/main/res/drawable-v21/ic_menu_share.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_share.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_menu_share.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M18,16.08c-0.76,0 -1.44,0.3 -1.96,0.77L8.91,12.7c0.05,-0.23 0.09,-0.46 0.09,-0.7s-0.04,-0.47 -0.09,-0.7l7.05,-4.11c0.54,0.5 1.25,0.81 2.04,0.81 1.66,0 3,-1.34 3,-3s-1.34,-3 -3,-3 -3,1.34 -3,3c0,0.24 0.04,0.47 0.09,0.7L8.04,9.81C7.5,9.31 6.79,9 6,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3c0.79,0 1.5,-0.31 2.04,-0.81l7.12,4.16c-0.05,0.21 -0.08,0.43 -0.08,0.65 0,1.61 1.31,2.92 2.92,2.92 1.61,0 2.92,-1.31 2.92,-2.92s-1.31,-2.92 -2.92,-2.92z" />
-</vector>
Index: app/src/main/res/menu/activity_home_beacon_navigation_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_home_beacon_navigation_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_home_beacon_navigation_drawer.xml	(date 1501671703000)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_map"
-            android:title="Map" />
-        <item
-            android:id="@+id/nav_register"
-            android:title="Beacon_Register" />
-        <item
-            android:id="@+id/nav_edit"
-            android:title="Edit" />
-        <item
-            android:id="@+id/nav_signout"
-            android:title="SignOut" />
-
-    </group>
-
-</menu>
Index: app/src/main/res/layout/item_tracked_beacon.xml
===================================================================
--- app/src/main/res/layout/item_tracked_beacon.xml	(date 1501671703000)
+++ app/src/main/res/layout/item_tracked_beacon.xml	(date 1501671703000)
@@ -1,225 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--suppress ALL -->
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:background="@drawable/appblue">
-
-    <data>
-
-        <variable
-            name="viewModel"
-            type="com.ellipsonic.www.student_tracking.viewModel.TrackedBeaconViewModel" />
-    </data>
-
-    <android.support.v7.widget.CardView xmlns:card_view="http://schemas.android.com/apk/res-auto"
-        android:id="@+id/card_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="6dp"
-        android:layout_marginTop="1dp"
-        card_view:cardCornerRadius="3dp"
-        card_view:cardUseCompatPadding="true">
-
-
-        <LinearLayout
-            android:id="@+id/removable_item"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <RelativeLayout
-                android:id="@+id/container_parent"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical"
-                android:layout_marginLeft="12dp"
-                android:layout_marginRight="12dp"
-                android:minHeight="70dp">
-
-                <LinearLayout
-                    android:id="@+id/container_uuid"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:orientation="horizontal">
-
-                    <TextView
-                        android:id="@+id/beacon_uuid_label"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginRight="4dp"
-                        android:text="@{viewModel.nameUuid}"
-                        android:textSize="@dimen/text_small_body" />
-
-                    <TextView
-                        android:id="@+id/beacon_uuid_value"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@{viewModel.uuid}"
-                        android:textSize="@dimen/text_small_body" />
-
-                </LinearLayout>
-
-                <LinearLayout
-                    android:id="@+id/container_middle"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_below="@+id/container_uuid"
-                    android:orientation="horizontal"
-                    android:paddingBottom="6dip"
-                    android:paddingTop="1dip">
-
-                    <LinearLayout
-                        android:id="@+id/left_middle_container"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="0.8"
-                        android:orientation="vertical">
-
-                        <LinearLayout
-                            android:id="@+id/beacon_major_minor_container"
-                            android:layout_width="fill_parent"
-                            android:layout_height="wrap_content"
-                            android:baselineAligned="false"
-                            android:orientation="horizontal">
-
-                            <LinearLayout
-                                android:layout_width="fill_parent"
-                                android:layout_height="wrap_content"
-                                android:layout_weight="1.0"
-                                android:orientation="vertical"
-                                android:visibility="@{viewModel.visibilityMajor}">
-
-                                <TextView
-                                    android:id="@+id/beacon_item_major_label"
-                                    android:layout_width="wrap_content"
-                                    android:layout_height="wrap_content"
-                                    android:text="@{viewModel.nameMajor}"
-                                    android:textSize="@dimen/text_extra_small_body" />
-
-                                <TextView
-                                    android:id="@+id/beacon_item_id2_value"
-                                    android:layout_width="wrap_content"
-                                    android:layout_height="wrap_content"
-                                    android:layout_marginEnd="12dp"
-                                    android:text="@{viewModel.major}"
-                                    android:textSize="@dimen/text_small_body" />
-                            </LinearLayout>
-
-                            <LinearLayout
-                                android:id="@+id/beacon_minor_container"
-                                android:layout_width="fill_parent"
-                                android:layout_height="wrap_content"
-                                android:layout_weight="1.0"
-                                android:orientation="vertical"
-                                android:visibility="@{viewModel.visibilityMinor}">
-
-                                <TextView
-                                    android:id="@+id/beacon_item_minor_label"
-                                    android:layout_width="wrap_content"
-                                    android:layout_height="wrap_content"
-                                    android:text="@{viewModel.nameMinor}"
-                                    android:textSize="@dimen/text_extra_small_body" />
-
-                                <TextView
-                                    android:id="@+id/beacon_item_id3_value"
-                                    android:layout_width="wrap_content"
-                                    android:layout_height="wrap_content"
-                                    android:layout_marginEnd="12dp"
-                                    android:text="@{viewModel.minor}"
-                                    android:textSize="@dimen/text_small_body" />
-                            </LinearLayout>
-                        </LinearLayout>
-
-                        <TextView
-                            android:id="@+id/beacon_item_id_label"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:text="@string/mv_text_name"
-                            android:textSize="@dimen/text_extra_small_body" />
-
-                        <TextView
-                            android:id="@+id/beacon_item_id1_value"
-                            android:layout_width="wrap_content"
-                            android:layout_height="wrap_content"
-                            android:text="@{viewModel.name}"
-                            android:textSize="@dimen/text_small_body" />
-
-                    </LinearLayout>
-
-                    <LinearLayout
-                        android:id="@+id/right_middle_container"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="0.8"
-                        android:orientation="vertical">
-
-                        <LinearLayout
-                            android:layout_width="fill_parent"
-                            android:layout_height="wrap_content"
-                            android:orientation="horizontal"
-                            android:gravity="right">
-
-                            <TextView
-                                android:id="@+id/beacon_item_rssi_label"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:text="@string/mv_text_rssi"
-                                android:textSize="@dimen/text_extra_small_body" />
-
-                            <TextView
-                                android:id="@+id/beacon_item_proximity"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:layout_marginStart="12dp"
-                                android:text="@{viewModel.proximity}"
-                                android:textColor="@{viewModel.proximityColor}"
-                                android:textSize="@dimen/text_extra_small_body" />
-                        </LinearLayout>
-
-                        <TextView
-                            android:id="@+id/beacon_item_type"
-                            android:layout_width="match_parent"
-                            android:layout_height="wrap_content"
-                            android:layout_marginTop="2dp"
-                            android:gravity="right"
-                            android:text="@{viewModel.beaconType}"
-                            android:textSize="@dimen/text_small_body" />
-
-                        <LinearLayout
-                            android:layout_width="fill_parent"
-                            android:layout_height="wrap_content"
-                            android:layout_marginTop="4dp"
-                            android:gravity="right"
-                            android:orientation="horizontal">
-
-                            <TextView
-                                android:id="@+id/beacon_item_action_name"
-                                android:layout_width="wrap_content"
-                                android:layout_height="wrap_content"
-                                android:layout_marginLeft="2dp"
-                                android:layout_gravity="right"
-                                android:clickable="true"
-                                android:onClick="@{viewModel.onClickBeaconAdd}"
-                                android:text="@string/action_add_action"
-                                android:textColor="@color/hn_orange"
-                                android:textSize="@dimen/text_body" />
-                        </LinearLayout>
-
-
-                    </LinearLayout>
-
-
-
-                </LinearLayout>
-
-
-            </RelativeLayout>
-
-            <android.support.v7.widget.RecyclerView
-                android:id="@+id/recycler_actions"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" />
-
-        </LinearLayout>
-
-    </android.support.v7.widget.CardView>
-
-</layout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_login2.xml
===================================================================
--- app/src/main/res/layout/activity_login2.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_login2.xml	(date 1501671703000)
@@ -1,94 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/purple_light"
-    tools:context="com.samebits.beacon.locator.ui.activity.Login">
-
-
-        <android.support.design.widget.TextInputEditText
-            android:id="@+id/login_password"
-            android:textColor="@color/black"
-
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:ems="10"
-            android:gravity="center_horizontal"
-            android:hint="password"
-            android:inputType="textPassword"
-            android:layout_below="@+id/phone"
-            android:layout_alignParentStart="true"
-            app:layout_constraintLeft_toLeftOf="parent"
-            app:layout_constraintRight_toRightOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            android:layout_marginTop="8dp"
-            app:layout_constraintBottom_toBottomOf="parent"
-            android:layout_marginBottom="8dp"
-            app:layout_constraintVertical_bias="0.25"
-            app:layout_constraintHorizontal_bias="0.0" />
-
-
-
-
-
-        <android.support.design.widget.TextInputEditText
-            android:id="@+id/login_email"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:ems="10"
-            android:textColor="@color/black"
-            android:gravity="center_horizontal"
-            android:hint="email"
-            android:inputType="textEmailAddress"
-            android:layout_below="@+id/phone"
-            android:layout_alignParentStart="true"
-            app:layout_constraintLeft_toLeftOf="parent"
-            app:layout_constraintRight_toRightOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            android:layout_marginTop="8dp"
-            app:layout_constraintBottom_toBottomOf="parent"
-            android:layout_marginBottom="8dp"
-            app:layout_constraintVertical_bias="0.146"
-            app:layout_constraintHorizontal_bias="0.0" />
-
-
-        <Button
-            android:text="login"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:id="@+id/login"
-            android:elevation="24sp"
-            style="@style/Widget.AppCompat.Button"
-            android:layout_centerVertical="true"
-            android:layout_alignParentStart="true"
-            app:layout_constraintLeft_toLeftOf="parent"
-            app:layout_constraintRight_toRightOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            android:layout_marginTop="267dp"
-            android:layout_marginRight="8dp"
-            android:layout_marginLeft="8dp"
-            app:layout_constraintHorizontal_bias="0.0"
-            android:layout_marginStart="8dp"
-            android:layout_marginEnd="8dp" />
-        <TextView
-            android:id="@+id/signup"
-            android:layout_width="0dp"
-            android:layout_height="30sp"
-            android:text="Dont you have account yet? Register Here"
-            android:layout_marginRight="8sp"
-            app:layout_constraintRight_toRightOf="parent"
-            android:layout_marginLeft="8sp"
-            app:layout_constraintLeft_toLeftOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            android:layout_marginTop="344sp"
-            android:layout_marginStart="8sp"
-            android:textSize="15sp"
-            android:gravity="center_horizontal"
-            android:layout_marginEnd="8sp"
-            app:layout_constraintHorizontal_bias="0.0"
-            tools:layout_editor_absoluteX="8sp" />
-
-
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/action/SilentOffAction.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/action/SilentOffAction.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/action/SilentOffAction.java	(date 1501671703000)
@@ -1,51 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.action;
-import android.content.Context;
-import android.media.AudioManager;
-
-import com.ellipsonic.www.student_tracking.model.NotificationAction;
-import com.ellipsonic.www.student_tracking.util.PreferencesUtil;
-
-/**
- * Created by vitas on 03/01/16.
- */
-public class SilentOffAction extends NoneAction {
-
-
-    public SilentOffAction(String param, NotificationAction notification) {
-        super(param, notification);
-    }
-
-    @Override
-    public String execute(Context context) {
-        final AudioManager audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
-        int ringerMode = audioManager.getRingerMode();
-        int old_mode = PreferencesUtil.getSilentModeProfile(context);
-        if (ringerMode != AudioManager.RINGER_MODE_VIBRATE) {
-            audioManager.setRingerMode(AudioManager.RINGER_MODE_NORMAL);
-        }
-        return super.execute(context);
-    }
-
-    @Override
-    public String toString() {
-        return "SilentOffAction, param: " + param;
-    }
-}
Index: app/src/main/res/layout/app_bar_main_navigation1.xml
===================================================================
--- app/src/main/res/layout/app_bar_main_navigation1.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_main_navigation1.xml	(date 1501671703000)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical" android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-
-
-
-    <include
-        android:id="@+id/include"
-        layout="@layout/content_main_navigation"></include>
-</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/TrackedBeaconsFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/TrackedBeaconsFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/TrackedBeaconsFragment.java	(date 1501671703000)
@@ -1,310 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v4.widget.SwipeRefreshLayout;
-import android.support.v7.app.ActionBar;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.support.v7.widget.Toolbar;
-import android.support.v7.widget.helper.ItemTouchHelper;
-import android.view.ContextMenu;
-import android.view.LayoutInflater;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.ViewStub;
-import android.widget.ProgressBar;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.data.DataManager;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-import com.ellipsonic.www.student_tracking.ui.adapter.BeaconAdapter;
-import com.ellipsonic.www.student_tracking.ui.adapter.TrackedBeaconAdapter;
-import com.ellipsonic.www.student_tracking.ui.view.ContextMenuRecyclerView;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-import butterknife.Bind;
-import butterknife.ButterKnife;
-
-
-/**
- * Created by vitas on 9/11/15.
- */
-public class TrackedBeaconsFragment extends BaseFragment implements SwipeRefreshLayout.OnRefreshListener, BeaconAdapter.OnBeaconLongClickListener {
-
-    @Bind(R.id.recycler_beacons)
-    ContextMenuRecyclerView mListBeacons;
-    @Bind(R.id.progress_indicator)
-    ProgressBar mProgressBar;
-    @Bind(R.id.empty_view)
-    ViewStub mEmpty;
-    EmptyView mEmptyView;
-    @Bind(R.id.toolbar)
-    Toolbar mToolbar;
-    private TrackedBeaconAdapter mBeaconsAdapter;
-    private DataManager mDataManager;
-
-    public static TrackedBeaconsFragment newInstance() {
-        TrackedBeaconsFragment beaconsFragment = new TrackedBeaconsFragment();
-        return beaconsFragment;
-    }
-
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mDataManager = Student_Tracking.from(getActivity()).getComponent().dataManager();
-        mBeaconsAdapter = new TrackedBeaconAdapter(this);
-        mBeaconsAdapter.setOnBeaconLongClickListener(this);
-        setRetainInstance(true);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View fragmentView = inflater.inflate(R.layout.fragment_tracked_beacons, container, false);
-        ButterKnife.bind(this, fragmentView);
-
-        setupToolbar();
-        setupRecyclerView();
-
-        //setupSwipe();
-        loadBeacons();
-
-        return fragmentView;
-    }
-
-
-    @Override
-    public void onDestroyView() {
-        super.onDestroyView();
-        ButterKnife.unbind(this);
-    }
-
-    private void setupToolbar() {
-        ((AppCompatActivity) getActivity()).setSupportActionBar(mToolbar);
-        ActionBar actionBar = ((AppCompatActivity) getActivity()).getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setDisplayShowTitleEnabled(true);
-            actionBar.setTitle(R.string.title_fragment_tracked_beacons);
-        }
-    }
-
-    private void setupRecyclerView() {
-        View viewFromEmpty = mEmpty.inflate();
-        mEmptyView = new EmptyView(viewFromEmpty);
-        mEmptyView.text.setText(getString(R.string.text_empty_list_tracked_beacons));
-
-        mListBeacons.setLayoutManager(new LinearLayoutManager(getActivity()));
-        mListBeacons.setHasFixedSize(true);
-        mListBeacons.setAdapter(mBeaconsAdapter);
-
-        registerForContextMenu(mListBeacons);
-
-        mProgressBar.setVisibility(View.GONE);
-
-    }
-
-    private void setupSwipe() {
-
-        ItemTouchHelper swipeToDismissTouchHelper = new ItemTouchHelper(new UndoSwipableCallback(
-                ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT));
-        swipeToDismissTouchHelper.attachToRecyclerView(mListBeacons);
-    }
-
-    private void emptyListUpdate() {
-        if (mBeaconsAdapter.getItemCount() == 0) {
-            mEmpty.setVisibility(View.VISIBLE);
-            mEmptyView.text.setText(getString(R.string.text_empty_list_tracked_beacons));
-        } else {
-            mEmpty.setVisibility(View.GONE);
-        }
-    }
-
-    private void loadBeacons() {
-        showLoadingViews();
-
-        mBeaconsAdapter.insertBeacons(mDataManager.getAllBeacons());
-
-        getExtras();
-
-        emptyListUpdate();
-        hideLoadingViews();
-    }
-
-    private void getExtras() {
-        if (getArguments() != null && !getArguments().isEmpty()) {
-
-            TrackedBeacon beacon = getArguments().getParcelable(Constants.ARG_BEACON);
-            if (beacon != null) {
-                if (!mBeaconsAdapter.isItemExists(beacon.getId())) {
-                    if (mDataManager.createBeacon(beacon)) {
-                        mBeaconsAdapter.insertBeacon(beacon);
-                    } else {
-                        //TODO
-                    }
-                } else {
-                    //TODO make selection of updated
-                    if (mDataManager.updateBeacon(beacon)) {
-                        mBeaconsAdapter.insertBeacon(beacon);
-                    } else {
-                        //TODO
-                    }
-                }
-            }
-        }
-    }
-
-    public void removeBeacon(String beaconId) {
-        if (mDataManager.deleteBeacon(beaconId, true)) {
-            mBeaconsAdapter.removeBeaconById(beaconId);
-        } else {
-            //TODO error
-        }
-        emptyListUpdate();
-    }
-
-    public void removeBeaconAction(String beaconId, int id) {
-        if (mDataManager.deleteBeaconAction(id)) {
-            mBeaconsAdapter.removeBeaconAction(beaconId, id);
-        } else {
-            //TODO error
-        }
-    }
-
-    public void newBeaconAction(String beaconId) {
-        String defName = getString(R.string.pref_bd_default_name);
-        int actionCount = mBeaconsAdapter.getActionCount(beaconId);
-
-        if (actionCount > 0) {
-            defName += " (" + actionCount + ")";
-        }
-
-        ActionBeacon newAction = new ActionBeacon(beaconId, defName);
-        if (mDataManager.createBeaconAction(newAction)) {
-            mBeaconsAdapter.addBeaconAction(newAction);
-        } else {
-            //FIXME error
-        }
-    }
-
-    public void enableBeaconAction(String beaconId, int id, boolean enable) {
-        if (mDataManager.enableBeaconAction(id, enable)) {
-            mBeaconsAdapter.enableAction(beaconId, id, enable);
-        } else {
-            //TODO error
-        }
-    }
-
-    @Override
-    public void onRefresh() {
-        loadBeacons();
-    }
-
-    private void hideLoadingViews() {
-        if (mProgressBar != null) {
-            mProgressBar.setVisibility(View.GONE);
-        }
-    }
-
-    private void showLoadingViews() {
-        if (mProgressBar != null) {
-            mProgressBar.setVisibility(View.VISIBLE);
-        }
-    }
-
-    @Override
-    public void onBeaconLongClick(int position) {
-        mListBeacons.openContextMenu(position);
-    }
-
-
-    @Override
-    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (resultCode == Activity.RESULT_OK && requestCode == Constants.REQ_UPDATED_ACTION_BEACON) {
-            if (data != null && data.hasExtra(Constants.ARG_ACTION_BEACON)) {
-                ActionBeacon actionBeacon = data.getParcelableExtra(Constants.ARG_ACTION_BEACON);
-                if (actionBeacon != null) {
-                    //TODO check if isDirty, now we store always even no changes
-                    if (mDataManager.updateBeaconAction(actionBeacon)) {
-                        mBeaconsAdapter.updateBeaconAction(actionBeacon);
-                    } else {
-                        //TODO error
-                    }
-                }
-            }
-        }
-        super.onActivityResult(requestCode, resultCode, data);
-    }
-
-    @Override
-    public void onCreateContextMenu(ContextMenu menu, View view, ContextMenu.ContextMenuInfo
-            menuInfo) {
-
-        super.onCreateContextMenu(menu, view, menuInfo);
-        MenuInflater inflater = getActivity().getMenuInflater();
-        inflater.inflate(R.menu.menu_tracked_list, menu);
-    }
-
-    @Override
-    public boolean onContextItemSelected(MenuItem item) {
-        ContextMenuRecyclerView.RecyclerContextMenuInfo info = (ContextMenuRecyclerView
-                .RecyclerContextMenuInfo) item
-                .getMenuInfo();
-
-        switch (item.getItemId()) {
-            case R.id.action_add:
-                newBeaconAction(mBeaconsAdapter.getBeacon(info.position).getId());
-                return true;
-            case R.id.action_delete:
-                removeBeacon(mBeaconsAdapter.getBeacon(info.position).getId());
-                return true;
-            default:
-                return super.onOptionsItemSelected(item);
-        }
-
-    }
-
-    class UndoSwipableCallback extends ItemTouchHelper.SimpleCallback {
-
-        public UndoSwipableCallback(int dragDirs, int swipeDirs) {
-            super(dragDirs, swipeDirs);
-        }
-
-        @Override
-        public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {
-            return false;
-        }
-
-        @Override
-        public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
-            mBeaconsAdapter.removeBeacon(viewHolder.getAdapterPosition());
-        }
-
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/DetectedBeaconViewModel.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/DetectedBeaconViewModel.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/viewModel/DetectedBeaconViewModel.java	(date 1501671703000)
@@ -1,45 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.viewModel;
-
-import android.content.Intent;
-import android.support.annotation.NonNull;
-
-import com.ellipsonic.www.student_tracking.model.IManagedBeacon;
-import com.ellipsonic.www.student_tracking.model.TrackedBeacon;
-import com.ellipsonic.www.student_tracking.ui.activity.NewMainNavigationActivity;
-import com.ellipsonic.www.student_tracking.ui.fragment.BaseFragment;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-/**
- * Created by vitas on 19/10/15.
- */
-public class DetectedBeaconViewModel extends BeaconViewModel {
-
-    public DetectedBeaconViewModel(@NonNull BaseFragment fragment, @NonNull IManagedBeacon managedBeacon) {
-        super(fragment, managedBeacon);
-    }
-
-    protected void launchBeaconDetailsActivity() {
-        //find better way to change fragment from scan to tracked
-        Intent intent = NewMainNavigationActivity.getStartIntent(mFragment.getActivity());
-        intent.putExtra(Constants.ARG_BEACON, new TrackedBeacon(mManagedBeacon));
-        mFragment.startActivity(intent);
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/injection/module/DataModule.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/injection/module/DataModule.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/injection/module/DataModule.java	(date 1501671703000)
@@ -1,47 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.injection.module;
-
-import android.content.Context;
-
-import com.ellipsonic.www.student_tracking.data.NewDbStoreService;
-
-import com.ellipsonic.www.student_tracking.data.StoreService;
-import com.ellipsonic.www.student_tracking.injection.UserScope;
-
-import dagger.Module;
-import dagger.Provides;
-
-/**
- * Created by vitas on 20/12/15.
- */
-@Module
-public class DataModule {
-    private Context mContext;
-
-    public DataModule(Context context) {
-        mContext = context;
-    }
-
-    @Provides
-    @UserScope
-    StoreService provideStoreService() {
-        return new NewDbStoreService(mContext);
-    }
-}
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/RadarScanView.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/RadarScanView.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/view/RadarScanView.java	(date 1501671703000)
@@ -1,396 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.view;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Paint.Align;
-import android.graphics.Paint.Style;
-import android.graphics.Rect;
-import android.graphics.drawable.BitmapDrawable;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorEventListener;
-import android.hardware.SensorManager;
-import android.os.SystemClock;
-import android.support.v4.content.ContextCompat;
-import android.util.AttributeSet;
-import android.view.View;
-import android.view.WindowManager;
-import android.widget.TextView;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.DetectedBeacon;
-import com.ellipsonic.www.student_tracking.util.AngleLowpassFilter;
-
-import org.altbeacon.beacon.Beacon;
-
-import java.text.DecimalFormat;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.Map;
-
-public class RadarScanView extends View implements SensorEventListener {
-    private final static int RADAR_RADIS_VISION_METERS = 15;
-    private static String mMetricDisplayFormat = "%.0fm";
-    private static String mEnglishDisplayFormat = "%.0fft";
-    private static float METER_PER_FEET = 0.3048f;
-    private static float FEET_PER_METER = 3.28084f;
-
-    private float mDistanceRatio = 1.0f;
-    private float[] mLastAccelerometer = new float[3];
-    private float[] mLastMagnetometer = new float[3];
-    private boolean mLastAccelerometerSet = false;
-    private boolean mLastMagnetometerSet = false;
-    private float[] mOrientation = new float[3];
-    private AngleLowpassFilter angleLowpassFilter = new AngleLowpassFilter();
-    private float mLast_bearing;
-    private Context mContext;
-    private WindowManager mWindowManager;
-    private Map<String, DetectedBeacon> mBeacons = new LinkedHashMap();
-    private boolean mHaveDetected = false;
-    private TextView mInfoView;
-    private Rect mTextBounds = new Rect();
-    private Paint mGridPaint;
-    private Paint mErasePaint;
-    private Bitmap mBlip;
-    private boolean mUseMetric;
-    /**
-     * Used to draw the animated ring that sweeps out from the center
-     */
-    private Paint mSweepPaint0;
-    /**
-     * Used to draw the animated ring that sweeps out from the center
-     */
-    private Paint mSweepPaint1;
-    /**
-     * Used to draw the animated ring that sweeps out from the center
-     */
-    private Paint mSweepPaint2;
-    /**
-     * Used to draw a beacon
-     */
-    private Paint mBeaconPaint;
-    /**
-     * Time in millis when the most recent sweep began
-     */
-    private long mSweepTime;
-    /**
-     * True if the sweep has not yet intersected the blip
-     */
-    private boolean mSweepBefore;
-    /**
-     * Time in millis when the sweep last crossed the blip
-     */
-    private long mBlipTime;
-
-    public RadarScanView(Context context) {
-        this(context, null);
-    }
-
-    public RadarScanView(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public RadarScanView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-
-        mContext = context;
-        mWindowManager = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);
-
-        // Paint used for the rings and ring text
-        mGridPaint = new Paint();
-        mGridPaint.setColor(getResources().getColor(R.color.hn_orange_lighter));
-
-        mGridPaint.setAntiAlias(true);
-        mGridPaint.setStyle(Style.STROKE);
-        mGridPaint.setStrokeWidth(2.0f);
-        mGridPaint.setTextSize(16.0f);
-        mGridPaint.setTextAlign(Align.CENTER);
-
-        // Paint used to erase the rectangle behind the ring text
-        mErasePaint = new Paint();
-        mErasePaint.setColor(getResources().getColor(R.color.white));
-        //mErasePaint.setColor(getResources().getColor(R.color.hn_orange_lighter));
-
-        mErasePaint.setStyle(Style.FILL);
-
-        mBeaconPaint = new Paint();
-        mBeaconPaint.setColor(getResources().getColor(R.color.white));
-        mBeaconPaint.setAntiAlias(true);
-        mBeaconPaint.setStyle(Style.FILL_AND_STROKE);
-
-        // Outer ring of the sweep
-        mSweepPaint0 = new Paint();
-        mSweepPaint0.setColor(ContextCompat.getColor(context, R.color.hn_orange));
-        mSweepPaint0.setAntiAlias(true);
-        mSweepPaint0.setStyle(Style.STROKE);
-        mSweepPaint0.setStrokeWidth(3f);
-
-        // Middle ring of the sweep
-        mSweepPaint1 = new Paint();
-        mSweepPaint1.setColor(ContextCompat.getColor(context, R.color.hn_orange));
-
-        mSweepPaint1.setAntiAlias(true);
-        mSweepPaint1.setStyle(Style.STROKE);
-        mSweepPaint1.setStrokeWidth(3f);
-
-        // Inner ring of the sweep
-        mSweepPaint2 = new Paint();
-        mSweepPaint2.setColor(ContextCompat.getColor(context, R.color.hn_orange));
-
-        mSweepPaint2.setAntiAlias(true);
-        mSweepPaint2.setStyle(Style.STROKE);
-        mSweepPaint2.setStrokeWidth(3f);
-
-        mBlip = ((BitmapDrawable) ContextCompat.getDrawable(context, R.drawable.ic_location_on_black_24dp)).getBitmap();
-
-    }
-
-    /**
-     * Sets the view that we will use to report distance
-     *
-     * @param t The text view used to report distance
-     */
-    public void setDistanceView(TextView t) {
-        mInfoView = t;
-    }
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        int center = getWidth() / 2;
-        int radius = center - 8;
-
-        // Draw the rings
-        final Paint gridPaint = mGridPaint;
-        canvas.drawCircle(center, center, radius, gridPaint);
-        canvas.drawCircle(center, center, radius * 3 / 4, gridPaint);
-        canvas.drawCircle(center, center, radius >> 1, gridPaint);
-        canvas.drawCircle(center, center, radius >> 2, gridPaint);
-
-        int blipRadius = (int) (mDistanceRatio * radius);
-
-        final long now = SystemClock.uptimeMillis();
-        if (mSweepTime > 0) {
-            // Draw the sweep. Radius is determined by how long ago it started
-            long sweepDifference = now - mSweepTime;
-            if (sweepDifference < 512L) {
-                int sweepRadius = (int) (((radius + 6) * sweepDifference) >> 9);
-                canvas.drawCircle(center, center, sweepRadius, mSweepPaint0);
-                canvas.drawCircle(center, center, sweepRadius - 2, mSweepPaint1);
-                canvas.drawCircle(center, center, sweepRadius - 4, mSweepPaint2);
-
-                // Note when the sweep has passed the blip
-                boolean before = sweepRadius < blipRadius;
-                if (!before && mSweepBefore) {
-                    mSweepBefore = false;
-                    mBlipTime = now;
-                }
-            } else {
-                mSweepTime = now + 1000;
-                mSweepBefore = true;
-            }
-            postInvalidate();
-        }
-
-        // Draw horizontal and vertical lines
-        canvas.drawLine(center, center - (radius >> 2) + 6, center, center - radius - 6, gridPaint);
-        canvas.drawLine(center, center + (radius >> 2) - 6, center, center + radius + 6, gridPaint);
-        canvas.drawLine(center - (radius >> 2) + 6, center, center - radius - 6, center, gridPaint);
-        canvas.drawLine(center + (radius >> 2) - 6, center, center + radius + 6, center, gridPaint);
-
-        // Draw X in the center of the screen
-        canvas.drawLine(center - 4, center - 4, center + 4, center + 4, gridPaint);
-        canvas.drawLine(center - 4, center + 4, center + 4, center - 4, gridPaint);
-
-        if (mHaveDetected) {
-
-            // Draw the blip. Alpha is based on how long ago the sweep crossed the blip
-            long blipDifference = now - mBlipTime;
-            gridPaint.setAlpha(255 - (int) ((128 * blipDifference) >> 10));
-
-            double bearingToTarget = mLast_bearing;
-            double drawingAngle = Math.toRadians(bearingToTarget) - (Math.PI / 2);
-            float cos = (float) Math.cos(drawingAngle);
-            float sin = (float) Math.sin(drawingAngle);
-
-            addText(canvas, getRatioDistanceText(0.25f), center, center + (radius >> 2));
-            addText(canvas, getRatioDistanceText(0.5f), center, center + (radius >> 1));
-            addText(canvas, getRatioDistanceText(0.75f), center, center + radius * 3 / 4);
-            addText(canvas, getRatioDistanceText(1.0f), center, center + radius);
-
-            for (Map.Entry<String, DetectedBeacon> entry : mBeacons.entrySet()) {
-                //String key = entry.getKey();
-                DetectedBeacon dBeacon = entry.getValue();
-                System.out.println("value: " + dBeacon);
-
-                // drawing the beacon
-                if (((System.currentTimeMillis() - dBeacon.getTimeLastSeen()) / 1000 < 5)) {
-                    canvas.drawBitmap(mBlip, center + (cos * distanceToPix(dBeacon.getDistance())) - 8,
-                            center + (sin * distanceToPix(dBeacon.getDistance())) - 8, gridPaint);
-                }
-            }
-
-            gridPaint.setAlpha(255);
-        }
-    }
-
-    private String getRatioDistanceText(float ringRation) {
-        return new DecimalFormat("##0.00").format(RADAR_RADIS_VISION_METERS * mDistanceRatio * ringRation);
-    }
-
-    /**
-     * max radar range is 15 meters
-     *
-     * @param distance
-     * @return distance in px
-     */
-    private float distanceToPix(double distance) {
-        int center = getWidth() / 2;
-        int radius = center - 8;
-        return Math.round((radius * distance) / RADAR_RADIS_VISION_METERS * mDistanceRatio);
-    }
-
-    private void addText(Canvas canvas, String str, int x, int y) {
-        mGridPaint.getTextBounds(str, 0, str.length(), mTextBounds);
-        mTextBounds.offset(x - (mTextBounds.width() >> 1), y);
-        mTextBounds.inset(-2, -2);
-        canvas.drawRect(mTextBounds, mErasePaint);
-        canvas.drawText(str, x, y, mGridPaint);
-    }
-
-
-    /**
-     * Update state to reflect whether we are using metric or standard units.
-     *
-     * @param useMetric True if the display should use metric units
-     */
-    public void setUseMetric(boolean useMetric) {
-        mUseMetric = useMetric;
-        if (mHaveDetected) {
-            // TODO
-        }
-    }
-
-    @Override
-    public void onSensorChanged(SensorEvent event) {
-        calcBearing(event);
-    }
-
-    private synchronized void calcBearing(SensorEvent event) {
-
-        if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
-            System.arraycopy(event.values, 0, mLastAccelerometer, 0, event.values.length);
-            mLastAccelerometerSet = true;
-        } else if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD) {
-            System.arraycopy(event.values, 0, mLastMagnetometer, 0, event.values.length);
-            mLastMagnetometerSet = true;
-        }
-        if (mLastAccelerometerSet && mLastMagnetometerSet) {
-
-            /* Create rotation Matrix */
-            float[] rotationMatrix = new float[9];
-            if (SensorManager.getRotationMatrix(rotationMatrix, null,
-                    mLastAccelerometer, mLastMagnetometer)) {
-                SensorManager.getOrientation(rotationMatrix, mOrientation);
-
-                float azimuthInRadians = mOrientation[0];
-
-                angleLowpassFilter.add(azimuthInRadians);
-
-                mLast_bearing = (float) (Math.toDegrees(angleLowpassFilter.average()) + 360) % 360;
-
-                postInvalidate();
-
-                //Log.d(Constants.TAG, "orientation bearing: " + mLast_bearing);
-
-            }
-        }
-    }
-
-    @Override
-    public void onAccuracyChanged(Sensor sensor, int accuracy) {
-
-    }
-
-    private void insertBeacons(Collection<Beacon> beacons) {
-        Iterator<Beacon> iterator = beacons.iterator();
-        while (iterator.hasNext()) {
-            DetectedBeacon dBeacon = new DetectedBeacon(iterator.next());
-            dBeacon.setTimeLastSeen(System.currentTimeMillis());
-            this.mBeacons.put(dBeacon.getId(), dBeacon);
-        }
-    }
-
-    public void onDetectedBeacons(final Collection<Beacon> beacons) {
-
-        insertBeacons(beacons);
-
-        updateDistances();
-
-        updateBeaconsInfo(beacons);
-
-        invalidate();
-    }
-
-    private void updateBeaconsInfo(final Collection<Beacon> beacons) {
-        mInfoView.setText(String.format(getResources().getString(R.string.text_scanner_found_beacons_size), beacons.size()));
-    }
-
-    /**
-     * update on radar
-     */
-    private void updateDistances() {
-        if (!mHaveDetected) {
-            mHaveDetected = true;
-        }
-    }
-
-    private void updateDistanceText(double distanceM) {
-        String displayDistance;
-        if (mUseMetric) {
-            displayDistance = String.format(mMetricDisplayFormat, distanceM);
-        } else {
-            displayDistance = String.format(mEnglishDisplayFormat, distanceM * FEET_PER_METER);
-        }
-        mInfoView.setText(displayDistance);
-    }
-
-    /**
-     * Turn on the sweep animation starting with the next draw
-     */
-    public void startSweep() {
-        mInfoView.setText(R.string.text_scanning);
-        mSweepTime = SystemClock.uptimeMillis();
-        mSweepBefore = true;
-    }
-
-    /**
-     * Turn off the sweep animation
-     */
-    public void stopSweep() {
-        mSweepTime = 0L;
-        mInfoView.setText("");
-    }
-
-}
Index: app/src/main/res/menu/activity_welcome_page_drawer.xml
===================================================================
--- app/src/main/res/menu/activity_welcome_page_drawer.xml	(date 1501671703000)
+++ app/src/main/res/menu/activity_welcome_page_drawer.xml	(date 1501671703000)
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <group android:checkableBehavior="single">
-        <item
-            android:id="@+id/nav_camera"
-            android:icon="@drawable/ic_menu_camera"
-            android:title="Student Tracking" />
-        <item
-            android:id="@+id/nav_gallery"
-            android:icon="@drawable/ic_menu_gallery"
-            android:title="Smart HW" />
-        <item
-            android:id="@+id/nav_slideshow"
-            android:icon="@drawable/ic_menu_slideshow"
-            android:title="Online Tut" />
-        <item
-            android:id="@+id/nav_manage"
-            android:icon="@drawable/ic_menu_manage"
-            android:title="Feedback" />
-        <item
-            android:id="@+id/nav_events"
-            android:icon="@drawable/ic_menu_share"
-            android:title="Events" />
-        <item
-            android:id="@+id/nav_settings"
-            android:icon="@drawable/ic_menu_send"
-            android:title="Settings" />
-    </group>
-
-    <item android:title="User Action">
-        <menu>
-            <item
-                android:id="@+id/logout"
-                android:icon="@drawable/ic_menu_share"
-                android:title="logout" />
-   <!--         <item
-                android:id="@+id/nav_send"
-                android:icon="@drawable/ic_menu_send"
-                android:title="Send" />
-                -->
-        </menu>
-    </item>
-
-</menu>
Index: app/src/main/res/layout/app_bar_map_page.xml
===================================================================
--- app/src/main/res/layout/app_bar_map_page.xml	(date 1501671703000)
+++ app/src/main/res/layout/app_bar_map_page.xml	(date 1501671703000)
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MapPage">
-
-    <android.support.design.widget.AppBarLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:theme="@style/AppTheme.AppBarOverlay">
-
-        <android.support.v7.widget.Toolbar
-            android:id="@+id/toolbar"
-            android:text="Treack_Beacon"
-            android:layout_width="match_parent"
-            android:layout_height="?attr/actionBarSize"
-            android:background="?attr/colorPrimary"
-            app:popupTheme="@style/AppTheme.PopupOverlay" />
-
-    </android.support.design.widget.AppBarLayout>
-
-    <android.support.design.widget.FloatingActionButton
-        android:id="@+id/fab"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom|end"
-        android:layout_margin="@dimen/fab_margin"
-        app:srcCompat="@android:drawable/ic_dialog_email" />
-
-    <include layout="@layout/content_home__beacon" />
-
-</android.support.design.widget.CoordinatorLayout>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/I_MainActivity.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/I_MainActivity.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/I_MainActivity.java	(date 1501671703000)
@@ -1,77 +0,0 @@
-//package com.ellipsonic.www.student_tracking.ibeaconreference;
-//
-//import android.app.Activity;
-//import android.app.AlertDialog;
-//import android.content.DialogInterface;
-//import android.content.Intent;
-//import android.os.Build;
-//import android.os.Bundle;
-//import android.util.Log;
-//import android.view.View;
-//
-//import com.ellipsonic.smartstudent.R;
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconManager;
-//
-//
-//public class I_MainActivity extends Activity {
-//	protected static final String TAG = "I_MainActivity";
-//
-//	@Override
-//	protected void onCreate(Bundle savedInstanceState) {
-//		Log.d(TAG, "oncreate");
-//		super.onCreate(savedInstanceState);
-//		setContentView(R.layout.activity_main_one);
-//		verifyBluetooth();
-//
-//	}
-//
-//	public void onMonitoringClicked(View view) {
-//		Intent myIntent = new Intent(this, com.ellipsonic.smartstudent.Activity.RegisterActivity.class);
-//		this.startActivity(myIntent);
-//	}
-//
-//	private void verifyBluetooth() {
-//
-//		try {
-//			if (!IBeaconManager.getInstanceForApplication(this).checkAvailability()) {
-//				final AlertDialog.Builder builder = new AlertDialog.Builder(this);
-//				builder.setTitle("Bluetooth not enabled");
-//				builder.setMessage("Please enable bluetooth in settings and restart this application.");
-//				builder.setPositiveButton(android.R.string.ok, null);
-//				if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
-//					builder.setOnDismissListener(new DialogInterface.OnDismissListener() {
-//
-//                        @Override
-//                        public void onDismiss(DialogInterface dialog) {
-//                            finish();
-//                            System.exit(0);
-//                        }
-//
-//                    });
-//				}
-//				builder.show();
-//
-//			}
-//		} catch (RuntimeException e) {
-//			final AlertDialog.Builder builder = new AlertDialog.Builder(this);
-//			builder.setTitle("Bluetooth LE not available");
-//			builder.setMessage("Sorry, this device does not support Bluetooth LE.");
-//			builder.setPositiveButton(android.R.string.ok, null);
-//			if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
-//				builder.setOnDismissListener(new DialogInterface.OnDismissListener() {
-//
-//                    @Override
-//                    public void onDismiss(DialogInterface dialog) {
-//                        finish();
-//                        System.exit(0);
-//                    }
-//
-//                });
-//			}
-//			builder.show();
-//
-//		}
-//
-//	}
-//
-//}
Index: app/src/main/res/drawable-v21/ic_menu_gallery.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_menu_gallery.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_menu_gallery.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M22,16V4c0,-1.1 -0.9,-2 -2,-2H8c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2zm-11,-4l2.03,2.71L16,11l4,5H8l3,-4zM2,6v14c0,1.1 0.9,2 2,2h14v-2H4V6H2z" />
-</vector>
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconDetailPageFragment.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconDetailPageFragment.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ui/fragment/BeaconDetailPageFragment.java	(date 1501671703000)
@@ -1,97 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.ui.fragment;
-
-import android.os.Bundle;
-import android.support.v7.preference.EditTextPreference;
-import android.support.v7.preference.Preference;
-import android.support.v7.preference.SwitchPreferenceCompat;
-
-import com.ellipsonic.www.student_tracking.R;
-import com.ellipsonic.www.student_tracking.model.ActionRegion;
-
-import org.altbeacon.beacon.Region;
-
-
-/**
- * Created by vitas on 20/12/15.
- */
-public class BeaconDetailPageFragment extends PageBeaconFragment {
-
-
-    public static BeaconDetailPageFragment newInstance(int page) {
-        BeaconDetailPageFragment detailFragment = new BeaconDetailPageFragment();
-        return detailFragment;
-    }
-
-    @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        this.addPreferencesFromResource(R.xml.preferences_beacon_detail);
-    }
-
-    @Override
-    protected void setData() {
-
-        SwitchPreferenceCompat switch_manage = (SwitchPreferenceCompat) findPreference("bd_switch_active");
-        switch_manage.setChecked(mActionBeacon.isEnabled());
-
-        switch_manage.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof Boolean) {
-                    mActionBeacon.setIsEnabled(((Boolean) newValue).booleanValue());
-                }
-                return true;
-            }
-        });
-
-        setNameText(mActionBeacon.getName());
-
-        EditTextPreference edit_name = (EditTextPreference) findPreference("bd_name_info");
-        edit_name.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                if (newValue instanceof String) {
-                    setNameText((String) newValue);
-                }
-                return true;
-            }
-        });
-
-        Region aRegion = ActionRegion.parseRegion(mActionBeacon);
-
-        findPreference("bd_uuid_info").setSummary(aRegion.getId1().toString());
-        findPreference("bd_major_info").setSummary(aRegion.getId2().toString());
-        findPreference("bd_minor_info").setSummary(aRegion.getId3().toString());
-        findPreference("bd_bluetooth_address_info").setSummary(aRegion.getBluetoothAddress());
-
-    }
-
-    private void setNameText(String newValue) {
-        EditTextPreference name = (EditTextPreference) findPreference("bd_name_info");
-        if (newValue != null && !newValue.isEmpty()) {
-            name.setSummary(newValue);
-            mActionBeacon.setName(newValue);
-        } else {
-            name.setSummary(getString(R.string.pref_bd_default_name));
-            mActionBeacon.setName(getString(R.string.pref_bd_default_name));
-        }
-    }
-
-}
Index: app/src/main/res/layout/activity_google_main.xml
===================================================================
--- app/src/main/res/layout/activity_google_main.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_google_main.xml	(date 1501671703000)
@@ -1,70 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:tools="http://schemas.android.com/tools"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:padding="@dimen/activity_horizontal_margin"
-        tools:context="com.ellipsonic.www.student_tracking.ui.activity.GoogleMainActivity">
-
-        <LinearLayout
-            android:id="@+id/llProfile"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="20dp"
-            android:orientation="horizontal"
-            android:visibility="gone"
-            android:weightSum="3">
-
-            <ImageView
-                android:id="@+id/imgProfilePic"
-                android:layout_width="80dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1" />
-
-            <LinearLayout
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dp"
-                android:layout_weight="2"
-                android:orientation="vertical">
-
-                <TextView
-                    android:id="@+id/txtName"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:padding="5dp"
-                    android:textSize="20dp" />
-
-                <TextView
-                    android:id="@+id/txtEmail"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:padding="5dp"
-                    android:textSize="18dp" />
-            </LinearLayout>
-        </LinearLayout>
-
-        <com.google.android.gms.common.SignInButton
-            android:id="@+id/btn_sign_in"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="20dp" />
-
-        <Button
-            android:id="@+id/btn_sign_out"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="10dp"
-            android:text="@string/btn_logout_from_google"
-            android:visibility="gone" />
-
-        <Button
-            android:id="@+id/btn_revoke_access"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/btn_revoke_access"
-            android:visibility="gone" />
-    </LinearLayout>
-
-
Index: app/src/main/java/com/ellipsonic/www/student_tracking/injection/UserScope.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/injection/UserScope.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/injection/UserScope.java	(date 1501671703000)
@@ -1,32 +0,0 @@
-/*
- *
- *  Copyright (c) 2015 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.injection;
-
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-
-import javax.inject.Scope;
-
-/**
- * Created by vitas on 20/12/15.
- */
-@Scope
-@Retention(RetentionPolicy.RUNTIME)
-public @interface UserScope {
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_data_main.xml
===================================================================
--- app/src/main/res/layout/activity_data_main.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_data_main.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.DataMainActivity">
-
-</android.support.constraint.ConstraintLayout>
Index: app/src/main/res/drawable-v21/ic_notifications_black_24dp.xml
===================================================================
--- app/src/main/res/drawable-v21/ic_notifications_black_24dp.xml	(date 1501671703000)
+++ app/src/main/res/drawable-v21/ic_notifications_black_24dp.xml	(date 1501671703000)
@@ -1,9 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:viewportHeight="24.0"
-    android:viewportWidth="24.0">
-    <path
-        android:fillColor="#FF000000"
-        android:pathData="M11.5,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.9,2 2,2zm6.5,-6v-5.5c0,-3.07 -2.13,-5.64 -5,-6.32V3.5c0,-0.83 -0.67,-1.5 -1.5,-1.5S10,2.67 10,3.5v0.68c-2.87,0.68 -5,3.25 -5,6.32V16l-2,2v1h17v-1l-2,-2z" />
-</vector>
Index: app/src/main/res/layout/activity_maps.xml
===================================================================
--- app/src/main/res/layout/activity_maps.xml	(date 1501671703000)
+++ app/src/main/res/layout/activity_maps.xml	(date 1501671703000)
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context="com.ellipsonic.www.student_tracking.ui.activity.MapsActivity">
-
-
-    <fragment android:id="@+id/map"
-              android:name="com.google.android.gms.maps.SupportMapFragment"
-              xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:map="http://schemas.android.com/apk/res-auto"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="0dp"
-              android:layout_height="wrap_content"
-              tools:context="com.ellipsonic.smartstudent.Activity.MapsActivity"
-        android:layout_marginRight="8dp"
-        map:layout_constraintRight_toRightOf="parent"
-        android:layout_marginLeft="8dp"
-        map:layout_constraintLeft_toLeftOf="parent"
-        map:layout_constraintBottom_toBottomOf="parent"
-        android:layout_marginBottom="8dp"
-        map:layout_constraintTop_toTopOf="parent"
-        android:layout_marginTop="8dp"
-        map:layout_constraintHorizontal_bias="0.0"
-        map:layout_constraintVertical_bias="0.192"
-        android:layout_marginStart="8dp"
-        android:layout_marginEnd="8dp">
-
-        <Button
-            android:id="@+id/student_info"
-            android:layout_width="match_parent"
-            android:layout_height="100sp"
-            android:text=""
-            android:background="@color/purple_light"
-            android:textColor="@color/black"
-            android:layout_marginLeft="8dp"
-            app:layout_constraintLeft_toLeftOf="parent"
-            android:layout_marginRight="8dp"
-            app:layout_constraintRight_toRightOf="parent"
-            app:layout_constraintHorizontal_bias="0.0"
-            app:layout_constraintBottom_toBottomOf="parent"
-            android:layout_marginBottom="396dp" />
-
-
-    </fragment>
-
-</android.support.constraint.ConstraintLayout>
-
Index: app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/BeaconDetactorService.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/BeaconDetactorService.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/ibeaconreference/BeaconDetactorService.java	(date 1501671703000)
@@ -1,106 +0,0 @@
-//package com.ellipsonic.www.student_tracking.ibeaconreference;
-//
-//import android.app.NotificationManager;
-//import android.app.PendingIntent;
-//import android.app.Service;
-//import android.content.Context;
-//import android.content.Intent;
-//import android.os.Handler;
-//import android.os.IBinder;
-//import android.os.RemoteException;
-//import android.support.v4.app.NotificationCompat;
-//import android.util.Log;
-//
-//import com.ellipsonic.smartstudent.Activity.RegisterActivity;
-//import com.ellipsonic.smartstudent.R;
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconConsumer;
-//import com.ellipsonic.smartstudent.ibeacon.IBeaconManager;
-//import com.ellipsonic.smartstudent.ibeacon.MonitorNotifier;
-//import com.ellipsonic.smartstudent.ibeacon.Region;
-//
-//public class BeaconDetactorService extends Service implements IBeaconConsumer {
-//
-//	private IBeaconManager iBeaconManager = IBeaconManager.getInstanceForApplication(this);
-//
-//	@Override
-//	public IBinder onBind(Intent arg0) {
-//		return null;
-//	}
-//
-//	@Override
-//	public int onStartCommand(Intent intent, int flags, int startId) {
-//		return START_STICKY;
-//	}
-//
-//	@Override
-//	public void onCreate() {
-//		super.onCreate();
-//		iBeaconManager.bind(this);
-////
-//		final Handler handler = new Handler();
-//		final Runnable runnable = new Runnable() {
-//
-//			@Override
-//			public void run() {
-//				stopSelf();
-//			}
-//		};
-//		handler.postDelayed(runnable, 10000);
-//	}
-//
-//	@Override
-//	public void onDestroy() {
-//		iBeaconManager.unBind(this);
-//		super.onDestroy();
-//	}
-//
-//	@Override
-//	public void onIBeaconServiceConnect() {
-//		iBeaconManager.setMonitorNotifier(new MonitorNotifier() {
-//			@Override
-//			public void didEnterRegion(Region region) {
-//				Log.e("BeaconDetactorService", "didEnterRegion");
-//				generateNotification(BeaconDetactorService.this, region.getUniqueId()
-//						+ ": just saw this iBeacon for the first time");
-//			}
-//
-//			@Override
-//			public void didExitRegion(Region region) {
-//				Log.e("BeaconDetactorService", "didExitRegion");
-//				generateNotification(BeaconDetactorService.this, region.getUniqueId() + ": is no longer visible");
-//			}
-//
-//			@Override
-//			public void didDetermineStateForRegion(int state, Region region) {
-//				Log.e("BeaconDetactorService", "didDetermineStateForRegion:" + state);
-//			}
-//
-//		});
-//
-//		try {
-//			iBeaconManager.startMonitoringBeaconsInRegion(new Region("myMonitoringUniqueId", null, null, null));
-//		} catch (RemoteException e) {
-//			e.printStackTrace();
-//		}
-//
-//	}
-//
-//	/**
-//	 * Issues a notification to inform the user that server has sent a message.
-//	 */
-//	private static void generateNotification(Context context, String message) {
-//
-//		Intent launchIntent = new Intent(context, RegisterActivity.class).setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP
-//				| Intent.FLAG_ACTIVITY_SINGLE_TOP);
-//
-//		((NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE)).notify(
-//				0,
-//				new NotificationCompat.Builder(context).setWhen(System.currentTimeMillis())
-//						.setSmallIcon(R.mipmap.ic_launcher).setTicker(message)
-//						.setContentTitle(context.getString(R.string.app_name)).setContentText(message)
-//						.setContentIntent(PendingIntent.getActivity(context, 0, launchIntent, 0)).setAutoCancel(true)
-//						.build());
-//
-//	}
-//
-//}
\ No newline at end of file
Index: app/src/main/java/com/ellipsonic/www/student_tracking/receiver/BeaconRegionReceiver.java
===================================================================
--- app/src/main/java/com/ellipsonic/www/student_tracking/receiver/BeaconRegionReceiver.java	(date 1501671703000)
+++ app/src/main/java/com/ellipsonic/www/student_tracking/receiver/BeaconRegionReceiver.java	(date 1501671703000)
@@ -1,79 +0,0 @@
-/*
- *
- *  Copyright (c) 2016 SameBits UG. All rights reserved.
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *        http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.ellipsonic.www.student_tracking.receiver;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.util.Log;
-import android.widget.Toast;
-
-import com.ellipsonic.www.student_tracking.Student_Tracking;
-import com.ellipsonic.www.student_tracking.action.ActionExecutor;
-import com.ellipsonic.www.student_tracking.action.IAction;
-import com.ellipsonic.www.student_tracking.data.DataManager;
-import com.ellipsonic.www.student_tracking.model.ActionBeacon;
-import com.ellipsonic.www.student_tracking.model.RegionName;
-import com.ellipsonic.www.student_tracking.util.Constants;
-
-import org.altbeacon.beacon.Region;
-
-import java.util.List;
-
-
-/**
- * Created by vitas on 02/01/16.
- */
-public class BeaconRegionReceiver extends BroadcastReceiver {
-
-    ActionExecutor mActionExecutor;
-    DataManager mDataManager;
-
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        //TODO
-        if (intent.hasExtra("REGION")) {
-            Region region = intent.getParcelableExtra("REGION");
-            if (region != null) {
-                RegionName regionName = RegionName.parseString(region.getUniqueId());
-
-                mDataManager = Student_Tracking.from(context).getComponent().dataManager();
-                List<ActionBeacon> actions = mDataManager.getEnabledBeaconActionsByEvent(regionName.getEventType(), regionName.getBeaconId());
-                if (actions.size() > -2) {
-
-                    mActionExecutor = Student_Tracking.from(context).getComponent().actionExecutor();
-                    for (ActionBeacon actionBeacon : actions) {
-                        // load action from db
-                        IAction action = ActionExecutor.actionBuilder(actionBeacon.getActionType(), actionBeacon.getActionParam(), actionBeacon.getNotification());
-                        if (action != null) {
-                            String resMessage = mActionExecutor.storeAndExecute(action);
-                            if (resMessage != null ) {
-                                Toast.makeText(context, resMessage, Toast.LENGTH_LONG).show();
-                            }
-                        } else {
-                            Log.w(Constants.TAG, "Action not found for " + actionBeacon);
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-}
Index: app/src/main/res/values/dimens.xml
===================================================================
--- app/src/main/res/values/dimens.xml	(date 1501671703000)
+++ app/src/main/res/values/dimens.xml	(date 1501671703000)
@@ -1,21 +0,0 @@
-<resources>
-    <!-- Default screen margins, per the Android Design guidelines. -->
-    <dimen name="activity_horizontal_margin">6dp</dimen>
-    <dimen name="activity_vertical_margin">6dp</dimen>
-    <dimen name="fab_margin">8dp</dimen>
-
-    <dimen name="text_headline_large">30.0sp</dimen>
-    <dimen name="text_headline">24sp</dimen>
-    <dimen name="text_large_title">22sp</dimen>
-    <dimen name="text_title">20sp</dimen>
-    <dimen name="text_large_body">18sp</dimen>
-    <dimen name="text_body">16sp</dimen>
-    <dimen name="text_small_body">14sp</dimen>
-    <dimen name="text_extra_small_body">12.0sp</dimen>
-
-    <!-- Default screen margins, per the Android Design guidelines. -->
-    <dimen name="nav_header_vertical_spacing">4dp</dimen>
-    <dimen name="nav_header_height">100dp</dimen>
-
-
-</resources>
